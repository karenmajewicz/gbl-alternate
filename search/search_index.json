{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Home","text":"GeoBlacklight A multi-institutional open-source collaboration building a better way to find and share geospatial data How can the Geoblacklight Community  help you? Participating institutions <ul> <li>GeoBlacklight provides a customizable platform for delivering geospatial information seamlessly to end users</li> <li>Participants can connect to other contributors through our active communication channels and learn best practices for software and metadata implementation.</li> </ul> End users <ul> <li>GeoBlacklight makes geospatial resources accessible to all users regardless of expertise with user-friendly searches through a map interface, keyword searches, and faceted browsing.</li> <li>GeoBlacklight provides easy download and export options for reusing geospatial resources in a wide variety of academic ventures.</li> </ul>"},{"location":"about/","title":"About","text":"<p>GeoBlacklight is an open-source Ruby on Rails software application for discovering geospatial content, including GIS datasets, web services, and digitized paper maps. Based on the open source software project Blacklight, GeoBlacklight began in 2014 as a collaboration by MIT, Princeton, and Stanford. As of 2021, over 25 academic libraries and cultural heritage institutions have adopted GeoBlacklight.</p> <p>Discovery services and metadata are key challenges for organizations who provide geospatial data. GeoBlacklight connects expertise from the digital library and geospatial communities to provide a better experience for users to find geospatial data.</p>"},{"location":"about/#our-community","title":"Our Community","text":"<p>Participants in the GeoBlacklight community come from a variety of professional and intellectual backgrounds (including librarians, software developers, metadata specialists, applied researchers, and others), but we share a common interest in making reliable and high-quality geospatial data easily accessible to members of the research community and the broader public. Many of us work in libraries and other cultural heritage institutions that deploy (or are planning to deploy) GeoBlacklight instances to disseminate and publicize their spatial data collections.</p> <p>Anyone interested in spatial data infrastructures, libraries, GIS, maps, data curation, open source software, and related topics, is welcome to join us. Depending on their skills and interests, participants contribute to the community in any number of ways (for instance, by attending meetings, writing documentation, developing metadata best practices, engaging in outreach, and writing code). Participating in the community is especially beneficial to those who are implementing or maintaining GeoBlacklight as a spatial data discovery interface within their own home institutions.</p> <p>Visit the Connect page to join our online community.</p>"},{"location":"about/#events","title":"Events","text":"<ul> <li> <p>Every month: Zoom meetings to share project updates and to discuss topical issues.</p> </li> <li> <p>2x per year: Community Sprints are similar to a traditional code sprint but also incorporate activities around documentation, metadata, governance, and more.</p> </li> <li> <p>Annually: Geo4LibCamp is a hands-on meeting to bring together those building repository services for geospatial data. The main focus is to share best-practices, solve common problems, and address technical issues with integrating geospatial data into a repository and associated services.</p> </li> </ul>"},{"location":"about/#roles","title":"Roles","text":"<ul> <li> <p>Community Coordinator (Karen Majewicz)</p> <ul> <li>facilitates community monthly meetings and sets agendas</li> <li>stages project boards for community sprints and coordinates stand-up meetings</li> </ul> </li> <li> <p>Code of Conduct team</p> <ul> <li>responsible for responding to Code of Conduct reports.</li> </ul> </li> </ul>"},{"location":"about/#our-development-practices","title":"Our Development Practices","text":"<ul> <li> <p>Open source model: GeoBlacklight is an open source software project licensed using the Apache License, version 2.0. Our development practices have been codified in a contribution guide since December 2015 and we use semantic versioning to release the Ruby on Rails engine to RubyGems. Changes are made to the codebase using pull requests to the GitHub source code repository.</p> </li> <li> <p>Connected frameworks: Many of the development practices for the GeoBlacklight project have foundations in other open source software communities. A strategic design decision was made to build on existing pools of expertise in organizations with Blacklight and Samvera rather than build a completely custom system. The project also relies heavily on configuration and extensibility as useful patterns for adopters making customizations.</p> </li> <li> <p>Decision-making: Much of the technical decision-making is driven from the original GeoBlacklight Concept Design document and has been further distilled into our GeoBlacklight Technical Values. Major and minor decisions are made using informal consensus.</p> </li> <li> <p>Testing: GeoBlacklight has Continuous Integration Testing, and tests are expected to be written with code contributions to the project. The project also implements both Ruby and JavaScript style guides to ensure a stylistically similar codebase.</p> </li> <li> <p>Funding: There is no funding model for GeoBlacklight, and most development comes through volunteered or assigned time from contributing organizations. Some projects have received grants or dedicated funds to build their GeoBlacklight applications. Our community also includes private vendors and independent freelancers that have contributed to the project through contracted work.</p> </li> </ul>"},{"location":"about/#application-features","title":"Application Features","text":"<ul> <li> <p>Technical Stack: GeoBlacklight is a Ruby on Rails engine designed as a plugin for the popular open source discovery framework, Blacklight. GeoBlacklight has direct software dependencies to Blacklight and Ruby on Rails. It also requires searchable metadata through the Apache Solr project. For production uses, GeoBlacklight installations often require a SQL database such as MySQL, MariaDB, or PostgreSQL.\u00a0</p> </li> <li> <p>External service integration: GeoBlacklight provides a discovery layer for content that is oftentimes hosted elsewhere. Rather than try to provide a repository to the data itself and navigate the complexities of different adopters existing systems, GeoBlacklight relies on providing integration for existing datastores and web services. GeoBlacklight does this through providing useful preview, download, and exports of open standards-based services, including Web Mapping Services (WMS), Web Feature Services (WFS), ArcGIS Rest API, and International Image Interoperability Framework (IIIF). There is also support for externally referenced metadata viewing and file download support.</p> </li> <li> <p>Metadata: The GeoBlacklight Metadata Schema has been designed to privilege discovery use cases. Text search, faceted search &amp; refinement, and spatial search &amp; relevancy are among the primary features that the schema enables. Visit OpenGeoMetadata for more information and full documentation. Metadata schema features:</p> <ul> <li> <p>based on Dublin Core, with custom elements added for spatial values</p> </li> <li> <p>designed for discovery - to help users find items</p> </li> <li> <p>not designed for complete technical documentation, such as a GIS dataset's processing history</p> </li> <li> <p>includes elements for external links, such as downloads, web services, or supplemental metadata</p> </li> <li> <p>interoperable for the OpenGeoMetadata federated metadata sharing community</p> </li> </ul> </li> </ul>"},{"location":"about/#geoblacklight-technical-values","title":"GeoBlacklight Technical Values","text":"<ul> <li> <p>Our core focus is geospatial discovery. This focus initially was limited to discretely catalogued data objects, but has expanded over time to include a wider range of information sources.</p> </li> <li> <p>We emphasize end-user experience, including inclusivity and accessibility in design features.</p> </li> <li> <p>We prioritize stability by semantically versioning our application releases and metadata schemas.</p> </li> <li> <p>We aim for GeoBlacklight to be simple to adopt and easy to maintain. We recognize that many adopters are in the cultural heritage space where metadata and software development resources can be limited.</p> </li> <li> <p>We make GeoBlacklight customizable for common use cases, and extensible to a plugin for a less-common use case.</p> </li> <li> <p>We leverage existing communities. Building on established standards gives us more bandwidth to focus on discovery and developing plugins.</p> </li> <li> <p>Excellent geospatial analysis and mapping tools already exist. Rather than build new ones in GeoBlacklight, we focus on integration with these existing tools.</p> </li> </ul>"},{"location":"about/#connected-projects","title":"Connected Projects","text":"<p>The GeoBlacklight software stack consists of several open source software projects which work together to enable a better discovery experience. </p> <p>GeoBlacklight</p> <p>GeoBlacklight is the main discovery interface for geospatial data. It is developed as a Ruby on Rails engine and built on top of the popular open-source discovery interface Blacklight.</p> <p>Dockerized GeoBlacklight</p><p>Developers from Harvard University have created a built instance of GeoBlacklight in a Docker context. This will allow new and existing users to test and develop an instance of GeoBlacklight within the Docker environment.</p> <p>OpenGeoMetadata</p><p>GeoBlacklight is built to use the OpenGeoMetadata schema, which is designed for GIS resource discovery and focuses mainly on discovery use cases. Text search, faceted search and refinement, and spatial search and relevancy are among the primary features that the schema enables.</p> <p>OpenIndexMaps</p><p>A community format for sharing index maps in GeoBlacklight and a repository that hosts community-produced GeoJSON index maps that facilitate discovery within GeoBlacklight portals.</p> <p>GeoBlacklight Sidecar images</p><p>This GeoBlacklight plugin captures remote images from geographic web services and saves them locally.</p> <p>Geomonitor</p><p>GeoMonitor is a Ruby on Rails application used to monitor geowebservices. It was built out of the premise that users who are looking for and find data should actually be able to access and use it. The application is setup to periodically monitor WMS web services and log data on a layers availability.</p>"},{"location":"about/#geoblacklight-contributors","title":"GeoBlacklight Contributors","text":"<ul> <li>Big Ten Academic Alliance</li> <li>Cornell University Library</li> <li>MIT Libraries</li> <li>Harvard University Library</li> <li>Johns Hopkins University</li> <li>New York University Libraries</li> <li>Princeton University Library</li> <li>Stanford University Libraries</li> <li>University of Massachusetts Amherst</li> <li>University of Minnesota Libraries</li> <li>University of Pennsylvania Libraries</li> <li>The University of Texas at Austin</li> </ul> <p>This is a living document that is frequently updated. Have a suggestion? Create an issue on the GeoBlacklight Website Github page here.</p>"},{"location":"blog/","title":"Blog","text":"<p>{{ blog_content }}</p>"},{"location":"connect/","title":"Connect","text":""},{"location":"connect/#connect-with-the-geoblacklight-community","title":"Connect with the GeoBlacklight Community","text":""},{"location":"connect/#geoblacklight-is-more-than-just-software-its-a-community-there-are-lots-of-different-ways-to-connect-and-get-involved","title":"GeoBlacklight is more than just software. It's a community. There are lots of different ways to connect and get involved.","text":"<p>Join the Google Group</p><p>Follow general project discussions and feature announcements.</p> <p>Chat on Slack</p><p>Chat with others in the community and to work through technical questions.</p> <p>Attend a Monthly Community Meeting</p><p>The GeoBlacklight Community Meeting takes place on the second Wednesday of every month. The meetings are open to anyone interested in hearing more about the status of the GeoBlacklight software and associated projects.</p> <p>Participate in a Community Sprint</p> <p>The GeoBlacklight Community collaborates on a 2-week sprint every Winter and Summer. Participation in the sprint is open to anyone interested in working on GeoBlacklight. While similar to a traditional code sprint, the GeoBlacklight Community Sprints also include tackling issues around documentation, metadata, community governance, and more.</p> <p>Discuss on GitHub</p><p>Find a bug you want to report? Is documentation missing or unclear? Would you like to suggest a new feature? Anyone can create an issue on GeoBlacklight's GitHub issue tracker.</p> <p>Share Metadata</p><p>GeoBlacklight gets even better when organizations share metadata. Contribute your metadata to OpenGeoMetadata or use it to populate your own GeoBlacklight installation.</p>"},{"location":"blog/","title":"blog","text":""},{"location":"blog/2015/01/introducing-geoblacklight/","title":"Introducing GeoBlacklight","text":"<p>A quick introduction to the GeoBlacklight project and this blog.</p> <p>This blog serves as an announcement and engineering blog for developers and the larger GeoBlacklight and geospatial communities. We aim to share our experience with creating the GeoBlacklight project, preserving geospatial data in a repository, engineering challenges to overcome, and other related topics.</p> <p>GeoBlacklight is an open-source collaboration between several institutions, with a goal of building a better way to discover, share, and access geospatial data. The main software project (GeoBlacklight) is a powerfull discovery and geospatial search application. Built as a Ruby on Rails gem, GeoBlacklight based on the popular open-source discovery software Project Blacklight. We hope you will take a minute to check out the project, connect on Twitter, or join the Google Group.</p> <p></p>"},{"location":"blog/2015/04/deploying-geoblacklight/","title":"Deploying GeoBlacklight","text":"<p>At Stanford, we have been preparing to launch our new GeoBlacklight instance, EarthWorks. Over the past few weeks we have had several questions from others about what it takes to deploy GeoBlacklight. This blog post hopes to address these questions. A follow up post will discuss enhancements to this scheme for added functionality.</p>"},{"location":"blog/2015/04/deploying-geoblacklight/#system-requirements","title":"System Requirements","text":"<p>At its core, GeoBlacklight is a Ruby on Rails application. It depends on having access to two things:</p> <ul> <li>a relational database<ul> <li>usually PostgreSQL or MySQL</li> <li>used for storing session, bookmarks, and user data</li> </ul> </li> <li>a Solr index<ul> <li>used as the search engine for metadata</li> </ul> </li> </ul>"},{"location":"blog/2015/04/deploying-geoblacklight/#simple-geoblacklight-application-architecture","title":"Simple GeoBlacklight application architecture","text":""},{"location":"blog/2015/04/deploying-geoblacklight/#geoblacklight-application","title":"GeoBlacklight Application","text":"<p>EarthWorks is Stanford's deployment of GeoBlacklight.  Our virtualized VMWare infrastructure hosts the application on several load balanced virtual machines. Phusion Passenger and Apache httpd to serve the application from the vm's. This setup is pretty standard for Ruby on Rails applications in our infrastructure.</p> <p>If you don't have a server to deploy the application on you have other options! Because GeoBlacklight is a Ruby on Rails application, there are many options available. You can deploy your application to Heroku, Digital Ocean or other hosting services.</p>"},{"location":"blog/2015/04/deploying-geoblacklight/#relational-database","title":"Relational database","text":"<p>At Stanford we use PostgreSQL for our GeoBlacklight application. This can be configured in the Ruby on Rails application in the <code>config/database.yml</code> file. While we use PostgreSQL for EarthWorks we also use MySQL for other projects. Blacklight and GeoBlacklight have deployments using PostgreSQL and MySQL. By default, the development environment of GeoBlacklight uses SQLite. SQLite is not recommended for production.</p> <p>For a comparison between these relations databases, see this extensive tutorial from Digital Ocean.</p>"},{"location":"blog/2015/04/deploying-geoblacklight/#solr-index","title":"Solr index","text":"<p>GeoBlacklight uses Solr for as an index for advanced querying and faceting. Documents indexed into Solr need to be in the geoblacklight-schema format. You can also configure your Solr deployment using the geoblacklight-schema Solr configuration files.</p>"},{"location":"blog/2015/04/deploying-geoblacklight/#solr-version","title":"Solr version","text":"<p>GeoBlacklight requires Solr version 4.7 or later. This hard version rule is due to new advanced spatial support introduced in this release.</p>"},{"location":"blog/2015/04/deploying-geoblacklight/#solr-security","title":"Solr security","text":"<p>The GeoBlacklight software accesses Solr only from the server. This means that you can deploy your Solr server behind a firewall. The front end of the application should never query Solr directly.</p>"},{"location":"blog/2015/04/deploying-geoblacklight/#wrap-up","title":"Wrap up","text":"<p>That's all that is needed for a basic GeoBlacklight deployment! I hope this is helpful as you plan your GeoBlacklight deployment. Coming soon, a post on enhancing your GeoBlacklight deployment by adding additional services.</p>"},{"location":"blog/2015/04/deploying-geoblacklight/#useful-links","title":"Useful links:","text":""},{"location":"blog/2015/04/deploying-geoblacklight/#rails-and-blacklight","title":"Rails and Blacklight","text":"<ul> <li>Understanding Rails and Blacklight from the Blacklight Wiki</li> <li>Configuring Rails Applications from RailsGuides</li> <li>Getting Started with Rails 4.x on Heroku from Heroku</li> <li>How To Deploy a Rails App with Passenger and Nginx on Ubuntu 14.04 from Digital Ocean</li> </ul>"},{"location":"blog/2015/04/deploying-geoblacklight/#relational-databases","title":"Relational Databases","text":"<ul> <li>SQLite vs MySQL vs PostgreSQL: A Comparison Of Relational Database Management Systems from Digital Ocean</li> </ul>"},{"location":"blog/2015/04/deploying-geoblacklight/#solr","title":"Solr","text":"<ul> <li>Solr configuration from the Blacklight Wiki</li> <li>How To Install Solr on Ubuntu 14.04 from Digital Ocean</li> <li>Spatial Search in Solr from the Solr Wiki</li> </ul>"},{"location":"blog/2015/11/open-in-cartodb-now-in-geoblacklight/","title":"Open in CartoDB, now in GeoBlacklight","text":"<p>Open in CartoDB was recently added to GeoBlacklight.</p> <p>One of the primary goals of GeoBlacklight is to make finding geospatial data a simple, pleasant experience for end users. By removing visualization and analysis features, we can focus on discovery and getting our users quicker access to data they need. A recent enhancement to GeoBlacklight furthers this goal by providing a painless way for users to import public data into CartoDB.</p> <p>CartoDB is an open source software as a service application for visualization and analysis of geospatial data. CartoDB recently introduced an import API which allows applications to provide their users a way to import data directly into their CartoDB account. \"Open in CartoDB\" was first implemented in Data.gov and we were excited to add the same functionality in GeoBlacklight. This feature in GeoBlacklight is implemented using the Blacklight document actions framework.</p> <p>Integrating with CartoDB was quite painless. One of the best parts of working on open source and integrating with an open company like CartoDB was we were able to provide feedback directly to developers who work on their platform. They were able to improve their product quickly (which improves our user's experience) which allowed this feature to come in so quickly.</p> <p></p> <p>You can checkout \"Open in CartoDB\" now in EarthWorks by viewing this Natural Earth dataset. We are interested in hearing your feedback about this. The \"Open in CartoDB\" feature is enabled for all of the public datasets in EarthWorks.</p> <p></p>"},{"location":"blog/2016/01/geoblacklight-at-nyu-a-blog-series-by-andrew-battista/","title":"GeoBlacklight at NYU, A blog series by Andrew Battista","text":"<p>NYU GIS Librarian, Andrew Battista, releases a blog post series on implementing GeoBlacklight at NYU.</p> <p>NYU's GIS Librarian Andrew Battista created blog post series on his experience with implementing GeoBlacklight, spatial data services, and integrating with an existing repository at NYU. This series is a great read and provides a great deal of context and information not only about GeoBlacklight, but offers fresh perspectives about repositories and GIS in libraries.</p> <p>You can read the series at on Andrew's GitHub pages account.</p> <p>Blog Posts:</p> <ul> <li>Post 1 - GeoBlacklight at NYU: A Project Overview</li> <li>Post 2 \u2013 DSpace and the Institutional Repository: Preservation and the Spatial Data Infrastructure</li> <li>Post 3 \u2013 Creating GeoBlacklight Metadata Records</li> <li>Post 4 - The Technology Stack: Amazon Web Services Products &amp; Open Source GIS</li> </ul>"},{"location":"blog/2016/02/vecnet-digital-library-redesign-and-geospatial-search-using-geoblacklight/","title":"VecNET Digital Library redesign and geospatial search using GeoBlacklight","text":"<p>Adding geospatial search to the VecNET digital library using GeoBlacklight.</p> <p></p> <p>We got on the GeoBlacklight bus when we joined the VecNET project.  VecNET was a Gates Foundation initiative to simulate malaria vectors, transmission and interventions using parameters from current literature.  To provide the latest and greatest parameters, VecNET used a curated digital library with a web based search interface.</p>"},{"location":"blog/2016/02/vecnet-digital-library-redesign-and-geospatial-search-using-geoblacklight/#what-was-the-problem","title":"What was the problem?","text":"<p>The search interface wasn't spatial, had some usability issues, and needed some design love.</p> <ul> <li>Spatial searching was limited to certain named locations; there was no map to visually define a search region, and we all love maps.</li> <li>Entries in the search results didn't show enough information, so users had to keep checking their search filters to understand what they were looking at.  AirBnB called this 'pogosticking'.</li> <li>Filters that could help to narrow down a search were present only in a side column, and underused.</li> </ul> <p></p>"},{"location":"blog/2016/02/vecnet-digital-library-redesign-and-geospatial-search-using-geoblacklight/#drawing-board","title":"Drawing board","text":"<p>With broad changes in mind, rough designs were pencilled up and debated around the office whiteboard.  Hopefully the designer in you enjoys these as much as we did.</p>"},{"location":"blog/2016/02/vecnet-digital-library-redesign-and-geospatial-search-using-geoblacklight/#map-and-fancy-notch-thing","title":"Map and fancy notch thing","text":"<p>The notch made it into the final design, the floating panel and vignette shading didn't. </p>"},{"location":"blog/2016/02/vecnet-digital-library-redesign-and-geospatial-search-using-geoblacklight/#simple-facet-design","title":"Simple facet design","text":"<p>We decided early to move the facet selection into a single column with the results.</p> <p></p>"},{"location":"blog/2016/02/vecnet-digital-library-redesign-and-geospatial-search-using-geoblacklight/#ui-with-map-and-facets","title":"UI with map and facets","text":"<p>The single search/results column let us plan a nice clean map display.</p> <p></p>"},{"location":"blog/2016/02/vecnet-digital-library-redesign-and-geospatial-search-using-geoblacklight/#look-at-that","title":"Look at that","text":"<p>After the early work of original thought, we checked out related works. It turns out the original VecNET search bore a striking resemblance to the old AirBnB search!  AirBnB had recently done a redesign to fix what they have concluded were large design and usability issues.</p> <p></p> <p></p> <p>We could learn from their experience and benefit from work done by a talented team. Our final proposal was iteratively formed with feedback from VecNET librarians based around simple UX principles:</p> <ul> <li>Big searchable map<ul> <li>A well designed map can clearly display information about where papers were from; users can easily find data from a specific location</li> </ul> </li> <li>Intuitive top to bottom page flow<ul> <li>Natural progression means less 'pogosticking'</li> </ul> </li> <li>Simple search filters<ul> <li>Use ordinary words instead of obscure terms</li> </ul> </li> </ul> <p></p>"},{"location":"blog/2016/02/vecnet-digital-library-redesign-and-geospatial-search-using-geoblacklight/#enter-geoblacklight","title":"Enter GeoBlacklight","text":"<p>The stack at VecNET was inherited from a prototype Ruby on Rails app with an old Solr and Fedora backend.  For a spatial search we would need to integrate spatial values of records with the existing dataset.  On the front end we wanted to use Leaflet and GeoJSON and uses Rail's API ability to serve data to a modern Javascript powered frontend with the UI goodness that users enjoy.</p> <p>Just as the Backbone.js structure was being laid down, we noticed a new project with strong ideas about user friendly geospatial discovery.</p> <p></p> <p>The GeoBlacklight project was being developed in the open and was based on the Blacklight project which was a basis of the legacy app.  In addition backwards compatibility was emphasised which is a high virtue when choosing an upstream. Normally you don't get excited about Rails apps at version 0.4 but with institutions like Stanford, MIT and Princeton contributing to an active development community that was encouraging new users \u2013 it was as close as software gets to alluring.</p>"},{"location":"blog/2016/02/vecnet-digital-library-redesign-and-geospatial-search-using-geoblacklight/#customising-geoblacklight","title":"Customising GeoBlacklight","text":"<p>Adding VecNET-specific functionality to the existing GeoBlacklight platform can with a bit of a learning curve but thankfully was well documented with an active Google groups community. Our VecNET specific additions included:</p> <ul> <li>displaying several locations associated with a single 'record' on a map</li> <li>search by map area and bounding box</li> <li>point clustering for when density was too high</li> </ul> <p>Other customisations to fit our design idea included:</p> <ul> <li>Unified search page with AJAX search form and results</li> <li>Shiny rounded CSS3 corners (because Steve Jobs amiright...)</li> <li>Friendly animation and transitions between results and map marker</li> <li>Enhanced metadata on the results page for better selection</li> <li>Progressive enhancement with fallback to rendered HTML for SEO.</li> </ul> <p>We implemented the changes with vanilla Javascript and Rails templates to minimise the learning curve for future maintenance.</p>"},{"location":"blog/2016/02/vecnet-digital-library-redesign-and-geospatial-search-using-geoblacklight/#enhancing-metadata-with-micro-standards","title":"Enhancing metadata with Micro Standards","text":"<p>Geoblacklight uses an geospatial schema extended from prior standards, documented here, and explained best here(imho).  It encodes the metadata and geospatial characteristics of the stored records.  The Ruby on Rails server in GeoBlacklight will embed the data into rendered HTML with a schema.org style which looks the 'div' element in the HTML below:</p> <pre><code>    &lt;div class=\"document \" itemscope=\"\" itemtype=\"http://schema.org/Dataset\"&gt;\n    &lt;div class=\"documentHeader row\" data-layer-id=\"urn:arrowsmith.mit.edu:MIT.000932529\" data-bbox=\"-83.5 41.5 -79.0 43.0\"&gt;\n</code></pre> <p>The value, <code>data-bbox</code>, for instance, will be be used by Leaflet.js to manipulate the map or generate a marker.  It is a simplified explanation but you get the idea.</p> <p>We want to make searching easy and efficient by displaying the most relevant data. Using the mechanism above, we can extend our digital library to show users important details such as journal, date, author.  The image below is an example of those micro schema values turned into nice UI elements for users.</p> <p></p>"},{"location":"blog/2016/02/vecnet-digital-library-redesign-and-geospatial-search-using-geoblacklight/#part-ii","title":"Part II?","text":"<p>There was plenty more fun in customising GeoBlacklight but that is all for now. If you have any feedback, we would love to hear from you. We promise to take criticism well :) Promise.</p>"},{"location":"blog/2016/08/geoblacklight-version-10-released/","title":"GeoBlacklight version 1.0 released!","text":"<p>As part of an ongoing community last week, GeoBlacklight v1.0 was released! GeoBlacklight v1.0 contains work by 11 contributors, from five institutions, making 706 commits. Thanks to everyone who has contributed!</p> <p>GeoBlacklight v1.0 contains many enhancements including:</p> <ul> <li>Blacklight 6 compatibility</li> <li>Autocomplete and spelling suggestions on by default</li> <li>Enhanced UI Components</li> <li>Greater ability to customize metadata fields</li> <li>A simplified metadata schema</li> <li>Customizable Leaflet map and plugins</li> </ul> <p>GeoBlacklight adopters who are interested in the upgrading to GeoBlacklight v1.0 should read the update wiki.</p> <p>The community work continues and we have seen several additional versions of GeoBlacklight released in the past few days. These patch versions contain bug fixes and minor enhancements. For more information about GeoBlacklight or the ongoing work connect with us at: http://geoblacklight.org/connect.</p>"},{"location":"blog/2016/09/big-ten-academic-alliance-geoportal-launches/","title":"Big Ten Academic Alliance Geoportal Launches","text":"<p>Congratulations to the Big Ten Academic Alliance that just launched their new GeoBlacklight instance.</p> <p>The Big Ten Academic Alliance team just launched their new GeoBlacklight instance! This project entailed over 20 team members from ten different institutions working together to create metadata, build policies, publish papers, and develop software. Make sure to checkout the new site here: https://geo.btaa.org/.</p> <p> </p> <p>The undertaking by this team is truly remarkable. You can read more about the project in this blog post by Karen Majewicz. Also note worthy is that all of the metadata powering their GeoBlacklight instance is now up on OpenGeoMetadata.</p>"},{"location":"blog/2017/08/summer-code-concludes-and-geoblacklight-version-160-released/","title":"Summer Code concludes and GeoBlacklight version 1.6.0 released","text":"<p>The second annual GeoBlacklight Community Code has concluded and a new version (1.6.0) has been released with improved views for standards-based metadata files along with several bug fixes.</p>"},{"location":"blog/2017/08/summer-code-concludes-and-geoblacklight-version-160-released/#summarizing-the-geoblacklight-community-code-summer-2017","title":"Summarizing the GeoBlacklight Community Code: Summer 2017","text":"<p>Developers and metadata specialists from New York University, Princeton University, and the Big Ten Academic Alliance participated in the second GeoBlacklight Summer Code from July 24 - August 4, 2017. With input from developers at Stanford University, Lewis &amp; Clark College, VecNet, and Cornell University, theers selected a number of goals to work on, including bug fixes, upgrading dependent libraries, improving the user interface, and exploring changes to the metadata schema. As of August 23, GeoBlacklight version 1.6.0 has been released. Major thanks to Eliot Jordan, Stephen Balogh, James Griffin, Eric Larson, and Jack Reed for contributing code actively during the summer.</p>"},{"location":"blog/2017/08/summer-code-concludes-and-geoblacklight-version-160-released/#changes-and-implementations","title":"Changes and Implementations","text":"<p>The code and release of version 1.6.0 resulted in a significant new feature, an amazing tabbed viewer that displays standards based XML metadata as HTML in the interface. This was primarily developed by James Griffin, and represents an enhancement that has long been requested by many GeoBlacklight users. Now, users can see a cleaner rendering of ISO or FGDC XML documents in context and download them.</p> <p></p> <p>The were also a number of behind the scenes minor code changes, including updates to fixture records, validation of bounding boxes, and a webkit deprecation. To simplify organizational structure, the separate GeoBlacklight Schema repository was deprecated and instead placed as a folder within the main repository.  </p>"},{"location":"blog/2017/08/summer-code-concludes-and-geoblacklight-version-160-released/#forthcoming-work-changes-in-the-schema","title":"Forthcoming Work: Changes in the Schema","text":"<p>Exploration of a larger development was initiated during the, which led the team to discuss migrating GeoBlacklight metadata to a DCAT based metadata schema. The biggest evolution is the adoption of fields and concepts associated with the Data Catalog Vocabulary (DCAT) standard and the Project Open Data Metadata Schema, V. 1.1, including distribution fields. Distribution fields allow for increased flexibility in providing links to download multiple formats, pointing to reference codebooks and documentation, and integrating seamlessly with web APIs, such as GeoServer and IIIF endpoints. In the coming months, we expect the user interface of GeoBlacklight to reflect some of these new possibilities.</p> <p>For now, the team has created a development branch of GeoBlacklight for the new schema that includes example fixture documents of DCAT-compliant records. There are implications for moving toward the DCAT standard, the most significant of which is the need to \"flatten\" fully realized .JSON-LD metadata into .JSON files that comply with the Solr cores behind GeoBlacklight. GeoCompile, developed by Eliot and Stephen, is an initial step at making sure this happens seamlessly. Major thanks to Karen Majewicz, Andrew Battista, Stephen Balogh, and Eliot Jordan for doing some thinking and mocking-up during the.</p> <p>These projects are still in progress and will be completed in the coming months. When we finish mocking up the proposed changes, which are gestured in the fixture record, we will follow up with a more complete post that explains the rationale for choices made and solicits further feedback from the community before any adoptions take place. Thanks to everyone who contributed to the. In the meantime, we welcome comments and questions; follow or contribute to the GeoBlacklight development work on GitHub!</p>"},{"location":"blog/2018/03/geoblacklight-winter-code-2018--new-release-18/","title":"GeoBlacklight Winter Code 2018 &amp; New Release 1.8","text":"<p>The GeoBlacklight Community Winter Code has resulted in a new release (1.8.0) that includes a new feature for index maps, bug fixes, and improved metadata documentation.</p> <p>Developers from Stanford, Princeton, NYU, Cornell, and the University of Minnesota participated in a two-week GeoBlacklight Winter Code during January 2018.  The developers completed work on enabling a new format for index maps, squashing several bugs, and an expansion to the GeoBlacklight Metadata 1.0 schema documentation. Progress was also made on the display of attribute table information and the development of a GeoBlacklight plugin that would enable harvesting thumbnail images from geospatial web services or IIIF image servers.</p>"},{"location":"blog/2018/03/geoblacklight-winter-code-2018--new-release-18/#openindexmaps","title":"OpenIndexMaps","text":"<p>GeoBlacklight\u2019s latest release includes a major new feature that enables OpenIndexMaps based on the GeoJSON format. This feature will display a spatial index in the map preview box that allows users to select an overlay object, such as a grid section. This will bring up a preview of the item\u2019s basic metadata, a thumbnail image, and access links. See Configuring Index Maps for Use in GeoBlacklight for more information on how to add index maps to metadata records.</p>"},{"location":"blog/2018/03/geoblacklight-winter-code-2018--new-release-18/#check-out-this-index-map-in-earthworks-from-stanford-libraries","title":"Check out this index map in EarthWorks from Stanford Libraries:","text":""},{"location":"blog/2018/08/2018-08-10-summer-code-sprint-version-1_9/","title":"2018 08 10 summer code sprint version 1 9","text":""},{"location":"blog/2018/08/2018-08-10-summer-code-sprint-version-1_9/#2018-summer-code-for-geoblacklight","title":"2018 Summer Code for GeoBlacklight","text":"<p>The GeoBlacklight Community Summer 2018 Code has resulted in a new release (1.9.0) that includes compatibility with Blacklight 7 and numerous other upgrades.</p>"},{"location":"blog/2018/08/2018-08-10-summer-code-sprint-version-1_9/#overview","title":"overview","text":"<p>From July 23 - August 3, 2018, developers from Stanford, Princeton, NYU, Cornell, and the University of Minnesota participated in a GeoBlacklight Summer Code  that resulted in the release of GeoBlacklight 1.9.0. Overall, the was a highly efficient, concentrated burst of activity that led to many upgrades in the code and a variety of improvements to our development workflow. The team also reviewed all recent and backlogged GitHub issues and was able to address over 50 of them during the course of the.</p> <p>Here's a summary of some upgrades and changes:</p> <ul> <li> <p>BLACKLIGHT 7 UPGRADE: The majority of the activities involved ensuring compatibility with Blacklight (the underlying architecture for GeoBlacklight) and its upcoming Blacklight 7 release. This included removing anticipated deprecations and incorporating Bootstrap 4.0 principles, such as a stylistic switch from pixels to rems.</p> </li> <li> <p>DOWNLOAD PANEL: The work to stay current with Bootstrap resulted a redesign of the Download tool to display a link to a direct download of the original dataset in one panel, with generated exports from a geospatial web server available underneath. This new Export Formats panel also features more semantically accurate text with the inclusion of the coordinate reference system (EPSG:4326) for generated exports. Here is a screenshot of the new layout:</p> </li> </ul> <p></p> <ul> <li> <p>METADATA BUGS: A few long standing bugs or omissions involving metadata interactions were addressed. The latest release allows certain characters, such as colons, in the record slugs, and handles empty values for the Geometry Type field. A new key was also added for the <code>dct_references</code> element to display native HTML records in the metadata viewer.</p> </li> <li> <p>INTERNATIONALIZATION: There is now better support for internationalization on view page elements - We fixed many lingering elements that had been hard-coded into English and turned them into translatable elements, which ultimately makes GeoBlacklight more accessible for use in other languages.</p> </li> <li> <p>TESTING WORKFLOWS: The GeoBlacklight GitHub repository was migrated to CircleCI instead of Travis CI for continuous integration and the metadata fixture records used for testing numerous functions were cleaned up and supplemented with new examples.</p> </li> <li> <p>LEAFLET MAP: Leaflet was upgraded to version 1.0, which required a few updates to the code. (Note - users looking to upgrade to the latest release of GeoBlacklight should check the release notes for potential issues with Leaflet 1.0 compatibilities.) The Leaflet map preview also includes new default basemaps - Now, users can toggle between seven default, open-source basemaps to use within the application.</p> </li> </ul>"},{"location":"blog/2018/08/2018-08-10-summer-code-sprint-version-1_9/#moving-forward","title":"Moving forward","text":"<p>The work on the summer has left us in a good place to cut a major 2.0 release of GeoBlacklight that will rely on upgraded frameworks. Thanks to everyone who participated with code development and review - Consider joining us for the next!</p>"},{"location":"blog/2019/02/2019-02-01-winter-code-sprint-version-2/","title":"2019 02 01 winter code sprint version 2","text":""},{"location":"blog/2019/02/2019-02-01-winter-code-sprint-version-2/#geoblacklight-20-is-here","title":"GeoBlacklight 2.0 is Here!","text":"<p>Developers from Princeton, NYU, Cornell, and the University of Minnesota participated in a two-week GeoBlacklight Winter Codesprint that resulted in a major new version, GeoBlacklight 2.0. This version is compatible with the latest release of the underlying framework, Blacklight 7, which itself includes several significant component upgrades for Bootstrap 4 and Rails 5.2 support. Visit the GeoBlacklight 2.0 Upgrade Guide for more information.</p>"},{"location":"blog/2019/02/2019-02-01-winter-code-sprint-version-2/#notable-enhancements-for-geoblacklight-20","title":"Notable enhancements for GeoBlacklight 2.0","text":"<ul> <li> <p>SPATIAL SEARCH RELEVANCY: A long standing issue was addressed that implements a bounding box ratio relevancy strategy for the map search. This means that items that most closely fit the selected map extent will rise to the top of the search results.</p> </li> <li> <p>INDEX MAPS: Developers from Cornell University led the effort during the to improve several aspects of how GeoBlacklight handles OpenIndexMaps. This enhancement includes selected feature highlighting, a download link for the selected feature, and adjustments to the layout of the attribute table.</p> </li> <li> <p>SEARCH SUPPRESSION: This offers a method for handling parent-child records that suppresses child records in a search query. For example, an atlas with hundreds of records representing individual pages would only show up once in the search results. The pages are then accessed from the parent record entry.</p> </li> <li> <p>METADATA DOCUMENTATION: In an effort to provide guidance for new and existing GeoBlacklight metadata authors, we have added a new document, Schema Commentary, that discusses how several elements in the GeoBlacklight 1.0 Metadata Schema interact with the application and recommendations from the GeoBlacklight community of practice.</p> </li> </ul> <p>Thanks to everyone who participated with code development and review. Consider joining us for the next!</p>"},{"location":"blog/2020/09/geoblacklight-30-is-here/","title":"GeoBlacklight 3.0 is Here!","text":"<p>Our Summer Community Sprint concluded in August 2020 and resulted in a new version of GeoBlacklight! Version 3 brings us the long awaited multiple downloads option, support for Rails 6, and many improvements for accessibility.</p>"},{"location":"blog/2020/09/geoblacklight-30-is-here/#notable-activities-and-enhancements","title":"Notable Activities and Enhancements","text":"<ul> <li> <p>MULTIPLE DOWNLOADS: To learn more about how to format metadata for multiple downloads, review How to configure multiple download links</p> </li> <li> <p>NEW NAME FOR THE DEFAULT BRANCH: We changed the name of the default branch to \u201cMain.\u201d There is a growing consensus in the development world for projects to change the default branch of their code in GitHub away from \"master,\" as this is a loaded, potentially offensive, term. Read more about it here, including comments from our community: https://github.com/geoblacklight/geoblacklight/issues/940</p> </li> <li> <p>ICONS: We deprecated the geoblacklight-icons project, which relied upon font-awesome for the icons. Now, new SVG images can be submitted directly to the GeoBlacklight repository  or added in your own GeoBlacklight application.</p> </li> <li> <p>METADATA SCHEMA WORKGROUP: During the sprint, we convened a Metadata Schema Workgroup to assess the current GeoBlacklight Schema 1.0 and develop an upgraded version. The workgroup will continue to meet throughout 2020.</p> </li> <li> <p>COMMUNITY GOVERNANCE &amp; VALUES: We also kicked off new discussions of how to be an equitable and inclusive community. These discussions are ongoing - check out our new About page, where we will be adding more soon.</p> </li> </ul> <p>Thanks to everyone who participated with code development, feature review, and metadata assessments. Consider joining us for the next sprint!</p>"},{"location":"blog/2021/02/announcing-the-geoblacklight-community-winter-2021-sprint/","title":"Announcing the GeoBlacklight Community Winter 2021 Sprint","text":"<p>The GeoBlacklight Community collaborates on a 2-week sprint every Winter and Summer. Participation in the sprint is open to anyone and can include coding new features, fixing bugs, writing documentation, troubleshooting issues, and more.</p> <p>Each sprint starts with a kickoff meeting where we will review our goals and volunteer to contribute towards various issues. This will be followed by short standup meetings every day to check-in and plan our next activities.</p>"},{"location":"blog/2021/02/announcing-the-geoblacklight-community-winter-2021-sprint/#event-dates","title":"Event Dates","text":"<ul> <li>The sprint will take place from February 16-26, 2021</li> <li>Kickoff Meeting: Tuesday, February 16 @ 11am Central Time</li> <li>Daily standup meetings: Weekdays, February 17-26 @ 1-1:30 pm Central Time</li> </ul>"},{"location":"blog/2021/02/announcing-the-geoblacklight-community-winter-2021-sprint/#how-to-join","title":"How to Join","text":"<p>Send us your name and email using this Google form.  The GeoBlacklight Community Coordinator will then send you the Zoom links with instructions on how to join.</p>"},{"location":"blog/2021/02/announcing-the-geoblacklight-community-winter-2021-sprint/#tracks-for-the-winter-2021-community-sprint","title":"Tracks for the Winter 2021 Community Sprint","text":"<p>This sprint will encompass three tracks:</p>"},{"location":"blog/2021/02/announcing-the-geoblacklight-community-winter-2021-sprint/#track-1-metadata","title":"Track 1. Metadata","text":"<p>The GeoBlacklight Metadata Schema Workgroup is developing a new version of the metadata schema. During the sprint, we will need developers and metadata specialists to review and implement the new schema.</p>"},{"location":"blog/2021/02/announcing-the-geoblacklight-community-winter-2021-sprint/#track-2-community","title":"Track 2. Community","text":"<p>Our community is growing! We are working on developing a governance framework, documenting our values, and developing a 2021 Roadmap. During the sprint, we will need people with project management and documentation skills to help move us towards improvements in our community organization.</p>"},{"location":"blog/2021/02/announcing-the-geoblacklight-community-winter-2021-sprint/#track-3-software-maintenance","title":"Track 3. Software maintenance","text":"<p>This one is especially for Ruby on Rails programmers and any GeoBlacklight users who like to troubleshoot!  The sprint is a good time to fix bugs and look at dependency upgrades.</p>"},{"location":"blog/2021/09/new-releases-after-the-geoblacklight-community-summer-2021-sprint/","title":"New releases after the GeoBlacklight Community Summer 2021 Sprint","text":"<p>The GeoBlacklight Community completed another Summer Sprint, held from August 30 to September 3, 2021. </p> <p>The overarching goal of this sprint was to develop a Version 4 release to support the Aardvark Metadata Profile. We ended up settling on a pre-release to indicate that more testing and enhancements still need to be done. However, we did address several maintenance issues and updated the current release to version 3.4.</p> <p>Other activities included updating the project website, assessing existing metadata tools, and improving the application's fixture (sample) metadata records.</p>"},{"location":"blog/2021/09/new-releases-after-the-geoblacklight-community-summer-2021-sprint/#details","title":"Details","text":"<p>The sprint was divided into 3 overlapping tracks.</p>"},{"location":"blog/2021/09/new-releases-after-the-geoblacklight-community-summer-2021-sprint/#1-usability","title":"1. Usability","text":"<p>The Usability team focused on how to integrate  Aardvark metadata into GeoBlacklight's default user interface. Activities: - added new metadata fields to the item view page and search page facets  - created a mockup showing how to display the new item relationships available with the new Aardvark fields - updated the default order of the search facets to reflect the user studies reported in two journal articles:     - Mapping Search Queries to Metadata Fields in a GeoBlacklight Repository     - Usability Analysis of the Big Ten Academic Alliance Geoportal: Findings and Recommendations for Improvement of the User Experience - determined the rules and configuration options for icon display</p>"},{"location":"blog/2021/09/new-releases-after-the-geoblacklight-community-summer-2021-sprint/#2-application-development-software-maintenance-coding","title":"2. Application Development (Software maintenance &amp; coding)","text":"<p>The Application Development team focused on fixing deprecation warnings and incorporating the changes specified by the Usability track group.</p>"},{"location":"blog/2021/09/new-releases-after-the-geoblacklight-community-summer-2021-sprint/#current-release-version-340","title":"Current release: Version 3.4.0","text":"<p>This minor release includes maintenance issues and a few enhancements: - addressed numerous deprecation warnings inherited from the Blacklight software that will enable us to use Blacklight's Version 8 (still in development) in the future. - fixed a homepage map bug - updated the default interface with improved search result sorting options</p> <p> New search results sort options </p>"},{"location":"blog/2021/09/new-releases-after-the-geoblacklight-community-summer-2021-sprint/#pre-release-version-400-alpha","title":"Pre-release: Version 4.0.0-alpha","text":"<p>This major pre-release includes several global changes: - fully incorporates the latest Aardvark metadata profile - features new facet names and ordering - includes multiple item relation widgets</p> <p> New item relation widgets (outlined in purple box) </p>"},{"location":"blog/2021/09/new-releases-after-the-geoblacklight-community-summer-2021-sprint/#3-documentation-metadata-website-and-migration-guides","title":"3. Documentation (Metadata, website, and migration guides)","text":"<p>The Documentation team made assessments of existing metadata documentation and began the process of migrating the content to a new GitHub pages site in the OpenGeoMetadata organization. The latest documentation can be found here: https://opengeometadata.org</p> <p>More documentation work is on the way in the form of workflow recommendations for converting metadata from the GeoBlacklight 1.0 schema to the newer Aardvark profile.</p> <p>For more details, view our running notes from the daily standups, as well as the GitHub projects boards here and here.</p>"},{"location":"blog/2022/02/announcing-the-geoblacklight-community-winter-2022-sprint/","title":"Announcing the GeoBlacklight Community Winter 2022 Sprint","text":"<p>The GeoBlacklight Community collaborates on a 2-week sprint every Winter and Summer. Participation in the sprint is open to anyone and can include coding new features, fixing bugs, writing documentation, troubleshooting issues, and more.</p> <p>Each sprint starts with a kickoff meeting where we will review our goals and volunteer to contribute towards various issues. This will be followed by short standup meetings every day to check-in and plan our next activities.</p>","tags":["sprint","metadata"]},{"location":"blog/2022/02/announcing-the-geoblacklight-community-winter-2022-sprint/#event-dates","title":"Event Dates","text":"<ul> <li>The sprint will take place from February 14-25, 2022</li> <li>Daily standup meetings: Weekdays, February 14-25 @ 1:00pm Central Time</li> </ul>","tags":["sprint","metadata"]},{"location":"blog/2022/02/announcing-the-geoblacklight-community-winter-2022-sprint/#how-to-join","title":"How to Join","text":"<p>Send us your name and email using this Google form.  The GeoBlacklight Community Coordinator will then send you the Zoom links with instructions on how to join.</p>","tags":["sprint","metadata"]},{"location":"blog/2022/02/announcing-the-geoblacklight-community-winter-2022-sprint/#tracks-for-the-winter-2022-community-sprint","title":"Tracks for the Winter 2022 Community Sprint","text":"<p>Here is the proposed sprint work broken up into sections:</p>","tags":["sprint","metadata"]},{"location":"blog/2022/02/announcing-the-geoblacklight-community-winter-2022-sprint/#coding","title":"Coding","text":"<ul> <li>Description: Creating code updates, fixes, and enhancements to commit to the GeoBlacklight code base</li> <li>Useful experience: application development, Ruby, Ruby on Rails</li> <li>Example tasks:</li> <li>Refining GeoBlacklight\u2019s Version 4 Alpha release to a Beta version</li> <li>Addressing bugs</li> <li>Performing maintenance on framework and dependency support (i.e. Bootstrap, Rails)</li> <li>Cleaning up Blacklight deprecation warnings</li> </ul>","tags":["sprint","metadata"]},{"location":"blog/2022/02/announcing-the-geoblacklight-community-winter-2022-sprint/#metadata","title":"Metadata","text":"<ul> <li>Description: Assessing and documenting the metadata schema for GeoBlacklight</li> <li>Useful experience: metadata, documentation</li> <li>Example tasks:</li> <li>creating an upgrade to Aardvark guide</li> <li>creating new or updating existing sample metadata files</li> <li>Updating OpenGeoMetadata and GeoCombine</li> </ul>","tags":["sprint","metadata"]},{"location":"blog/2022/02/announcing-the-geoblacklight-community-winter-2022-sprint/#documentation","title":"Documentation","text":"<ul> <li>Description: Improving the public website, tutorials, and guides</li> <li>Useful experience: writing, design, website editing</li> <li>Example tasks:</li> <li>improving the website design and content</li> <li>creating a \u201cHow to launch GeoBlacklight\u201d guide for the website</li> <li>organizing and updating the project wiki</li> </ul>","tags":["sprint","metadata"]},{"location":"blog/2022/02/announcing-the-geoblacklight-community-winter-2022-sprint/#other-work","title":"Other Work","text":"<ul> <li>Description: Other GeoBlacklight related work is welcome at this sprint!</li> </ul>","tags":["sprint","metadata"]},{"location":"blog/2022/03/geoblacklight-community-sprint-recap-winter-2022/","title":"GeoBlacklight Community Sprint Recap, Winter 2022","text":"<p>The latest GeoBlacklight Community Sprint took place from February 14-25, 2022. Long time GeoBlacklight sprinters have noted that this was likely our most productive event and undoubtedly featured the most active participants. We had over a dozen participants representing Cornell, Harvard, Johns Hopkins University, Princeton, Stanford, UMass Amherst, and the University of Minnesota / Big Ten Academic Alliance. Moreover, five contributors made their very first code commits to GeoBlacklight during this event. </p> <p>Here are links to five tangible outcomes that we developed during the two-week sprint:</p> <ol> <li>Production release of GeoBlacklight, version 3.6.0</li> <li>Release candidate of GeoBlacklight, version 4.0.0-rc1</li> <li>New metadata website: opengeometadata.org</li> <li>Migrated guides for GeoBlacklight development: geoblacklight.org/guides</li> <li>New version of GeoCombine</li> </ol>"},{"location":"blog/2022/03/geoblacklight-community-sprint-recap-winter-2022/#highlights","title":"Highlights","text":""},{"location":"blog/2022/03/geoblacklight-community-sprint-recap-winter-2022/#new-locations-for-documentation","title":"New locations for documentation","text":"<p>All documentation for the GeoBlacklight community has been moved away from the GitHub Wiki. Information about GeoBlacklight, development, and customization can now be found on the Guides section of this website. All metadata documentation has been migrated to opengeometadata.org.</p>"},{"location":"blog/2022/03/geoblacklight-community-sprint-recap-winter-2022/#new-metadata-website-tools","title":"New metadata website &amp; tools","text":"<p>Last year, our community developed a new metadata schema for GeoBlacklight, lovingly called Aardvark. This new schema is a significant change:  it emphasizes interoperability and the unique characteristics of geodata &amp; maps, so we decided to begin promoting it as an all-purpose discovery schema for geospatial resources. To that end, we launched a new website, opengeometadata.org that includes detailed schema documentation, guides, and examples. </p> <p>We also released a new update of GeoCombine, a tool within OpenGeoMetadata for programmatically ingesting and converting metadata. This update includes improvements in (1) how it harvests from OpenGeoMetadata repositories and (2) the transformation template for FGDC to HTML. </p>"},{"location":"blog/2022/03/geoblacklight-community-sprint-recap-winter-2022/#spatial-geometry-for-search-and-display","title":"Spatial geometry for search and display","text":"<p>We finally cracked a long-standing spatial problem while simultaneously enabling a long-desired enhancement. </p> <ul> <li>A Problem: bounding boxes that crossed the antimeridian would appear flipped or backward in search previews. </li> <li>A related desired enhancement: to be able to display complex or multiple geometries in search previews instead of just a single bounding box.</li> <li>Our solution: We incorporated a new option for a spatial metadata field that can use any WKT POLYGON or MULTIPOLYGON for display and searches. This enhancement was built with Geo3D for Solr and opened up the possibilities for what kind of geometries the metadata can feature. This also solves the antimeridian problem, as the metadata can now have two adjacent bounding boxes that will display correctly. Read more about how to format the Geometry field in OpenGeoMetadata to take advantage of this new feature.</li> </ul> <p> Image Caption - Two bounding boxes</p>"},{"location":"blog/2022/03/geoblacklight-community-sprint-recap-winter-2022/#accessibility-user-interface-improvements","title":"Accessibility &amp; user interface improvements","text":"<p>We improved the layout of the item pages in the default GeoBlacklight user interface in a few ways:</p> <ol> <li>The map preview is now above the metadata</li> <li>Added a full-screen option to the map preview</li> <li>Web services and downloads were converted from text links to \"Call-to-Action\" type buttons</li> <li>Updated the index map to use a more accessible color palette and added a legend</li> </ol> <p> Image Caption - The map is now directly below the title and has a full-screen option. There is also a new button for web services and an adjusted dropdown button for Downloads</p> <p> Image Caption - Shows improved colors and a legend above the index map</p>"},{"location":"blog/2022/03/geoblacklight-community-sprint-recap-winter-2022/#blacklight-future-alignment-plans","title":"Blacklight + future alignment plans","text":"<p>Whenever possible, we make a concentrated effort to align with the development practices of our underlying framework application, Blacklight. During the sprint, we collaborated with Blacklight developers to clear up deprecation warnings and remove an override customization used for bounding boxes. </p> <p>For the future, we decided to eventually remove jQuery dependencies. This will help us stay consistent with Blacklight and eventually upgrade to Bootstrap 5. We also plan to rewrite our JavaScript code using the more modern version, ES6.</p>"},{"location":"blog/2022/03/geoblacklight-community-sprint-recap-winter-2022/#future-plans","title":"Future plans","text":"<ul> <li>Over the next six months, selected institutions will test the release candidate 4.0, which includes full Aardvark metadata support and all of the new features developed during the sprint. </li> <li>We plan to schedule a dedicated documentation sprint that will include a broad cross-section of skills within our community.</li> </ul> <p>For even more details, view our running notes from the daily standups and the GitHub projects boards for development and metadata.</p>"},{"location":"blog/2022/08/announcing-the-geoblacklight-community-summer-2022-sprint/","title":"Announcing the GeoBlacklight Community Summer 2022 Sprint","text":"<p>The GeoBlacklight Community collaborates on a 2-week sprint every Winter and Summer. Participation in the sprint is open to anyone and can include coding new features, fixing bugs, writing documentation, troubleshooting issues, and more.</p> <p>Each sprint starts with a kickoff meeting where we will review our goals and volunteer to contribute towards various issues. This will be followed by short standup meetings every day to check-in and plan our next activities.</p>"},{"location":"blog/2022/08/announcing-the-geoblacklight-community-summer-2022-sprint/#event-dates","title":"Event Dates","text":"<p>This sprint is taking place over two non-consecutive weeks:</p> <ul> <li>August 8-12, 2022 and September 12-16, 2022</li> <li>Daily standup meetings: Weekdays @ 1:05pm Central Time</li> </ul>"},{"location":"blog/2022/08/announcing-the-geoblacklight-community-summer-2022-sprint/#how-to-join","title":"How to Join","text":"<p>Send us your name and email using this Google form.  The GeoBlacklight Community Coordinator will then send you the Zoom links with instructions on how to join.</p>"},{"location":"blog/2022/08/announcing-the-geoblacklight-community-summer-2022-sprint/#tracks-for-the-summer-2022-community-sprint","title":"Tracks for the Summer 2022 Community Sprint","text":"<p>Here is the proposed sprint work broken up into sections:</p>"},{"location":"blog/2022/08/announcing-the-geoblacklight-community-summer-2022-sprint/#1-coding","title":"1. Coding","text":""},{"location":"blog/2022/08/announcing-the-geoblacklight-community-summer-2022-sprint/#primary-goal-upgrade-geoblacklight-version-4-from-pre-release-status-to-stable-version","title":"Primary Goal: Upgrade GeoBlacklight, Version 4 from pre-release status to stable version","text":"<ul> <li>Description: Creating code updates, fixes, and enhancements to commit to the GeoBlacklight code base</li> <li>Useful experience: application development, Ruby, Ruby on Rails</li> <li>Example tasks:</li> <li>Addressing bugs</li> <li>Performing maintenance on framework and dependency support (i.e. Bootstrap, Rails)</li> <li>Cleaning up Blacklight deprecation warnings</li> </ul>"},{"location":"blog/2022/08/announcing-the-geoblacklight-community-summer-2022-sprint/#2-documentation","title":"2. Documentation","text":""},{"location":"blog/2022/08/announcing-the-geoblacklight-community-summer-2022-sprint/#primary-goal-improve-documentation-for-getting-started","title":"Primary Goal: Improve documentation for getting started","text":"<ul> <li>Description: Improving the public website, tutorials, and guides</li> <li>Useful experience: writing, design, website editing</li> <li>Example tasks:</li> <li>improving the website design and content</li> <li>creating a \u201cHow to launch GeoBlacklight\u201d guide for the website</li> <li>organizing and updating the project wiki</li> </ul>"},{"location":"blog/2022/08/announcing-the-geoblacklight-community-summer-2022-sprint/#3-metadata","title":"3. Metadata","text":""},{"location":"blog/2022/08/announcing-the-geoblacklight-community-summer-2022-sprint/#primary-goal-improve-documentation-for-migrating-to-opengeometadata-schema-version-aardvark","title":"Primary Goal: Improve documentation for migrating to OpenGeoMetadata schema, version Aardvark","text":"<ul> <li>Description: Assessing and documenting the metadata schema for GeoBlacklight</li> <li>Useful experience: metadata, documentation</li> <li>Example tasks:</li> <li>creating a metadata migration guide</li> <li>creating new or updating existing sample metadata files</li> <li>Updating the OpenGeoMetadata website</li> </ul>"},{"location":"blog/2022/08/announcing-the-geoblacklight-community-summer-2022-sprint/#other-work","title":"Other Work","text":"<ul> <li>Description: Other GeoBlacklight-related work is welcome at this sprint!</li> </ul>"},{"location":"blog/2022/09/the-wait-is-over---geoblacklight-40-is-here/","title":"The wait is over - GeoBlacklight 4.0 is here!","text":"<p>The GeoBlacklight Community is excited to announce the release of our next major version:  GeoBlacklight 4.0. This version features official support for OGM Aardvark, and we have enriched the documentation for GeoBlacklight and OpenGeoMetadata.</p> <p></p> <p>KEY LINKS</p> <ul> <li> <p>The RubyGems GeoBlacklight v4.0.0 Release (GitHub)</p> </li> <li> <p>Guide for Upgrading to GeoBlacklight Version 4</p> </li> <li> <p>Guide for Upgrading Metadata to the OpenGeoMetadata (OGM) Aardvark Schema</p> </li> <li> <p>gbl2aardvark: A new web-hosted application to automatically convert GeoBlacklight 1.0 JSON files to the OGM Aardvark schema</p> </li> </ul>","tags":["sprint","metadata"]},{"location":"blog/2022/09/the-wait-is-over---geoblacklight-40-is-here/#1-official-support-for-the-latest-opengeometadata-schema-ogm-aardvark","title":"1. Official support for the latest OpenGeoMetadata schema, OGM Aardvark.","text":"<p>OGM Aardvark is a geospatial metadata schema that was collaboratively developed by geospatial metadata specialists and librarians from twelve university libraries. Launched in 2021, it replaces the GeoBlacklight metadata schema version 1.0 (GBL 1.0). Compared to GBL 1.0, OGM Aardvark features syntactical updates to improve interoperability and incorporates additional fields for better descriptions of a wider range of resources. It is now the recommended schema for all institutions adopting GeoBlacklight.</p> <p>By default, GeoBlacklight 4.0 displays all human-readable OGM Aardvark metadata values on the item view page, including the new fields for:</p> <ul> <li>specifying rights and licenses (see figure 1)</li> <li>categorizing records by class and type (see figure 2)</li> <li>interactive widgets connecting records via seven different types of relationships</li> </ul> <p></p> <p>Figure 1</p> <p>Image caption: Sample record item view page displaying new OGM Aardvark metadata fields and values</p> <p>Note: Learn how to customize your item view pages with the Application Configuration section of the new Guide for Upgrading to GeoBlacklight Version 4</p> <p></p> <p>Figure 2</p> <p>Image caption: The new Resource Class facet</p> <p>Note: Read more about the Resource Class field on its schema documentation page</p>","tags":["sprint","metadata"]},{"location":"blog/2022/09/the-wait-is-over---geoblacklight-40-is-here/#2-documentation-improvements","title":"2. Documentation improvements","text":"<p>We focused our Summmer Community Sprint 2022 on improving the technical documentation for GeoBlacklight and OpenGeometadata.</p>","tags":["sprint","metadata"]},{"location":"blog/2022/09/the-wait-is-over---geoblacklight-40-is-here/#21-geoblacklight-documentation","title":"2.1 GeoBlacklight documentation","text":"<p>Check out our new application documentation site at https://geoblacklight.org/docs. Notable additions include:</p> <ul> <li>a detailed guide for upgrading to version 4.0</li> <li>an updated and vetted Quickstart Guide and Developer's Guide for installing GeoBlacklight locally</li> <li>a new section called Running in Production, which includes example environments and maintenance recommendations</li> <li>new guides for adding customizations to Leaflet: Homepage Map Centroid Clusters and Dynamic Basemap Switching</li> </ul>","tags":["sprint","metadata"]},{"location":"blog/2022/09/the-wait-is-over---geoblacklight-40-is-here/#23-opengeometadata-documentation","title":"2.3 OpenGeoMetadata documentation","text":"<p>Visit our improved metadata documentation site at https://opengeometadata.org. Recent additions include:</p> <ul> <li>easier navigation for finding OGM Aardvark schema elements, including a grouped chart and an alphabetical list</li> <li> <p>metadata crosswalk tables</p> <ul> <li>OGM Aardvark - GBL 1.0 crosswalk table</li> <li>OGM Aardvark - FGDC - ISO 19139 crosswalk table</li> </ul> </li> <li> <p>new conversion tools</p> <ul> <li>a draft XSLT  for converting FGDC metadata to OGM Aardvark</li> <li>gbl2aardvark: a new web hosted tool to automatically convert GeoBlacklight 1.0 JSON files to OGM Aardvark</li> </ul> </li> </ul> <p></p> <p>Figure 3</p> <p>Image caption: screenshot of gbl2aardvark</p>","tags":["sprint","metadata"]},{"location":"blog/2022/09/the-wait-is-over---geoblacklight-40-is-here/#3-credits","title":"3. Credits","text":"<p>This release represents substantial and concerted efforts from many in our community: over the past one to two years, fourteen community members committed code to our GitHub repository for this release, while nearly twenty individuals contributed to creating our related project, the OGM Aardvark metadata schema.</p> <p>Thank you to everyone for participating in this evolution!</p>","tags":["sprint","metadata"]},{"location":"blog/2023/03/winter-sprint-2023/","title":"Winter sprint 2023","text":"<p>The latest sprint resulted in several new outcomes: a metadata field, multiple documentation pages, a release of the Sidecar Images plugin, and a dockerized container for GeoBlacklight.</p> <p>KEY LINKS</p> <ul> <li>Documentation for new Aardvark field, Display Note</li> <li>GeoBlacklight release and technology dependency matrix.</li> <li>Sidecar Images Plugin</li> <li>Dockerized GeoBlacklight</li> </ul> <p>Seven members of the GeoBlacklight Community participated in a one-week sprint for the week of February 27 - March 3, 2023. We focused on organizing the open issues for OpenGeoMetadata as well as how to plan for upcoming challenges with adopting the beta version of Blacklight 8.0.  </p> <p>The sprint resulted in several new outcomes: a metadata field, multiple documentation pages, a release of the Sidecar Images plugin, and a dockerized container for GeoBlacklight.</p>"},{"location":"blog/2023/03/winter-sprint-2023/#new-metadata-field-display-note-added-to-opengeometadata-version-aardvark","title":"New metadata field, \"Display Note\", added to OpenGeoMetadata, version Aardvark.","text":"<p>Many institutions using GeoBlacklight have implemented custom fields to display warnings or tips to users. These fields are used to highlight important information about a resource that users need to be aware of before accessing or using it. For example, a warning might indicate that the resource is incomplete or may be difficult to use due to technical limitations. A tip might provide guidance on how to use the resource effectively, such as suggesting specific software or tools that are compatible with the data. </p> <p>The main downside of custom fields is that they are not interoperable; when we share metadata across institutions, this information is lost. Another drawback is that custom fields require local development time to implement as opposed to functionality that comes with GeoBlacklight out-of-the-box.</p> <p>During the sprint, we devised a single field to capture this information, called \"Display Note\". This versatile field is inspired by website widgets known variably as callouts (general usage), admonitions (Python Markdown), or alerts (Bootstrap). Callouts are generally highlighted in colors and/or icons that indicate the type of information being offered, such as a red background for a Warning.  </p> <p>Details about the new field:</p> <ul> <li>URI: <code>gbl_displayNote_sm</code></li> <li>Multiplicity: this field is an array that can have multiple values</li> <li>Syntax: type of callout: text of callout</li> <li>Example value: <pre><code>[\n\"Warning: This text (starting with 'This text') will be displayed in a red box\",\n\"Info: This text (starting with 'This text') will be displayed in a blue box\",\n\"Tip: This text (starting with 'This text') will be displayed in a green box\",\n\"This is text without a tag and it will be assigned the default 'note' style\"\n]\n</code></pre></li> </ul> <p>Right now, the field can be added to your GeoBlacklight Solr instance as a simple string field. In the next sprint, we plan to add functionality to GeoBlacklight that will automatically read the first part of the field (ex. Warning:) and display the text with highlight background prominently on the page. </p>"},{"location":"blog/2023/03/winter-sprint-2023/#versioning-and-roadmaps","title":"Versioning and roadmaps","text":"<p>We have a new Technology Matrix that maps out our GeoBlacklight release plans and technology dependencies. This matrix takes into account compatiblity with the Blacklight Project, which recently pre-released a beta version 8.0..</p> <p></p>"},{"location":"blog/2023/03/winter-sprint-2023/#new-release-of-geoblacklight-sidecar-images-plugin","title":"New Release of GeoBlacklight Sidecar Images Plugin","text":"<p>We upgraded the GeoBlacklight Sidecar Images Plugin, which can display image thumbnails on search result pages. The plugin now uses the same rake tasks as GeoBlacklight for running the test suite.</p>"},{"location":"blog/2023/03/winter-sprint-2023/#new-dockerized-version-of-geoblacklight","title":"New Dockerized version of GeoBlacklight","text":"<p>Developers from Harvard University have created a built instance of GeoBlacklight in a Docker context. This will allow new and existing users to test and develop an instance of GeoBlacklight within the Docker environment.</p> <p>Thank you to everyone who participated during this sprint!  Please consider joining up at the next community sprint coming in June 2023. </p>"},{"location":"blogplugin/2015/2015-01-15-introducing-geoblacklight/","title":"Introducing GeoBlacklight","text":"<p>This blog serves as an announcement and engineering blog for developers and the larger GeoBlacklight and geospatial communities. We aim to share our experience with creating the GeoBlacklight project, preserving geospatial data in a repository, engineering challenges to overcome, and other related topics.</p> <p>GeoBlacklight is an open-source collaboration between several institutions, with a goal of building a better way to discover, share, and access geospatial data. The main software project (GeoBlacklight) is a powerfull discovery and geospatial search application. Built as a Ruby on Rails gem, GeoBlacklight based on the popular open-source discovery software Project Blacklight. We hope you will take a minute to check out the project, connect on Twitter, or join the Google Group.</p> <p></p>"},{"location":"blogplugin/2015/2015-04-10-deploying-geoblacklight/","title":"Deploying GeoBlacklight","text":"<p>At Stanford, we have been preparing to launch our new GeoBlacklight instance, EarthWorks. Over the past few weeks we have had several questions from others about what it takes to deploy GeoBlacklight. This blog post hopes to address these questions. A follow up post will discuss enhancements to this scheme for added functionality.</p>"},{"location":"blogplugin/2015/2015-04-10-deploying-geoblacklight/#system-requirements","title":"System Requirements","text":"<p>At its core, GeoBlacklight is a Ruby on Rails application. It depends on having access to two things:</p> <ul> <li>a relational database<ul> <li>usually PostgreSQL or MySQL</li> <li>used for storing session, bookmarks, and user data</li> </ul> </li> <li>a Solr index<ul> <li>used as the search engine for metadata</li> </ul> </li> </ul>"},{"location":"blogplugin/2015/2015-04-10-deploying-geoblacklight/#simple-geoblacklight-application-architecture","title":"Simple GeoBlacklight application architecture","text":""},{"location":"blogplugin/2015/2015-04-10-deploying-geoblacklight/#geoblacklight-application","title":"GeoBlacklight Application","text":"<p>EarthWorks is Stanford's deployment of GeoBlacklight.  Our virtualized VMWare infrastructure hosts the application on several load balanced virtual machines. Phusion Passenger and Apache httpd to serve the application from the vm's. This setup is pretty standard for Ruby on Rails applications in our infrastructure.</p> <p>If you don't have a server to deploy the application on you have other options! Because GeoBlacklight is a Ruby on Rails application, there are many options available. You can deploy your application to Heroku, Digital Ocean or other hosting services.</p>"},{"location":"blogplugin/2015/2015-04-10-deploying-geoblacklight/#relational-database","title":"Relational database","text":"<p>At Stanford we use PostgreSQL for our GeoBlacklight application. This can be configured in the Ruby on Rails application in the <code>config/database.yml</code> file. While we use PostgreSQL for EarthWorks we also use MySQL for other projects. Blacklight and GeoBlacklight have deployments using PostgreSQL and MySQL. By default, the development environment of GeoBlacklight uses SQLite. SQLite is not recommended for production.</p> <p>For a comparison between these relations databases, see this extensive tutorial from Digital Ocean.</p>"},{"location":"blogplugin/2015/2015-04-10-deploying-geoblacklight/#solr-index","title":"Solr index","text":"<p>GeoBlacklight uses Solr for as an index for advanced querying and faceting. Documents indexed into Solr need to be in the geoblacklight-schema format. You can also configure your Solr deployment using the geoblacklight-schema Solr configuration files.</p>"},{"location":"blogplugin/2015/2015-04-10-deploying-geoblacklight/#solr-version","title":"Solr version","text":"<p>GeoBlacklight requires Solr version 4.7 or later. This hard version rule is due to new advanced spatial support introduced in this release.</p>"},{"location":"blogplugin/2015/2015-04-10-deploying-geoblacklight/#solr-security","title":"Solr security","text":"<p>The GeoBlacklight software accesses Solr only from the server. This means that you can deploy your Solr server behind a firewall. The front end of the application should never query Solr directly.</p>"},{"location":"blogplugin/2015/2015-04-10-deploying-geoblacklight/#wrap-up","title":"Wrap up","text":"<p>That's all that is needed for a basic GeoBlacklight deployment! I hope this is helpful as you plan your GeoBlacklight deployment. Coming soon, a post on enhancing your GeoBlacklight deployment by adding additional services.</p>"},{"location":"blogplugin/2015/2015-04-10-deploying-geoblacklight/#useful-links","title":"Useful links:","text":""},{"location":"blogplugin/2015/2015-04-10-deploying-geoblacklight/#rails-and-blacklight","title":"Rails and Blacklight","text":"<ul> <li>Understanding Rails and Blacklight from the Blacklight Wiki</li> <li>Configuring Rails Applications from RailsGuides</li> <li>Getting Started with Rails 4.x on Heroku from Heroku</li> <li>How To Deploy a Rails App with Passenger and Nginx on Ubuntu 14.04 from Digital Ocean</li> </ul>"},{"location":"blogplugin/2015/2015-04-10-deploying-geoblacklight/#relational-databases","title":"Relational Databases","text":"<ul> <li>SQLite vs MySQL vs PostgreSQL: A Comparison Of Relational Database Management Systems from Digital Ocean</li> </ul>"},{"location":"blogplugin/2015/2015-04-10-deploying-geoblacklight/#solr","title":"Solr","text":"<ul> <li>Solr configuration from the Blacklight Wiki</li> <li>How To Install Solr on Ubuntu 14.04 from Digital Ocean</li> <li>Spatial Search in Solr from the Solr Wiki</li> </ul>"},{"location":"blogplugin/2015/2015-11-17-open-in-cartodb/","title":"Open in CartoDB, now in GeoBlacklight","text":"<p>One of the primary goals of GeoBlacklight is to make finding geospatial data a simple, pleasant experience for end users. By removing visualization and analysis features, we can focus on discovery and getting our users quicker access to data they need. A recent enhancement to GeoBlacklight furthers this goal by providing a painless way for users to import public data into CartoDB.</p> <p>CartoDB is an open source software as a service application for visualization and analysis of geospatial data. CartoDB recently introduced an import API which allows applications to provide their users a way to import data directly into their CartoDB account. \"Open in CartoDB\" was first implemented in Data.gov and we were excited to add the same functionality in GeoBlacklight. This feature in GeoBlacklight is implemented using the Blacklight document actions framework.</p> <p>Integrating with CartoDB was quite painless. One of the best parts of working on open source and integrating with an open company like CartoDB was we were able to provide feedback directly to developers who work on their platform. They were able to improve their product quickly (which improves our user's experience) which allowed this feature to come in so quickly.</p> <p></p> <p>You can checkout \"Open in CartoDB\" now in EarthWorks by viewing this Natural Earth dataset. We are interested in hearing your feedback about this. The \"Open in CartoDB\" feature is enabled for all of the public datasets in EarthWorks.</p> <p></p>"},{"location":"blogplugin/2016/2015-04-10-deploying-geoblacklight/","title":"Deploying GeoBlacklight","text":"<p>At Stanford, we have been preparing to launch our new GeoBlacklight instance, EarthWorks. Over the past few weeks we have had several questions from others about what it takes to deploy GeoBlacklight. This blog post hopes to address these questions. A follow up post will discuss enhancements to this scheme for added functionality.</p>"},{"location":"blogplugin/2016/2015-04-10-deploying-geoblacklight/#system-requirements","title":"System Requirements","text":"<p>At its core, GeoBlacklight is a Ruby on Rails application. It depends on having access to two things:</p> <ul> <li>a relational database<ul> <li>usually PostgreSQL or MySQL</li> <li>used for storing session, bookmarks, and user data</li> </ul> </li> <li>a Solr index<ul> <li>used as the search engine for metadata</li> </ul> </li> </ul>"},{"location":"blogplugin/2016/2015-04-10-deploying-geoblacklight/#simple-geoblacklight-application-architecture","title":"Simple GeoBlacklight application architecture","text":""},{"location":"blogplugin/2016/2015-04-10-deploying-geoblacklight/#geoblacklight-application","title":"GeoBlacklight Application","text":"<p>EarthWorks is Stanford's deployment of GeoBlacklight.  Our virtualized VMWare infrastructure hosts the application on several load balanced virtual machines. Phusion Passenger and Apache httpd to serve the application from the vm's. This setup is pretty standard for Ruby on Rails applications in our infrastructure.</p> <p>If you don't have a server to deploy the application on you have other options! Because GeoBlacklight is a Ruby on Rails application, there are many options available. You can deploy your application to Heroku, Digital Ocean or other hosting services.</p>"},{"location":"blogplugin/2016/2015-04-10-deploying-geoblacklight/#relational-database","title":"Relational database","text":"<p>At Stanford we use PostgreSQL for our GeoBlacklight application. This can be configured in the Ruby on Rails application in the <code>config/database.yml</code> file. While we use PostgreSQL for EarthWorks we also use MySQL for other projects. Blacklight and GeoBlacklight have deployments using PostgreSQL and MySQL. By default, the development environment of GeoBlacklight uses SQLite. SQLite is not recommended for production.</p> <p>For a comparison between these relations databases, see this extensive tutorial from Digital Ocean.</p>"},{"location":"blogplugin/2016/2015-04-10-deploying-geoblacklight/#solr-index","title":"Solr index","text":"<p>GeoBlacklight uses Solr for as an index for advanced querying and faceting. Documents indexed into Solr need to be in the geoblacklight-schema format. You can also configure your Solr deployment using the geoblacklight-schema Solr configuration files.</p>"},{"location":"blogplugin/2016/2015-04-10-deploying-geoblacklight/#solr-version","title":"Solr version","text":"<p>GeoBlacklight requires Solr version 4.7 or later. This hard version rule is due to new advanced spatial support introduced in this release.</p>"},{"location":"blogplugin/2016/2015-04-10-deploying-geoblacklight/#solr-security","title":"Solr security","text":"<p>The GeoBlacklight software accesses Solr only from the server. This means that you can deploy your Solr server behind a firewall. The front end of the application should never query Solr directly.</p>"},{"location":"blogplugin/2016/2015-04-10-deploying-geoblacklight/#wrap-up","title":"Wrap up","text":"<p>That's all that is needed for a basic GeoBlacklight deployment! I hope this is helpful as you plan your GeoBlacklight deployment. Coming soon, a post on enhancing your GeoBlacklight deployment by adding additional services.</p>"},{"location":"blogplugin/2016/2015-04-10-deploying-geoblacklight/#useful-links","title":"Useful links:","text":""},{"location":"blogplugin/2016/2015-04-10-deploying-geoblacklight/#rails-and-blacklight","title":"Rails and Blacklight","text":"<ul> <li>Understanding Rails and Blacklight from the Blacklight Wiki</li> <li>Configuring Rails Applications from RailsGuides</li> <li>Getting Started with Rails 4.x on Heroku from Heroku</li> <li>How To Deploy a Rails App with Passenger and Nginx on Ubuntu 14.04 from Digital Ocean</li> </ul>"},{"location":"blogplugin/2016/2015-04-10-deploying-geoblacklight/#relational-databases","title":"Relational Databases","text":"<ul> <li>SQLite vs MySQL vs PostgreSQL: A Comparison Of Relational Database Management Systems from Digital Ocean</li> </ul>"},{"location":"blogplugin/2016/2015-04-10-deploying-geoblacklight/#solr","title":"Solr","text":"<ul> <li>Solr configuration from the Blacklight Wiki</li> <li>How To Install Solr on Ubuntu 14.04 from Digital Ocean</li> <li>Spatial Search in Solr from the Solr Wiki</li> </ul>"},{"location":"blogplugin/2016/2016-01-23-using-packer-to-create-a-development-virtual-machine/","title":"Using Packer to create a development virtual machine for GeoBlacklight","text":"<p>When we run the GeoBlacklight workshop, we provide attendees with a VirtualBox virtual machine (vm) so that they can participate without having download software. Having attendees connect to the internet to download large files doesn't always work in conference environments. To keep up to date with software dependencies we have rebuilt this virtual machine several times. Recently, the process for creating and updating the virtual machine has been automated using Packer. From Packer's website:</p> <p>Packer is a tool for creating machine and container images for multiple platforms from a single source configuration.</p> <p>This tutorial outlines how we create the GeoBlacklight workshop vm, so that others can create this virtual machine from scratch. This tutorial could also be adapted to create an image for Amazon EC2, Digital Ocean, Docker, and others.</p>"},{"location":"blogplugin/2016/2016-01-23-using-packer-to-create-a-development-virtual-machine/#getting-started","title":"Getting started","text":"<p>To get started, you will need to install several pieces of software that our Packer template will use. Go ahead and install this software for your system.</p> <p>Required software:</p> <ul> <li>Packer installation</li> <li>VirtualBox download</li> <li>Vagrant download</li> </ul> <p>Once you have installed all of the software, make sure that you have Packer available on your path.</p> <pre><code>$ packer -v\n0.8.6\n</code></pre>"},{"location":"blogplugin/2016/2016-01-23-using-packer-to-create-a-development-virtual-machine/#using-the-geoblacklight-packer-template","title":"Using the GeoBlacklight Packer template","text":"<p>Next, you will need to clone down the Packer template that was created for the GeoBlacklight Workshop from https://github.com/mejackreed/packer-templates.</p> <pre><code>$ git clone https://github.com/mejackreed/packer-templates.git\n</code></pre> <p>Next change directory (<code>cd</code>) into the git repository you just cloned.</p> <pre><code>$ cd packer-templates\n</code></pre> <p>And checkout the <code>geoblacklight</code> branch.</p> <pre><code>$ git checkout geoblacklight\n</code></pre> <p>Finally, change directory (<code>cd</code>) into the <code>ubuntu-16.04.3</code> directory. This is the image I based the GeoBlacklight Workshop image on.</p> <pre><code>$ cd ubuntu-16.04.3\n</code></pre>    It should be noted that I opted for the 32-bit version of this release of Ubuntu for maximum compatibility. You may want to change the version of Ubuntu used and thus you must also update the checksum."},{"location":"blogplugin/2016/2016-01-23-using-packer-to-create-a-development-virtual-machine/#exploring-the-packer-template","title":"Exploring the Packer template","text":"<p>The <code>template.json</code> file is where Packer takes its directions from. I won't go through everything in this file, but I will point out some of the customizations I made for the GeoBlacklight workshop.</p> <p>The major customizations added, were the addition of four scripts that run during creation.</p>"},{"location":"blogplugin/2016/2016-01-23-using-packer-to-create-a-development-virtual-machine/#rubysh","title":"<code>ruby.sh</code>","text":"<p>Installs rbenv, Ruby, bundler, and specifies no rdoc documentation.</p>"},{"location":"blogplugin/2016/2016-01-23-using-packer-to-create-a-development-virtual-machine/#railssh","title":"<code>rails.sh</code>","text":"<p>Installs nodejs and Ruby on Rails.</p>"},{"location":"blogplugin/2016/2016-01-23-using-packer-to-create-a-development-virtual-machine/#geoblacklightsh","title":"<code>geoblacklight.sh</code>","text":"<p>Creates a GeoBlacklight application and downloads and configures jetty/solr.</p>"},{"location":"blogplugin/2016/2016-01-23-using-packer-to-create-a-development-virtual-machine/#opengeosuitesh","title":"<code>opengeosuite.sh</code>","text":"<p>Installs OpenGeoSuite.</p>"},{"location":"blogplugin/2016/2016-01-23-using-packer-to-create-a-development-virtual-machine/#creating-the-vagrant-box","title":"Creating the Vagrant box","text":"<p>You can modify any of these scripts to meet your customization needs. After doing so, you will want to create your VirtualBox vm. To do so run the following command from the <code>ubuntu-16.04.3</code> directory:</p> <pre><code>$ packer build template.json\n</code></pre> <p>This command will take a while so it might be best to go get a coffee. What the command is doing:</p> <ul> <li>Downloading a fresh copy of Ubuntu</li> <li>Creating a VirtualBox image with that copy of Ubuntu</li> <li>Updating the vm's packages</li> <li>Installing our custom software</li> </ul> <p>After the command finishes you should have your virtual machine box waiting for you in the same directory.</p> <p>To create a <code>Vagrantfile</code> to use with this box:</p> <pre><code>$ vagrant init ubuntu-14-04-3-x32-virtualbox.box\n</code></pre> <p>Now you can start up your fresh box using:</p> <pre><code>$ vagrant up\n</code></pre> <p>And to ssh in</p> <pre><code>$ vagrant ssh\n</code></pre>"},{"location":"blogplugin/2016/2016-01-23-using-packer-to-create-a-development-virtual-machine/#conclusion","title":"Conclusion","text":"<p>I hope this tutorial is useful to others who run technical workshops. It can sometimes be painful in trying to support workshops on multiple platforms with limited network connectivity. This workflow of using Packer, Vagrant, and VirtualBox has been successful for us.</p>"},{"location":"blogplugin/2016/2016-01-25-geoblacklight-at-nyu-a-blog-series/","title":"GeoBlacklight at NYU, A blog series by Andrew Battista","text":"<p>NYU's GIS Librarian Andrew Battista created blog post series on his experience with implementing GeoBlacklight, spatial data services, and integrating with an existing repository at NYU. This series is a great read and provides a great deal of context and information not only about GeoBlacklight, but offers fresh perspectives about repositories and GIS in libraries.</p> <p>You can read the series at on Andrew's GitHub pages account.</p> <p>Blog Posts:</p> <ul> <li>Post 1 - GeoBlacklight at NYU: A Project Overview</li> <li>Post 2 \u2013 DSpace and the Institutional Repository: Preservation and the Spatial Data Infrastructure</li> <li>Post 3 \u2013 Creating GeoBlacklight Metadata Records</li> <li>Post 4 - The Technology Stack: Amazon Web Services Products &amp; Open Source GIS</li> </ul>"},{"location":"blogplugin/2016/2016-02-12-vecnet-digital-library-search-using-geoblacklight/","title":"VecNET Digital Library redesign and geospatial search using GeoBlacklight","text":"<p>We got on the GeoBlacklight bus when we joined the VecNET project.  VecNET was a Gates Foundation initiative to simulate malaria vectors, transmission and interventions using parameters from current literature.  To provide the latest and greatest parameters, VecNET used a curated digital library with a web based search interface.</p>","tags":["geoblacklight, vecnet"]},{"location":"blogplugin/2016/2016-02-12-vecnet-digital-library-search-using-geoblacklight/#what-was-the-problem","title":"What was the problem?","text":"<p>The search interface wasn't spatial, had some usability issues, and needed some design love.</p> <ul> <li>Spatial searching was limited to certain named locations; there was no map to visually define a search region, and we all love maps.</li> <li>Entries in the search results didn't show enough information, so users had to keep checking their search filters to understand what they were looking at.  AirBnB called this 'pogosticking'.</li> <li>Filters that could help to narrow down a search were present only in a side column, and underused.</li> </ul> <p></p>","tags":["geoblacklight, vecnet"]},{"location":"blogplugin/2016/2016-02-12-vecnet-digital-library-search-using-geoblacklight/#drawing-board","title":"Drawing board","text":"<p>With broad changes in mind, rough designs were pencilled up and debated around the office whiteboard.  Hopefully the designer in you enjoys these as much as we did.</p>","tags":["geoblacklight, vecnet"]},{"location":"blogplugin/2016/2016-02-12-vecnet-digital-library-search-using-geoblacklight/#map-and-fancy-notch-thing","title":"Map and fancy notch thing","text":"<p>The notch made it into the final design, the floating panel and vignette shading didn't. </p>","tags":["geoblacklight, vecnet"]},{"location":"blogplugin/2016/2016-02-12-vecnet-digital-library-search-using-geoblacklight/#simple-facet-design","title":"Simple facet design","text":"<p>We decided early to move the facet selection into a single column with the results.</p> <p></p>","tags":["geoblacklight, vecnet"]},{"location":"blogplugin/2016/2016-02-12-vecnet-digital-library-search-using-geoblacklight/#ui-with-map-and-facets","title":"UI with map and facets","text":"<p>The single search/results column let us plan a nice clean map display.</p> <p></p>","tags":["geoblacklight, vecnet"]},{"location":"blogplugin/2016/2016-02-12-vecnet-digital-library-search-using-geoblacklight/#look-at-that","title":"Look at that","text":"<p>After the early work of original thought, we checked out related works. It turns out the original VecNET search bore a striking resemblance to the old AirBnB search!  AirBnB had recently done a redesign to fix what they have concluded were large design and usability issues.</p> <p></p> <p></p> <p>We could learn from their experience and benefit from work done by a talented team. Our final proposal was iteratively formed with feedback from VecNET librarians based around simple UX principles:</p> <ul> <li>Big searchable map<ul> <li>A well designed map can clearly display information about where papers were from; users can easily find data from a specific location</li> </ul> </li> <li>Intuitive top to bottom page flow<ul> <li>Natural progression means less 'pogosticking'</li> </ul> </li> <li>Simple search filters<ul> <li>Use ordinary words instead of obscure terms</li> </ul> </li> </ul> <p></p>","tags":["geoblacklight, vecnet"]},{"location":"blogplugin/2016/2016-02-12-vecnet-digital-library-search-using-geoblacklight/#enter-geoblacklight","title":"Enter GeoBlacklight","text":"<p>The stack at VecNET was inherited from a prototype Ruby on Rails app with an old Solr and Fedora backend.  For a spatial search we would need to integrate spatial values of records with the existing dataset.  On the front end we wanted to use Leaflet and GeoJSON and uses Rail's API ability to serve data to a modern Javascript powered frontend with the UI goodness that users enjoy.</p> <p>Just as the Backbone.js structure was being laid down, we noticed a new project with strong ideas about user friendly geospatial discovery.</p> <p></p> <p>The GeoBlacklight project was being developed in the open and was based on the Blacklight project which was a basis of the legacy app.  In addition backwards compatibility was emphasised which is a high virtue when choosing an upstream. Normally you don't get excited about Rails apps at version 0.4 but with institutions like Stanford, MIT and Princeton contributing to an active development community that was encouraging new users \u2013 it was as close as software gets to alluring.</p>","tags":["geoblacklight, vecnet"]},{"location":"blogplugin/2016/2016-02-12-vecnet-digital-library-search-using-geoblacklight/#customising-geoblacklight","title":"Customising GeoBlacklight","text":"<p>Adding VecNET-specific functionality to the existing GeoBlacklight platform can with a bit of a learning curve but thankfully was well documented with an active Google groups community. Our VecNET specific additions included:</p> <ul> <li>displaying several locations associated with a single 'record' on a map</li> <li>search by map area and bounding box</li> <li>point clustering for when density was too high</li> </ul> <p>Other customisations to fit our design idea included:</p> <ul> <li>Unified search page with AJAX search form and results</li> <li>Shiny rounded CSS3 corners (because Steve Jobs amiright...)</li> <li>Friendly animation and transitions between results and map marker</li> <li>Enhanced metadata on the results page for better selection</li> <li>Progressive enhancement with fallback to rendered HTML for SEO.</li> </ul> <p>We implemented the changes with vanilla Javascript and Rails templates to minimise the learning curve for future maintenance.</p>","tags":["geoblacklight, vecnet"]},{"location":"blogplugin/2016/2016-02-12-vecnet-digital-library-search-using-geoblacklight/#enhancing-metadata-with-micro-standards","title":"Enhancing metadata with Micro Standards","text":"<p>Geoblacklight uses an geospatial schema extended from prior standards, documented here, and explained best here(imho).  It encodes the metadata and geospatial characteristics of the stored records.  The Ruby on Rails server in GeoBlacklight will embed the data into rendered HTML with a schema.org style which looks the 'div' element in the HTML below:</p> <p>{% highlight html %}</p>  {% endhighlight %}  The value, `data-bbox`, for instance, will be be used by [Leaflet.js](http://leafletjs.com/) to manipulate the map or generate a marker.  It is a simplified explanation but you get the idea.  We want to make searching easy and efficient by displaying the most relevant data. Using the mechanism above, we can extend our digital library to show users important details such as journal, date, author.  The image below is an example of those micro schema values turned into nice UI elements for users.  ![schema-example.png](../images/schema-example.png)   # Part II?  There was plenty more fun in customising GeoBlacklight but that is all for now.   If you have any feedback, we would love to hear from you. We promise to take criticism well :) Promise.","tags":["geoblacklight, vecnet"]},{"location":"blogplugin/2016/2016-08-01-geoblacklight-1-released/","title":"GeoBlacklight version 1.0 released!","text":"<p>As part of an ongoing community sprint last week, GeoBlacklight v1.0 was released! GeoBlacklight v1.0 contains work by 11 contributors, from five institutions, making 706 commits. Thanks to everyone who has contributed!</p> <p>GeoBlacklight v1.0 contains many enhancements including:</p> <ul> <li>Blacklight 6 compatibility</li> <li>Autocomplete and spelling suggestions on by default</li> <li>Enhanced UI Components</li> <li>Greater ability to customize metadata fields</li> <li>A simplified metadata schema</li> <li>Customizable Leaflet map and plugins</li> </ul> <p>GeoBlacklight adopters who are interested in the upgrading to GeoBlacklight v1.0 should read the update wiki.</p> <p>The community work continues and we have seen several additional versions of GeoBlacklight released in the past few days. These patch versions contain bug fixes and minor enhancements. For more information about GeoBlacklight or the ongoing work connect with us at: http://geoblacklight.org/connect.</p>"},{"location":"blogplugin/2016/2016-09-07-big-ten-academic-alliance-geoportal-launches/","title":"Big Ten Academic Alliance Geoportal Launches","text":"<p>Congratulations to the Big Ten Academic Alliance team that just launched their new GeoBlacklight instance! This project entailed over 20 team members from ten different institutions working together to create metadata, build policies, publish papers, and develop software. Make sure to checkout the new site here: https://geo.btaa.org/.</p> <p> </p> <p>The undertaking by this team is truly remarkable. You can read more about the project in this blog post by Karen Majewicz. Also note worthy is that all of the metadata powering their GeoBlacklight instance is now up on OpenGeoMetadata.</p>"},{"location":"blogplugin/2017/2017-08-24--summer-code-sprint-version1.6.0-released/","title":"Summer Code Sprint concludes and GeoBlacklight version 1.6.0 released","text":""},{"location":"blogplugin/2017/2017-08-24--summer-code-sprint-version1.6.0-released/#summarizing-the-geoblacklight-community-code-sprint-summer-2017","title":"Summarizing the GeoBlacklight Community Code Sprint: Summer 2017","text":"<p>Developers and metadata specialists from New York University, Princeton University, and the Big Ten Academic Alliance participated in the second GeoBlacklight Summer Code Sprint from July 24 - August 4, 2017. With input from developers at Stanford University, Lewis &amp; Clark College, VecNet, and Cornell University, the sprinters selected a number of goals to work on, including bug fixes, upgrading dependent libraries, improving the user interface, and exploring changes to the metadata schema. As of August 23, GeoBlacklight version 1.6.0 has been released. Major thanks to Eliot Jordan, Stephen Balogh, James Griffin, Eric Larson, and Jack Reed for contributing code actively during the summer sprint.</p>"},{"location":"blogplugin/2017/2017-08-24--summer-code-sprint-version1.6.0-released/#changes-and-implementations","title":"Changes and Implementations","text":"<p>The code sprint and release of version 1.6.0 resulted in a significant new feature, an amazing tabbed viewer that displays standards based XML metadata as HTML in the interface. This was primarily developed by James Griffin, and represents an enhancement that has long been requested by many GeoBlacklight users. Now, users can see a cleaner rendering of ISO or FGDC XML documents in context and download them.</p> <p></p> <p>The were also a number of behind the scenes minor code changes, including updates to fixture records, validation of bounding boxes, and a webkit deprecation. To simplify organizational structure, the separate GeoBlacklight Schema repository was deprecated and instead placed as a folder within the main repository.  </p>"},{"location":"blogplugin/2017/2017-08-24--summer-code-sprint-version1.6.0-released/#forthcoming-work-changes-in-the-schema","title":"Forthcoming Work: Changes in the Schema","text":"<p>Exploration of a larger development was initiated during the sprint, which led the team to discuss migrating GeoBlacklight metadata to a DCAT based metadata schema. The biggest evolution is the adoption of fields and concepts associated with the Data Catalog Vocabulary (DCAT) standard and the Project Open Data Metadata Schema, V. 1.1, including distribution fields. Distribution fields allow for increased flexibility in providing links to download multiple formats, pointing to reference codebooks and documentation, and integrating seamlessly with web APIs, such as GeoServer and IIIF endpoints. In the coming months, we expect the user interface of GeoBlacklight to reflect some of these new possibilities.</p> <p>For now, the team has created a development branch of GeoBlacklight for the new schema that includes example fixture documents of DCAT-compliant records. There are implications for moving toward the DCAT standard, the most significant of which is the need to \"flatten\" fully realized .JSON-LD metadata into .JSON files that comply with the Solr cores behind GeoBlacklight. GeoCompile, developed by Eliot and Stephen, is an initial step at making sure this happens seamlessly. Major thanks to Karen Majewicz, Andrew Battista, Stephen Balogh, and Eliot Jordan for doing some thinking and mocking-up during the sprint.</p> <p>These projects are still in progress and will be completed in the coming months. When we finish mocking up the proposed changes, which are gestured in the fixture record, we will follow up with a more complete post that explains the rationale for choices made and solicits further feedback from the community before any adoptions take place. Thanks to everyone who contributed to the sprint. In the meantime, we welcome comments and questions; follow or contribute to the GeoBlacklight development work on GitHub!</p>"},{"location":"blogplugin/2018/2018-03-01--winter-code-sprint-version1.8/","title":"GeoBlacklight Winter Code Sprint 2018 & New Release 1.8","text":"<p>Developers from Stanford, Princeton, NYU, Cornell, and the University of Minnesota participated in a two-week GeoBlacklight Winter Code Sprint during January 2018.  The developers completed work on enabling a new format for index maps, squashing several bugs, and an expansion to the GeoBlacklight Metadata 1.0 schema documentation. Progress was also made on the display of attribute table information and the development of a GeoBlacklight plugin that would enable harvesting thumbnail images from geospatial web services or IIIF image servers.</p>"},{"location":"blogplugin/2018/2018-03-01--winter-code-sprint-version1.8/#openindexmaps","title":"OpenIndexMaps","text":"<p>GeoBlacklight\u2019s latest release includes a major new feature that enables OpenIndexMaps based on the GeoJSON format. This feature will display a spatial index in the map preview box that allows users to select an overlay object, such as a grid section. This will bring up a preview of the item\u2019s basic metadata, a thumbnail image, and access links. See Configuring Index Maps for Use in GeoBlacklight for more information on how to add index maps to metadata records.</p>"},{"location":"blogplugin/2018/2018-03-01--winter-code-sprint-version1.8/#check-out-this-index-map-in-earthworks-from-stanford-libraries","title":"Check out this index map in EarthWorks from Stanford Libraries:","text":""},{"location":"blogplugin/2018/2018-08-10-summer-code-sprint-version-1_9/","title":"GeoBlacklight 2018 Summer Sprint Wrap-up","text":""},{"location":"blogplugin/2018/2018-08-10-summer-code-sprint-version-1_9/#2018-summer-code-sprint-for-geoblacklight","title":"2018 Summer Code Sprint for GeoBlacklight","text":""},{"location":"blogplugin/2018/2018-08-10-summer-code-sprint-version-1_9/#sprint-overview","title":"Sprint overview","text":"<p>From July 23 - August 3, 2018, developers from Stanford, Princeton, NYU, Cornell, and the University of Minnesota participated in a GeoBlacklight Summer Code Sprint  that resulted in the release of GeoBlacklight 1.9.0. Overall, the sprint was a highly efficient, concentrated burst of activity that led to many upgrades in the code and a variety of improvements to our development workflow. The team also reviewed all recent and backlogged GitHub issues and was able to address over 50 of them during the course of the sprint.</p> <p>Here's a summary of some upgrades and changes:</p> <ul> <li> <p>BLACKLIGHT 7 UPGRADE: The majority of the sprint activities involved ensuring compatibility with Blacklight (the underlying architecture for GeoBlacklight) and its upcoming Blacklight 7 release. This included removing anticipated deprecations and incorporating Bootstrap 4.0 principles, such as a stylistic switch from pixels to rems.</p> </li> <li> <p>DOWNLOAD PANEL: The work to stay current with Bootstrap resulted a redesign of the Download tool to display a link to a direct download of the original dataset in one panel, with generated exports from a geospatial web server available underneath. This new Export Formats panel also features more semantically accurate text with the inclusion of the coordinate reference system (EPSG:4326) for generated exports. Here is a screenshot of the new layout:</p> </li> </ul> <p></p> <ul> <li> <p>METADATA BUGS: A few long standing bugs or omissions involving metadata interactions were addressed. The latest release allows certain characters, such as colons, in the record slugs, and handles empty values for the Geometry Type field. A new key was also added for the <code>dct_references</code> element to display native HTML records in the metadata viewer.</p> </li> <li> <p>INTERNATIONALIZATION: There is now better support for internationalization on view page elements - We fixed many lingering elements that had been hard-coded into English and turned them into translatable elements, which ultimately makes GeoBlacklight more accessible for use in other languages.</p> </li> <li> <p>TESTING WORKFLOWS: The GeoBlacklight GitHub repository was migrated to CircleCI instead of Travis CI for continuous integration and the metadata fixture records used for testing numerous functions were cleaned up and supplemented with new examples.</p> </li> <li> <p>LEAFLET MAP: Leaflet was upgraded to version 1.0, which required a few updates to the code. (Note - users looking to upgrade to the latest release of GeoBlacklight should check the release notes for potential issues with Leaflet 1.0 compatibilities.) The Leaflet map preview also includes new default basemaps - Now, users can toggle between seven default, open-source basemaps to use within the application.</p> </li> </ul>"},{"location":"blogplugin/2018/2018-08-10-summer-code-sprint-version-1_9/#moving-forward","title":"Moving forward","text":"<p>The work on the summer sprint has left us in a good place to cut a major 2.0 release of GeoBlacklight that will rely on upgraded frameworks. Thanks to everyone who participated with code development and review - Consider joining us for the next sprint!</p>"},{"location":"blogplugin/2019/2019-02-01-winter-code-sprint-version-2/","title":"GeoBlacklight 2.0 is Here!","text":""},{"location":"blogplugin/2019/2019-02-01-winter-code-sprint-version-2/#2019-winter-codesprint","title":"2019 Winter Codesprint","text":"<p>Developers from Princeton, NYU, Cornell, and the University of Minnesota participated in a two-week GeoBlacklight Winter Codesprint that resulted in a major new version, GeoBlacklight 2.0. This version is compatible with the latest release of the underlying framework, Blacklight 7, which itself includes several significant component upgrades for Bootstrap 4 and Rails 5.2 support. Visit the GeoBlacklight 2.0 Upgrade Guide for more information.</p>"},{"location":"blogplugin/2019/2019-02-01-winter-code-sprint-version-2/#notable-enhancements-for-geoblacklight-20","title":"Notable enhancements for GeoBlacklight 2.0","text":"<ul> <li> <p>SPATIAL SEARCH RELEVANCY: A long standing issue was addressed that implements a bounding box ratio relevancy strategy for the map search. This means that items that most closely fit the selected map extent will rise to the top of the search results.</p> </li> <li> <p>INDEX MAPS: Developers from Cornell University led the effort during the sprint to improve several aspects of how GeoBlacklight handles OpenIndexMaps. This enhancement includes selected feature highlighting, a download link for the selected feature, and adjustments to the layout of the attribute table.</p> </li> <li> <p>SEARCH SUPPRESSION: This offers a method for handling parent-child records that suppresses child records in a search query. For example, an atlas with hundreds of records representing individual pages would only show up once in the search results. The pages are then accessed from the parent record entry.</p> </li> <li> <p>METADATA DOCUMENTATION: In an effort to provide guidance for new and existing GeoBlacklight metadata authors, we have added a new document, Schema Commentary, that discusses how several elements in the GeoBlacklight 1.0 Metadata Schema interact with the application and recommendations from the GeoBlacklight community of practice.</p> </li> </ul> <p>Thanks to everyone who participated with code development and review. Consider joining us for the next sprint!</p>"},{"location":"blogplugin/2020/2020-09-15-summer-sprint-2020/","title":"GeoBlacklight 3.0 is Here!","text":""},{"location":"blogplugin/2020/2020-09-15-summer-sprint-2020/#2020-summer-community-sprint","title":"2020 Summer Community Sprint","text":"<p>Our Summer Community Sprint concluded in August 2020 and resulted in a new version of GeoBlacklight! Version 3 brings us the long awaited multiple downloads option, support for Rails 6, and many improvements for accessibility.</p>"},{"location":"blogplugin/2020/2020-09-15-summer-sprint-2020/#notable-activities-and-enhancements","title":"Notable Activities and Enhancements","text":"<ul> <li> <p>MULTIPLE DOWNLOADS: To learn more about how to format metadata for multiple downloads, review How to configure multiple download links</p> </li> <li> <p>NEW NAME FOR THE DEFAULT BRANCH: We changed the name of the default branch to \u201cMain.\u201d There is a growing consensus in the development world for projects to change the default branch of their code in GitHub away from \"master,\" as this is a loaded, potentially offensive, term. Read more about it here, including comments from our community: https://github.com/geoblacklight/geoblacklight/issues/940</p> </li> <li> <p>ICONS: We deprecated the geoblacklight-icons project, which relied upon font-awesome for the icons. Now, new SVG images can be submitted directly to the GeoBlacklight repository  or added in your own GeoBlacklight application.</p> </li> <li> <p>METADATA SCHEMA WORKGROUP: During the sprint, we convened a Metadata Schema Workgroup to assess the current GeoBlacklight Schema 1.0 and develop an upgraded version. The workgroup will continue to meet throughout 2020.</p> </li> <li> <p>COMMUNITY GOVERNANCE &amp; VALUES: We also kicked off new discussions of how to be an equitable and inclusive community. These discussions are ongoing - check out our new About page, where we will be adding more soon.</p> </li> </ul> <p>Thanks to everyone who participated with code development, feature review, and metadata assessments. Consider joining us for the next sprint!</p>"},{"location":"blogplugin/2021/2021-02-10-announcing-winter-sprint-2021/","title":"Announcing the GeoBlacklight Community Winter 2021 Sprint","text":"<p>The GeoBlacklight Community collaborates on a 2-week sprint every Winter and Summer. Participation in the sprint is open to anyone and can include coding new features, fixing bugs, writing documentation, troubleshooting issues, and more.</p> <p>Each sprint starts with a kickoff meeting where we will review our goals and volunteer to contribute towards various issues. This will be followed by short standup meetings every day to check-in and plan our next activities.</p>"},{"location":"blogplugin/2021/2021-02-10-announcing-winter-sprint-2021/#event-dates","title":"Event Dates","text":"<ul> <li>The sprint will take place from February 16-26, 2021</li> <li>Kickoff Meeting: Tuesday, February 16 @ 11am Central Time</li> <li>Daily standup meetings: Weekdays, February 17-26 @ 1-1:30 pm Central Time</li> </ul>"},{"location":"blogplugin/2021/2021-02-10-announcing-winter-sprint-2021/#how-to-join","title":"How to Join","text":"<p>Send us your name and email using this Google form.  The GeoBlacklight Community Coordinator will then send you the Zoom links with instructions on how to join.</p>"},{"location":"blogplugin/2021/2021-02-10-announcing-winter-sprint-2021/#tracks-for-the-winter-2021-community-sprint","title":"Tracks for the Winter 2021 Community Sprint","text":"<p>This sprint will encompass three tracks:</p>"},{"location":"blogplugin/2021/2021-02-10-announcing-winter-sprint-2021/#track-1-metadata","title":"Track 1. Metadata","text":"<p>The GeoBlacklight Metadata Schema Workgroup is developing a new version of the metadata schema. During the sprint, we will need developers and metadata specialists to review and implement the new schema.</p>"},{"location":"blogplugin/2021/2021-02-10-announcing-winter-sprint-2021/#track-2-community","title":"Track 2. Community","text":"<p>Our community is growing! We are working on developing a governance framework, documenting our values, and developing a 2021 Roadmap. During the sprint, we will need people with project management and documentation skills to help move us towards improvements in our community organization.</p>"},{"location":"blogplugin/2021/2021-02-10-announcing-winter-sprint-2021/#track-3-software-maintenance","title":"Track 3. Software maintenance","text":"<p>This one is especially for Ruby on Rails programmers and any GeoBlacklight users who like to troubleshoot!  The sprint is a good time to fix bugs and look at dependency upgrades.</p>"},{"location":"blogplugin/2021/2021-09-07-summer-sprint-2021/","title":"New releases after the GeoBlacklight Community Summer 2021 Sprint","text":""},{"location":"blogplugin/2021/2021-09-07-summer-sprint-2021/#overview","title":"Overview","text":"<p>The GeoBlacklight Community completed another Summer Sprint, held from August 30 to September 3, 2021. </p> <p>The overarching goal of this sprint was to develop a Version 4 release to support the Aardvark Metadata Profile. We ended up settling on a pre-release to indicate that more testing and enhancements still need to be done. However, we did address several maintenance issues and updated the current release to version 3.4.</p> <p>Other activities included updating the project website, assessing existing metadata tools, and improving the application's fixture (sample) metadata records.</p>"},{"location":"blogplugin/2021/2021-09-07-summer-sprint-2021/#details","title":"Details","text":"<p>The sprint was divided into 3 overlapping tracks.</p>"},{"location":"blogplugin/2021/2021-09-07-summer-sprint-2021/#1-usability","title":"1. Usability","text":"<p>The Usability team focused on how to integrate  Aardvark metadata into GeoBlacklight's default user interface. Activities: - added new metadata fields to the item view page and search page facets  - created a mockup showing how to display the new item relationships available with the new Aardvark fields - updated the default order of the search facets to reflect the user studies reported in two journal articles:     - Mapping Search Queries to Metadata Fields in a GeoBlacklight Repository     - Usability Analysis of the Big Ten Academic Alliance Geoportal: Findings and Recommendations for Improvement of the User Experience - determined the rules and configuration options for icon display</p>"},{"location":"blogplugin/2021/2021-09-07-summer-sprint-2021/#2-application-development-software-maintenance-coding","title":"2. Application Development (Software maintenance &amp; coding)","text":"<p>The Application Development team focused on fixing deprecation warnings and incorporating the changes specified by the Usability track group.</p>"},{"location":"blogplugin/2021/2021-09-07-summer-sprint-2021/#current-release-version-340","title":"Current release: Version 3.4.0","text":"<p>This minor release includes maintenance issues and a few enhancements: - addressed numerous deprecation warnings inherited from the Blacklight software that will enable us to use Blacklight's Version 8 (still in development) in the future. - fixed a homepage map bug - updated the default interface with improved search result sorting options</p> <p> New search results sort options </p>"},{"location":"blogplugin/2021/2021-09-07-summer-sprint-2021/#pre-release-version-400-alpha","title":"Pre-release: Version 4.0.0-alpha","text":"<p>This major pre-release includes several global changes: - fully incorporates the latest Aardvark metadata profile - features new facet names and ordering - includes multiple item relation widgets</p> <p> New item relation widgets (outlined in purple box) </p>"},{"location":"blogplugin/2021/2021-09-07-summer-sprint-2021/#3-documentation-metadata-website-and-migration-guides","title":"3. Documentation (Metadata, website, and migration guides)","text":"<p>The Documentation team made assessments of existing metadata documentation and began the process of migrating the content to a new GitHub pages site in the OpenGeoMetadata organization. The latest documentation can be found here: https://opengeometadata.org</p> <p>More documentation work is on the way in the form of workflow recommendations for converting metadata from the GeoBlacklight 1.0 schema to the newer Aardvark profile.</p> <p>For more details, view our running notes from the daily standups, as well as the GitHub projects boards here and here.</p>"},{"location":"blogplugin/2022/2022-02-03-winter-sprint-2022/","title":"Announcing the GeoBlacklight Community Winter 2022 Sprint","text":"<p>The GeoBlacklight Community collaborates on a 2-week sprint every Winter and Summer. Participation in the sprint is open to anyone and can include coding new features, fixing bugs, writing documentation, troubleshooting issues, and more.</p> <p>Each sprint starts with a kickoff meeting where we will review our goals and volunteer to contribute towards various issues. This will be followed by short standup meetings every day to check-in and plan our next activities.</p>"},{"location":"blogplugin/2022/2022-02-03-winter-sprint-2022/#event-dates","title":"Event Dates","text":"<ul> <li>The sprint will take place from February 14-25, 2022</li> <li>Daily standup meetings: Weekdays, February 14-25 @ 1:00pm Central Time</li> </ul>"},{"location":"blogplugin/2022/2022-02-03-winter-sprint-2022/#how-to-join","title":"How to Join","text":"<p>Send us your name and email using this Google form.  The GeoBlacklight Community Coordinator will then send you the Zoom links with instructions on how to join.</p>"},{"location":"blogplugin/2022/2022-02-03-winter-sprint-2022/#tracks-for-the-winter-2022-community-sprint","title":"Tracks for the Winter 2022 Community Sprint","text":"<p>Here is the proposed sprint work broken up into sections:</p>"},{"location":"blogplugin/2022/2022-02-03-winter-sprint-2022/#coding","title":"Coding","text":"<ul> <li>Description: Creating code updates, fixes, and enhancements to commit to the GeoBlacklight code base</li> <li>Useful experience: application development, Ruby, Ruby on Rails</li> <li>Example tasks:</li> <li>Refining GeoBlacklight\u2019s Version 4 Alpha release to a Beta version</li> <li>Addressing bugs</li> <li>Performing maintenance on framework and dependency support (i.e. Bootstrap, Rails)</li> <li>Cleaning up Blacklight deprecation warnings</li> </ul>"},{"location":"blogplugin/2022/2022-02-03-winter-sprint-2022/#metadata","title":"Metadata","text":"<ul> <li>Description: Assessing and documenting the metadata schema for GeoBlacklight</li> <li>Useful experience: metadata, documentation</li> <li>Example tasks:</li> <li>creating an upgrade to Aardvark guide</li> <li>creating new or updating existing sample metadata files</li> <li>Updating OpenGeoMetadata and GeoCombine</li> </ul>"},{"location":"blogplugin/2022/2022-02-03-winter-sprint-2022/#documentation","title":"Documentation","text":"<ul> <li>Description: Improving the public website, tutorials, and guides</li> <li>Useful experience: writing, design, website editing</li> <li>Example tasks:</li> <li>improving the website design and content</li> <li>creating a \u201cHow to launch GeoBlacklight\u201d guide for the website</li> <li>organizing and updating the project wiki</li> </ul>"},{"location":"blogplugin/2022/2022-02-03-winter-sprint-2022/#other-work","title":"Other Work","text":"<ul> <li>Description: Other GeoBlacklight related work is welcome at this sprint!</li> </ul>"},{"location":"blogplugin/2022/2022-03-07-winter-sprint-recap/","title":"GeoBlacklight Community Sprint Recap, Winter 2022","text":""},{"location":"blogplugin/2022/2022-03-07-winter-sprint-recap/#overview-and-outcomes","title":"Overview and outcomes","text":"<p>The latest GeoBlacklight Community Sprint took place from February 14-25, 2022. Long time GeoBlacklight sprinters have noted that this was likely our most productive event and undoubtedly featured the most active participants. We had over a dozen participants representing Cornell, Harvard, Johns Hopkins University, Princeton, Stanford, UMass Amherst, and the University of Minnesota / Big Ten Academic Alliance. Moreover, five contributors made their very first code commits to GeoBlacklight during this event. </p> <p>Here are links to five tangible outcomes that we developed during the two-week sprint:</p> <ol> <li>Production release of GeoBlacklight, version 3.6.0</li> <li>Release candidate of GeoBlacklight, version 4.0.0-rc1</li> <li>New metadata website: opengeometadata.org</li> <li>Migrated guides for GeoBlacklight development: geoblacklight.org/guides</li> <li>New version of GeoCombine</li> </ol>"},{"location":"blogplugin/2022/2022-03-07-winter-sprint-recap/#highlights","title":"Highlights","text":""},{"location":"blogplugin/2022/2022-03-07-winter-sprint-recap/#new-locations-for-documentation","title":"New locations for documentation","text":"<p>All documentation for the GeoBlacklight community has been moved away from the GitHub Wiki. Information about GeoBlacklight, development, and customization can now be found on the Guides section of this website. All metadata documentation has been migrated to opengeometadata.org.</p>"},{"location":"blogplugin/2022/2022-03-07-winter-sprint-recap/#new-metadata-website-tools","title":"New metadata website &amp; tools","text":"<p>Last year, our community developed a new metadata schema for GeoBlacklight, lovingly called Aardvark. This new schema is a significant change:  it emphasizes interoperability and the unique characteristics of geodata &amp; maps, so we decided to begin promoting it as an all-purpose discovery schema for geospatial resources. To that end, we launched a new website, opengeometadata.org that includes detailed schema documentation, guides, and examples. </p> <p>We also released a new update of GeoCombine, a tool within OpenGeoMetadata for programmatically ingesting and converting metadata. This update includes improvements in (1) how it harvests from OpenGeoMetadata repositories and (2) the transformation template for FGDC to HTML. </p>"},{"location":"blogplugin/2022/2022-03-07-winter-sprint-recap/#spatial-geometry-for-search-and-display","title":"Spatial geometry for search and display","text":"<p>We finally cracked a long-standing spatial problem while simultaneously enabling a long-desired enhancement. </p> <ul> <li>A Problem: bounding boxes that crossed the antimeridian would appear flipped or backward in search previews. </li> <li>A related desired enhancement: to be able to display complex or multiple geometries in search previews instead of just a single bounding box.</li> <li>Our solution: We incorporated a new option for a spatial metadata field that can use any WKT POLYGON or MULTIPOLYGON for display and searches. This enhancement was built with Geo3D for Solr and opened up the possibilities for what kind of geometries the metadata can feature. This also solves the antimeridian problem, as the metadata can now have two adjacent bounding boxes that will display correctly. Read more about how to format the Geometry field in OpenGeoMetadata to take advantage of this new feature.</li> </ul> <p> Image Caption - Two bounding boxes</p>"},{"location":"blogplugin/2022/2022-03-07-winter-sprint-recap/#accessibility-user-interface-improvements","title":"Accessibility &amp; user interface improvements","text":"<p>We improved the layout of the item pages in the default GeoBlacklight user interface in a few ways:</p> <ol> <li>The map preview is now above the metadata</li> <li>Added a full-screen option to the map preview</li> <li>Web services and downloads were converted from text links to \"Call-to-Action\" type buttons</li> <li>Updated the index map to use a more accessible color palette and added a legend</li> </ol> <p> Image Caption - The map is now directly below the title and has a full-screen option. There is also a new button for web services and an adjusted dropdown button for Downloads</p> <p> Image Caption - Shows improved colors and a legend above the index map</p>"},{"location":"blogplugin/2022/2022-03-07-winter-sprint-recap/#blacklight-future-alignment-plans","title":"Blacklight + future alignment plans","text":"<p>Whenever possible, we make a concentrated effort to align with the development practices of our underlying framework application, Blacklight. During the sprint, we collaborated with Blacklight developers to clear up deprecation warnings and remove an override customization used for bounding boxes. </p> <p>For the future, we decided to eventually remove jQuery dependencies. This will help us stay consistent with Blacklight and eventually upgrade to Bootstrap 5. We also plan to rewrite our JavaScript code using the more modern version, ES6.</p>"},{"location":"blogplugin/2022/2022-03-07-winter-sprint-recap/#future-plans","title":"Future plans","text":"<ul> <li>Over the next six months, selected institutions will test the release candidate 4.0, which includes full Aardvark metadata support and all of the new features developed during the sprint. </li> <li>We plan to schedule a dedicated documentation sprint that will include a broad cross-section of skills within our community.</li> </ul> <p>For even more details, view our running notes from the daily standups and the GitHub projects boards for development and metadata.</p>"},{"location":"blogplugin/2022/2022-08-01-summer-sprint-2022-announcement/","title":"Announcing the GeoBlacklight Community Summer 2022 Sprint","text":"<p>The GeoBlacklight Community collaborates on a 2-week sprint every Winter and Summer. Participation in the sprint is open to anyone and can include coding new features, fixing bugs, writing documentation, troubleshooting issues, and more.</p> <p>Each sprint starts with a kickoff meeting where we will review our goals and volunteer to contribute towards various issues. This will be followed by short standup meetings every day to check-in and plan our next activities.</p>"},{"location":"blogplugin/2022/2022-08-01-summer-sprint-2022-announcement/#event-dates","title":"Event Dates","text":"<p>This sprint is taking place over two non-consecutive weeks:</p> <ul> <li>August 8-12, 2022 and September 12-16, 2022</li> <li>Daily standup meetings: Weekdays @ 1:05pm Central Time</li> </ul>"},{"location":"blogplugin/2022/2022-08-01-summer-sprint-2022-announcement/#how-to-join","title":"How to Join","text":"<p>Send us your name and email using this Google form.  The GeoBlacklight Community Coordinator will then send you the Zoom links with instructions on how to join.</p>"},{"location":"blogplugin/2022/2022-08-01-summer-sprint-2022-announcement/#tracks-for-the-summer-2022-community-sprint","title":"Tracks for the Summer 2022 Community Sprint","text":"<p>Here is the proposed sprint work broken up into sections:</p>"},{"location":"blogplugin/2022/2022-08-01-summer-sprint-2022-announcement/#1-coding","title":"1. Coding","text":""},{"location":"blogplugin/2022/2022-08-01-summer-sprint-2022-announcement/#primary-goal-upgrade-geoblacklight-version-4-from-pre-release-status-to-stable-version","title":"Primary Goal: Upgrade GeoBlacklight, Version 4 from pre-release status to stable version","text":"<ul> <li>Description: Creating code updates, fixes, and enhancements to commit to the GeoBlacklight code base</li> <li>Useful experience: application development, Ruby, Ruby on Rails</li> <li>Example tasks:</li> <li>Addressing bugs</li> <li>Performing maintenance on framework and dependency support (i.e. Bootstrap, Rails)</li> <li>Cleaning up Blacklight deprecation warnings</li> </ul>"},{"location":"blogplugin/2022/2022-08-01-summer-sprint-2022-announcement/#2-documentation","title":"2. Documentation","text":""},{"location":"blogplugin/2022/2022-08-01-summer-sprint-2022-announcement/#primary-goal-improve-documentation-for-getting-started","title":"Primary Goal: Improve documentation for getting started","text":"<ul> <li>Description: Improving the public website, tutorials, and guides</li> <li>Useful experience: writing, design, website editing</li> <li>Example tasks:</li> <li>improving the website design and content</li> <li>creating a \u201cHow to launch GeoBlacklight\u201d guide for the website</li> <li>organizing and updating the project wiki</li> </ul>"},{"location":"blogplugin/2022/2022-08-01-summer-sprint-2022-announcement/#3-metadata","title":"3. Metadata","text":""},{"location":"blogplugin/2022/2022-08-01-summer-sprint-2022-announcement/#primary-goal-improve-documentation-for-migrating-to-opengeometadata-schema-version-aardvark","title":"Primary Goal: Improve documentation for migrating to OpenGeoMetadata schema, version Aardvark","text":"<ul> <li>Description: Assessing and documenting the metadata schema for GeoBlacklight</li> <li>Useful experience: metadata, documentation</li> <li>Example tasks:</li> <li>creating a metadata migration guide</li> <li>creating new or updating existing sample metadata files</li> <li>Updating the OpenGeoMetadata website</li> </ul>"},{"location":"blogplugin/2022/2022-08-01-summer-sprint-2022-announcement/#other-work","title":"Other Work","text":"<ul> <li>Description: Other GeoBlacklight-related work is welcome at this sprint!</li> </ul>"},{"location":"blogplugin/2022/2022-09-20-geoblacklight-4/","title":"The wait is over - GeoBlacklight 4.0 is here!","text":"<p>KEY LINKS</p> <ul> <li> <p>The RubyGems GeoBlacklight v4.0.0 Release (GitHub)</p> </li> <li> <p>Guide for Upgrading to GeoBlacklight Version 4</p> </li> <li> <p>Guide for Upgrading Metadata to the OpenGeoMetadata (OGM) Aardvark Schema</p> </li> <li> <p>gbl2aardvark: A new web-hosted application to automatically convert GeoBlacklight 1.0 JSON files to the OGM Aardvark schema</p> </li> </ul> <p>The GeoBlacklight Community is excited to announce the release of our next major version:  GeoBlacklight 4.0. This version features official support for OGM Aardvark, and we have enriched the documentation for GeoBlacklight and OpenGeoMetadata.</p> <p></p>"},{"location":"blogplugin/2022/2022-09-20-geoblacklight-4/#1-official-support-for-the-latest-opengeometadata-schema-ogm-aardvark","title":"1. Official support for the latest OpenGeoMetadata schema, OGM Aardvark.","text":"<p>OGM Aardvark is a geospatial metadata schema that was collaboratively developed by geospatial metadata specialists and librarians from twelve university libraries. Launched in 2021, it replaces the GeoBlacklight metadata schema version 1.0 (GBL 1.0). Compared to GBL 1.0, OGM Aardvark features syntactical updates to improve interoperability and incorporates additional fields for better descriptions of a wider range of resources. It is now the recommended schema for all institutions adopting GeoBlacklight.</p> <p>By default, GeoBlacklight 4.0 displays all human-readable OGM Aardvark metadata values on the item view page, including the new fields for:</p> <ul> <li>specifying rights and licenses (see figure 1)</li> <li>categorizing records by class and type (see figure 2)</li> <li>interactive widgets connecting records via seven different types of relationships</li> </ul> <p></p> <p>Figure 1</p> <p>Image caption: Sample record item view page displaying new OGM Aardvark metadata fields and values</p> <p>Note: Learn how to customize your item view pages with the Application Configuration section of the new Guide for Upgrading to GeoBlacklight Version 4</p> <p></p> <p>Figure 2</p> <p>Image caption: The new Resource Class facet</p> <p>Note: Read more about the Resource Class field on its schema documentation page</p>"},{"location":"blogplugin/2022/2022-09-20-geoblacklight-4/#2-documentation-improvements","title":"2. Documentation improvements","text":"<p>We focused our Summmer Community Sprint 2022 on improving the technical documentation for GeoBlacklight and OpenGeometadata.</p>"},{"location":"blogplugin/2022/2022-09-20-geoblacklight-4/#21-geoblacklight-documentation","title":"2.1 GeoBlacklight documentation","text":"<p>Check out our new application documentation site at https://geoblacklight.org/docs. Notable additions include:</p> <ul> <li>a detailed guide for upgrading to version 4.0</li> <li>an updated and vetted Quickstart Guide and Developer's Guide for installing GeoBlacklight locally</li> <li>a new section called Running in Production, which includes example environments and maintenance recommendations</li> <li>new guides for adding customizations to Leaflet: Homepage Map Centroid Clusters and Dynamic Basemap Switching</li> </ul>"},{"location":"blogplugin/2022/2022-09-20-geoblacklight-4/#23-opengeometadata-documentation","title":"2.3 OpenGeoMetadata documentation","text":"<p>Visit our improved metadata documentation site at https://opengeometadata.org. Recent additions include:</p> <ul> <li>easier navigation for finding OGM Aardvark schema elements, including a grouped chart and an alphabetical list</li> <li> <p>metadata crosswalk tables</p> <ul> <li>OGM Aardvark - GBL 1.0 crosswalk table</li> <li>OGM Aardvark - FGDC - ISO 19139 crosswalk table</li> </ul> </li> <li> <p>new conversion tools</p> <ul> <li>a draft XSLT  for converting FGDC metadata to OGM Aardvark</li> <li>gbl2aardvark: a new web hosted tool to automatically convert GeoBlacklight 1.0 JSON files to OGM Aardvark</li> </ul> </li> </ul> <p></p> <p>Figure 3</p> <p>Image caption: screenshot of gbl2aardvark</p>"},{"location":"blogplugin/2022/2022-09-20-geoblacklight-4/#3-credits","title":"3. Credits","text":"<p>This release represents substantial and concerted efforts from many in our community: over the past one to two years, fourteen community members committed code to our GitHub repository for this release, while nearly twenty individuals contributed to creating our related project, the OGM Aardvark metadata schema.</p> <p>Thank you to everyone for participating in this evolution!</p>"},{"location":"blogplugin/2023/2023-03-08-winter-sprint/","title":"Winter 2023 Community Sprint Recap","text":"<p>KEY LINKS</p> <ul> <li>Documentation for new Aardvark field, Display Note</li> <li>GeoBlacklight release and technology dependency matrix.</li> <li>Sidecar Images Plugin</li> <li>Dockerized GeoBlacklight</li> </ul> <p>Seven members of the GeoBlacklight Community participated in a one-week sprint for the week of February 27 - March 3, 2023. We focused on organizing the open issues for OpenGeoMetadata as well as how to plan for upcoming challenges with adopting the beta version of Blacklight 8.0.  </p> <p>The sprint resulted in several new outcomes: a metadata field, multiple documentation pages, a release of the Sidecar Images plugin, and a dockerized container for GeoBlacklight.</p>","tags":["sprint","metadata"]},{"location":"blogplugin/2023/2023-03-08-winter-sprint/#new-metadata-field-display-note-added-to-opengeometadata-version-aardvark","title":"New metadata field, \"Display Note\", added to OpenGeoMetadata, version Aardvark.","text":"<p>Many institutions using GeoBlacklight have implemented custom fields to display warnings or tips to users. These fields are used to highlight important information about a resource that users need to be aware of before accessing or using it. For example, a warning might indicate that the resource is incomplete or may be difficult to use due to technical limitations. A tip might provide guidance on how to use the resource effectively, such as suggesting specific software or tools that are compatible with the data. </p> <p>The main downside of custom fields is that they are not interoperable; when we share metadata across institutions, this information is lost. Another drawback is that custom fields require local development time to implement as opposed to functionality that comes with GeoBlacklight out-of-the-box.</p> <p>During the sprint, we devised a single field to capture this information, called \"Display Note\". This versatile field is inspired by website widgets known variably as callouts (general usage), admonitions (Python Markdown), or alerts (Bootstrap). Callouts are generally highlighted in colors and/or icons that indicate the type of information being offered, such as a red background for a Warning.  </p> <p>Details about the new field:</p> <ul> <li>URI: <code>gbl_displayNote_sm</code></li> <li>Multiplicity: this field is an array that can have multiple values</li> <li>Syntax: type of callout: text of callout</li> <li>Example value: <pre><code>[\n\"Warning: This text (starting with 'This text') will be displayed in a red box\",\n\"Info: This text (starting with 'This text') will be displayed in a blue box\",\n\"Tip: This text (starting with 'This text') will be displayed in a green box\",\n\"This is text without a tag and it will be assigned the default 'note' style\"\n]\n</code></pre></li> </ul> <p>Right now, the field can be added to your GeoBlacklight Solr instance as a simple string field. In the next sprint, we plan to add functionality to GeoBlacklight that will automatically read the first part of the field (ex. Warning:) and display the text with highlight background prominently on the page. </p>","tags":["sprint","metadata"]},{"location":"blogplugin/2023/2023-03-08-winter-sprint/#versioning-and-roadmaps","title":"Versioning and roadmaps","text":"<p>We have a new Technology Matrix that maps out our GeoBlacklight release plans and technology dependencies. This matrix takes into account compatiblity with the Blacklight Project, which recently pre-released a beta version 8.0..</p> <p></p>","tags":["sprint","metadata"]},{"location":"blogplugin/2023/2023-03-08-winter-sprint/#new-release-of-geoblacklight-sidecar-images-plugin","title":"New Release of GeoBlacklight Sidecar Images Plugin","text":"<p>We upgraded the GeoBlacklight Sidecar Images Plugin, which can display image thumbnails on search result pages. The plugin now uses the same rake tasks as GeoBlacklight for running the test suite.</p>","tags":["sprint","metadata"]},{"location":"blogplugin/2023/2023-03-08-winter-sprint/#new-dockerized-version-of-geoblacklight","title":"New Dockerized version of GeoBlacklight","text":"<p>Developers from Harvard University have created a built instance of GeoBlacklight in a Docker context. This will allow new and existing users to test and develop an instance of GeoBlacklight within the Docker environment.</p> <p>Thank you to everyone who participated during this sprint!  Please consider joining up at the next community sprint coming in June 2023. </p>","tags":["sprint","metadata"]},{"location":"docs/","title":"Welcome to the GeoBlacklight Documentation pages","text":"<p>GeoBlacklight is an open-source Ruby on Rails software application for discovering geospatial content, including GIS datasets, web services, and digitized paper maps.</p>"},{"location":"docs/customization/accessing_geopackages/","title":"Accessing Raster and Vector Layers in GeoPackages","text":""},{"location":"docs/customization/accessing_geopackages/#accessing-raster-and-vector-layers-in-geopackages","title":"Accessing Raster and Vector Layers in GeoPackages","text":""},{"location":"docs/customization/accessing_geopackages/#ogc-geopackage","title":"OGC GeoPackage","text":"<p>GeoPackage is an encoding standard specified and maintained by the Open Geospatial Consortium, primarily directed towards the structure of SQLite geodatabases.  As the GeoPackage standard provides standardization for vector features, tile matrix sets, and raster maps, it may be used as a container for either vector or raster spatial data sets.</p> <p>To indicate the download is a \u201cGeoPackage\u201d, add this term to the <code>dct_format_s</code> OpenGeoMetadata schema field.</p>"},{"location":"docs/customization/accessing_geopackages/#gis-web-services","title":"GIS Web Services","text":"<p>GeoPackages may be rendered using the layer viewer by providing the URL of a standard Web Map Service (WMS) or Web Feature Service (WFS) within the <code>dct_references_s</code> field of the schema.</p>"},{"location":"docs/customization/accessing_geopackages/#geoserver-support","title":"GeoServer Support","text":"<p>For those who are currently using GeoServer in order to provide access to these data sets, the documentation outlines the process for uploading data sets and extracting vector or raster layers.  Further, there also exists a plugin which permits one to export vector or raster data layers into GeoPackages (please see further documentation outlining the extended WMS/WFS output formats). Unfortunately (as stated above), exporting into GeoPackage in GeoServer requires that one install a plugin.  Only reading is supported by GeoServer core.</p>"},{"location":"docs/customization/accessing_geopackages/#arcmap-and-arcgis-pro-support","title":"ArcMap and ArcGIS Pro Support","text":"<p>For those using Esri's ArcMap, the process of connecting to a GeoPackage data source is identical to that of connecting to any SQLite database: https://desktop.arcgis.com/en/arcmap/latest/manage-data/databases/connect-sqlite.htm.  This is the case also for users of ArcGIS Pro: https://pro.arcgis.com/en/pro-app/help/data/databases/work-with-sqlite-databases-in-arcgis-pro.htm </p>"},{"location":"docs/customization/adding_leaflet_controls/","title":"Adding Leaflet Controls","text":""},{"location":"docs/customization/adding_leaflet_controls/#adding-leaflet-controls","title":"Adding Leaflet controls","text":"<p>GeoBlacklight supports adding customized Leaflet plugin controls to the maps. This can useful for adding a geocoding or fullscreen. This guide will walkthrough adding the Leaflet.fullscreen control plugin.</p>"},{"location":"docs/customization/adding_leaflet_controls/#add-required-javascript-and-css","title":"Add required Javascript and CSS","text":"<p>To add a custom control, first make sure that you require the needed JavaScript and/or CSS styles in your GeoBlacklight application.</p> <pre><code>// In your applications's app/assets/javascripts/geoblacklight.js\n\n//= require geoblacklight/geoblacklight\n//= require geoblacklight/basemaps\n//= require geoblacklight/controls\n//= require geoblacklight/viewers\n//= require geoblacklight/modules\n//= require geoblacklight/downloaders\n//= require leaflet-iiif\n//= require esri-leaflet\n//= require readmore.min\n\n//= require Leaflet.fullscreen.js\n</code></pre> <p>You should do something similar for vendor css files and images. GeoBlacklight uses the Rails asset pipeline for asset management. Vendor maintained files should usually be added under <code>./vendor/assets</code>.</p> <pre><code>// In your applications's app/assets/stylesheets/geoblacklight.css.scss\n/*\n*= require geoblacklight/application\n*= require leaflet.fullscreen\n*/\n</code></pre>"},{"location":"docs/customization/adding_leaflet_controls/#configure-your-settings","title":"Configure your settings","text":"<p>Next, you need to configure your settings to tell the viewers to load your control. Your application's <code>lib/generators/geoblacklight/templates/settings.yml</code> should look something like this:</p> <pre><code>...\nOPACITY_CONTROL: &amp;opacity_control\n  CONTROLS:\n    - 'Opacity'\n\nLEAFLET:\n  MAP:\n  LAYERS:\n  VIEWERS:\n    WMS:\n      &lt;&lt;: *opacity_control\n    TILEDMAPLAYER:\n      &lt;&lt;: *opacity_control\n    FEATURELAYER:\n      &lt;&lt;: *opacity_control\n    DYNAMICMAPLAYER:\n      &lt;&lt;: *opacity_control\n    IMAGEMAPLAYER:\n      &lt;&lt;: *opacity_control\n...\n</code></pre> <p>Let's say you want to add the fullscreen control for just your WMS viewer. You will need to update your <code>WMS</code> viewer controls to add it like so:</p> <pre><code>...\n  VIEWERS:\n      WMS:\n        CONTROLS:\n          - 'Opacity'\n          - 'Fullscreen'\n...\n</code></pre>"},{"location":"docs/customization/adding_leaflet_controls/#initialize-your-plugin","title":"Initialize your plugin","text":"<p>Finally you need to initialize your controls like this. You can initialize the plugin with additional options.</p> <pre><code>// In your applications's app/assets/javascripts/geoblacklight/geoblacklight.js\n...\n//= require Leaflet.fullscreen.js\n\nGeoBlacklight.Controls.Fullscreen = function() {\nthis.map.addControl(new L.Control.Fullscreen({\nposition: 'topright'\n}));\n};\n</code></pre> <p>You should now have a working fullscreen button in your application!</p> <p></p>"},{"location":"docs/customization/adding_leaflet_controls/#adding-a-search-control","title":"Adding a Search Control","text":"<p>Customizing Leaflet has certain limitations which can fortunately be overcome through the usage of plugins developed by third parties.  Leaflet provides the following listing of plugins for the library: https://leafletjs.com/plugins.html#search--popups</p>"},{"location":"docs/customization/adding_leaflet_controls/#downloading-leaflet-plugins","title":"Downloading Leaflet Plugins","text":"<p>Firstly, in order to integrate a plugin, the JavaScript source file(s) are downloaded into the <code>vendor/assets/javascripts</code> directory, where names are all in the lower case, with whitespace being replaced by dash characters (e. g. <code>vendor/assets/javascripts/esri-leaflet.js</code>)</p>"},{"location":"docs/customization/adding_leaflet_controls/#downloading-javascript-source-files","title":"Downloading JavaScript Source Files","text":"<p>Using <code>wget</code> <pre><code>$ wget -O vendor/assets/javascripts/leaflet-search.js https://raw.githubusercontent.com/stefanocudini/leaflet-search/master/dist/leaflet-search.src.js\n</code></pre> Using <code>curl</code> <pre><code>$ curl -o vendor/assets/javascripts/leaflet-search.js https://raw.githubusercontent.com/stefanocudini/leaflet-search/master/dist/leaflet-search.src.js\n</code></pre> For Production Builds <pre><code>$ wget -O vendor/assets/javascripts/leaflet-search.js https://raw.githubusercontent.com/stefanocudini/leaflet-search/master/dist/leaflet-search.min.js\n</code></pre> or <pre><code>$ curl -o vendor/assets/javascripts/leaflet-search.js https://raw.githubusercontent.com/stefanocudini/leaflet-search/master/dist/leaflet-search.min.js\n</code></pre></p>"},{"location":"docs/customization/adding_leaflet_controls/#downloading-css-files","title":"Downloading CSS Files","text":"<p><code>wget</code> <pre><code>$ wget -O vendor/assets/stylesheets/leaflet-search.css https://raw.githubusercontent.com/stefanocudini/leaflet-search/master/dist/leaflet-search.src.css\n\n$ wget -O vendor/assets/stylesheets/leaflet-search.mobile.css https://raw.githubusercontent.com/stefanocudini/leaflet-search/master/dist/leaflet-search.mobile.src.css\n</code></pre> <code>curl</code> <pre><code>$ curl -o vendor/assets/stylesheets/leaflet-search.css https://raw.githubusercontent.com/stefanocudini/leaflet-search/master/dist/leaflet-search.src.css\n\n$ curl -o vendor/assets/stylesheets/leaflet-search.mobile.css https://raw.githubusercontent.com/stefanocudini/leaflet-search/master/dist/leaflet-search.mobile.src.css\n</code></pre> Production Builds <pre><code>$ wget -O vendor/assets/stylesheets/leaflet-search.css https://raw.githubusercontent.com/stefanocudini/leaflet-search/master/dist/leaflet-search.min.css\n\n$ wget -O vendor/assets/stylesheets/leaflet-search.mobile.css https://raw.githubusercontent.com/stefanocudini/leaflet-search/master/dist/leaflet-search.mobile.min.css\n</code></pre> or <pre><code>$ curl -o vendor/assets/stylesheets/leaflet-search.css https://raw.githubusercontent.com/stefanocudini/leaflet-search/master/dist/leaflet-search.min.css\n\n$ curl -o vendor/assets/stylesheets/leaflet-search.mobile.css https://raw.githubusercontent.com/stefanocudini/leaflet-search/master/dist/leaflet-search.mobile.min.css\n</code></pre></p>"},{"location":"docs/customization/adding_leaflet_controls/#downloading-image-files","title":"Downloading Image Files","text":"<p><pre><code>$ wget -O app/assets/images/loader.gif https://github.com/stefanocudini/leaflet-search/raw/master/images/loader.gif\n$ wget -O app/assets/images/search-icon-mobile.png https://github.com/stefanocudini/leaflet-search/raw/master/images/search-icon-mobile.png\n$ wget -O app/assets/images/search-icon.png https://github.com/stefanocudini/leaflet-search/raw/master/images/search-icon.png\n</code></pre> or <pre><code>$ curl -o app/assets/images/loader.gif https://github.com/stefanocudini/leaflet-search/raw/master/images/loader.gif\n$ curl -o app/assets/images/search-icon-mobile.png https://github.com/stefanocudini/leaflet-search/raw/master/images/search-icon-mobile.png\n$ curl -o app/assets/images/search-icon.png https://github.com/stefanocudini/leaflet-search/raw/master/images/search-icon.png\n</code></pre></p>"},{"location":"docs/customization/adding_leaflet_controls/#integrating-plugins-into-leaflet","title":"Integrating Plugins into Leaflet","text":"<p>Integrating a plugin varies depending upon precisely what is being used, but the general approach seems to often follow a pattern such as the following: <pre><code>var searchLayer = L.layerGroup().addTo(map);\n//... adding data in searchLayer ...\nmap.addControl( new L.Control.Search({layer: searchLayer}) );\n</code></pre> ...where the <code>map</code> Object invokes <code>addControl</code> using the search <code>L.Control</code> Object as an argument.</p>"},{"location":"docs/customization/adding_leaflet_controls/#configuring-geoblacklight","title":"Configuring GeoBlacklight","text":"<p>When integrating this GeoBlacklight, the approach above could modified by extending the previous example:</p> <pre><code>...\n  VIEWERS:\n      WMS:\n        CONTROLS:\n          - 'Opacity'\n          - 'Fullscreen'\n          - 'Search'\n...\n</code></pre> <pre><code>// In the application app/assets/javascripts/geoblacklight.js\n...\n//= require\n//= require leaflet-search\n\nGeoBlacklight.Controls.Search = function() {\n  this.map.addControl(new L.control.search({\n    url: 'http://nominatim.openstreetmap.org/search?format=json&amp;q={s}',\n        jsonpParam: 'json_callback',\n        propertyName: 'display_name',\n        propertyLoc: ['lat','lon'],\n        marker: L.circleMarker([0,0], { radius: 30 }),\n        autoCollapse: true,\n        autoType: false,\n        minLength: 2\n  }));\n};\n</code></pre> <p><pre><code>// In the application app/assets/stylesheets/geoblacklight.scss\n/*\n*= require geoblacklight/application\n*= require leaflet-label\n*= require leaflet-search\n*= require leaflet-search.mobile\n*/\n\n// SCSS overrides for the default styles properties\n.leaflet-container {\n  .leaflet-control-search {\n    margin-top: 3.2rem;\n\n    .search-button {\n      background-image: image-url('search-icon-mobile');\n\n      &amp;:hover {\n        background-image: image-url('search-icon-mobile');\n      }\n    }\n  }\n}\n</code></pre> After refreshing your web browser, the map viewer should now have a search control integrated:</p> <p></p>"},{"location":"docs/customization/adding_mirador_viewer/","title":"Adding Mirador IIIF Manifest Viewer","text":""},{"location":"docs/customization/adding_mirador_viewer/#adding-mirador-iiif-manifest-viewer","title":"Adding Mirador IIIF Manifest Viewer","text":""},{"location":"docs/customization/adding_mirador_viewer/#mirador","title":"Mirador","text":"<p>Mirador is an open source IIIF image and IIIF manifest viewer. Core GeoBlacklight contributors have contributed significantly to Mirador.</p>"},{"location":"docs/customization/adding_mirador_viewer/#install","title":"Install","text":"<p>Add the Mirador 3 javascript and stylesheet assets to your project. If you are using Yarn, you can just add mirador via:</p> <pre><code>yarn add mirador\n</code></pre> <p>Or you can edit your package.json file like so, and run:</p> <pre><code>  ...\n\"dependencies\": {\n\"@babel/cli\": \"^7.5.5\",\n\"@babel/core\": \"^7.5.5\",\n\"@rails/webpacker\": \"^4.0.7\",\n\"babel-loader\": \"^8.0.6\",\n\"bloodhound-js\": \"^1.2.3\",\n\"bootstrap\": \"^4.3.1\",\n\"jquery\": \"^3.4.0\",\n\"mirador\": \"^3.3.0\",\n\"readmore-js\": \"^3.0.0-beta-1\",\n\"typeahead.js\": \"^0.11.1\",\n\"lodash\": \"^4.17.13\",\n\"lodash.template\": \"^4.5.0\"\n}\n</code></pre> <pre><code>yarn install\n</code></pre>"},{"location":"docs/customization/adding_mirador_viewer/#configure","title":"Configure","text":"<p>With Mirador installed, you need to add the javascript library to your application.</p> <p>application.js <pre><code>// Mirador\n//= require mirador/dist/mirador.min.js\n</code></pre></p>"},{"location":"docs/customization/adding_mirador_viewer/#add-a-geoblacklight-viewer","title":"Add a GeoBlacklight Viewer","text":"<p>Within app/assets/javascripts/geoblacklight/viewers add a new iiif_manifest.js viewer, and specify your Mirador configuration values.</p> <pre><code>//= require geoblacklight/viewers/viewer\n\nGeoBlacklight.Viewer.IiifManifest = GeoBlacklight.Viewer.extend({\nload: function() {\nvar manifest_uri = document.getElementById('map').getAttribute('data-url');\n\nvar miradorInstance = Mirador.viewer({\nid: 'map',\nthemes: {\nlight: {\npalette: {\ntype: 'light',\nprimary: {\nmain: '#0088ce',\n},\n},\n},\n},\nwindows: [{\nmanifestId: manifest_uri,\nthumbnailNavigationPosition: 'far-bottom',\n}],\nwindow: {\nhideSearchPanel: false,\nhideWindowTitle: true,\nhideAnnotationsPanel: true,\nallowClose: false,\nallowMaximize: false,\nallowFullscreen: true,\n},\nworkspace: {\nshowZoomControls: true,\n},\nworkspaceControlPanel: {\nenabled: false,\n}\n});\n}\n});\n</code></pre> <p>Override the GeoBlacklight ItemViewer to add support for your iiif_manifest viewer. In the B1G Geoportal we keep our local ItemViewer customizations in config/initializers/item_viewer.rb</p> <pre><code>module Geoblacklight\nclass ItemViewer\ndef initialize(references)\n@references = references\nend\n\ndef viewer_protocol\nreturn 'map' if viewer_preference.nil?\nviewer_preference.keys.first.to_s\nend\n\ndef viewer_endpoint\nreturn '' if viewer_preference.nil?\nviewer_preference.values.first.to_s\nend\n\ndef wms\n@references.wms\nend\n\ndef iiif\n@references.iiif\nend\n\n# HERE - Added viewer\ndef iiif_manifest\n@references.iiif_manifest\nend\n\ndef tiled_map_layer\n@references.tiled_map_layer\nend\n\ndef dynamic_map_layer\n@references.dynamic_map_layer\nend\n\ndef feature_layer\n@references.feature_layer\nend\n\ndef image_map_layer\n@references.image_map_layer\nend\n\ndef index_map\n@references.index_map\nend\n\n# HERE - also need to specify viewer preference\ndef viewer_preference\n[index_map, wms, iiif, iiif_manifest, tiled_map_layer, dynamic_map_layer,\nimage_map_layer, feature_layer].compact.map(&amp;:to_hash).first\nend\nend\nend\n</code></pre>"},{"location":"docs/customization/adding_mirador_viewer/#enjoy","title":"Enjoy!","text":"<p>Add a IIIF Manifest-based fixture to your spec fixtures and reload the application (rake geoblacklight:server).</p>"},{"location":"docs/customization/adding_svg_icons/","title":"Adding SVG Icons","text":""},{"location":"docs/customization/adding_svg_icons/#adding-svg-icons","title":"Adding SVG Icons","text":""},{"location":"docs/customization/adding_svg_icons/#adding-svgs","title":"Adding SVGs","text":"<p>Adding new SVGs to GeoBlacklight or your local GBL application:</p> <ol> <li>Add your new or replacement SVG icon into the <code>/app/assets/images/blacklight</code> directory</li> <li>Add an :en I18n translation entry for the SVG icon in <code>/config/locales/geoblacklight.en.yml</code>, following this pattern:</li> </ol> <pre><code>    ...\nblacklight:\nicon:\narrow-circle-down: Arrow within a circle, pointing down\nbaruch-cuny: Baruch College\nberkeley: University of California, Berkeley\nyour-new-icon-filename-without-the-extension: Your new icon description\n</code></pre> <p>Render your new SVG icon using the blacklight_icon helper like so:</p> <pre><code>&lt;%= blacklight_icon('icon-filename') %&gt;\n</code></pre>"},{"location":"docs/customization/adding_svg_icons/#svg-icon-maintenance","title":"SVG Icon Maintenance","text":"<p>The stock GeoBlacklight SVG icons come from institutional partners and Font Awesome. The IcoMoon App was used to generate a working project board of icons.</p> <p>To view the IcoMoon project board:</p> <ol> <li>Visit https://icomoon.io/app/#/select</li> <li>Drag and drop the geoblacklight-icons.json file onto the page</li> </ol> <p>Now you'll see all icons in the project. You can add additional icons, change the default color value, or export to other formats here, ex. PNGs.</p> <p></p>"},{"location":"docs/customization/data_relations_widget/","title":"Using the Data Relations Widget","text":""},{"location":"docs/customization/data_relations_widget/#using-the-data-relations-widget","title":"Using the Data Relations Widget","text":"This documentation is for GeoBlacklight versions 1.3 to versions 3.7 only. Beginning with version 4.0, GeoBlacklight performs this function by default. <p>Beginning with v1.3.0, GeoBlacklight supports simple visualization of parent/children relations between records in a catalog. When records that were derived from a parent record point back to that parent, it enables a toolbar widget that displays the relation.</p> <p>To make use of this, we have introduced support for a \"source\" field in GeoBlacklight metadata records. The actual key of this field is arbitrary \u2013\u2013\u00a0just make sure that <code>Settings.FIELDS.SOURCE</code> properly reflects what you want to use \u2013\u2013\u00a0but the GeoBlacklight schema allocates the Dublin Core field <code>dc_source_sm</code> for this purpose.</p> <p>The responsibility of this field is to point to a parent document (a document from which the current one is derived). The value should be the <code>layer_slug_s</code> of that parent (or parents), which also resides in your catalog. No modifications need to be made to the parent record in order to point back towards the derived records.</p> <p>Here is an example use of the <code>dc_source_sm</code> field, from a GeoBlacklight schema record: <pre><code>  \"dc_source_sm\": [\n\"nyu_2451_34635\",\n\"nyu_2451_34636\"\n],\n</code></pre> In the above case, the record being described is derived from two different records in the catalog (namely, <code>nyu_2451_34635</code> and <code>nyu_2451_34636</code>).</p> <p>Now, when navigating to the show page for either the current record, or one of the two parent records, a user will see something like this:</p> <p> </p> <p>This functionality also provides a HTML and JSON API for viewing all parent/child datasets for a record. The route used is: <code>localhost:3000/catalog/fake-record-001/relations</code></p> <p>A sample JSON response for a record with two parents and no children might look like this: <pre><code>{\n\"ancestors\": {\n\"numFound\": 2,\n\"start\": 0,\n\"docs\": [\n{\n\"dc_title_s\": \"2016 NYC Geodatabase, ArcGIS Version (jan2016)\",\n\"layer_slug_s\": \"nyu_2451_34636\"\n},\n{\n\"dc_title_s\": \"2016 NYC Geodatabase, Open Source Version (jan2016)\",\n\"layer_slug_s\": \"nyu_2451_34635\"\n}\n]\n},\n\"descendants\": {\n\"numFound\": 0,\n\"start\": 0,\n\"docs\": []\n},\n\"current_doc\": \"nyu_2451_34513\"\n}\n</code></pre></p>"},{"location":"docs/customization/default_basemap/","title":"Switching Default Basemap","text":""},{"location":"docs/customization/default_basemap/#switching-the-default-basemap","title":"Switching the default basemap","text":"<p>GeoBlacklight comes with a default open-source basemap, Carto's Positron, but it is possible to switch to one of the seven baselayers supported within the GeoBlacklight application. They are:</p> <ul> <li>Dark Matter</li> <li>Positron</li> <li>Positron Lite</li> <li>World Antique</li> <li>World Eco</li> <li>Flat Blue</li> <li>Midnight Commander</li> </ul> <p>In order to toggle between them, all you need to do is go to the catalog_controller.rb file in your application and replace the config.basemap_provider value. The valid values are in the comments above this line as a helpful reminder.</p>"},{"location":"docs/customization/dynamic_basemap_switching/","title":"Dynamic Basemap Switching","text":"Please note:  This kind of customization may potentially make your future GeoBlacklight upgrades more difficult. If you choose to implement this feature, you will need to be extra vigilant when GBL JavaScript files change in future releases.  <p>Need a dynamic basemap switcher? You can customize GeoBlacklight to add support for Leaflet's basemap switching:</p> <p></p>"},{"location":"docs/customization/dynamic_basemap_switching/#1-add-javascript-cookie-to-your-application","title":"1. Add JavaScript Cookie to your application","text":"<p>Use yarn to install js-cookie:</p> <pre><code>$ yarn add js-cookie\n</code></pre> <p>Add the node_modules directory to your asset path:</p> <p><code>/config/initializers/assets.rb</code></p> <pre><code>Rails.application.config.assets.paths &lt;&lt; Rails.root.join('node_modules')\n</code></pre> <p>Add js-cookie to your geoblacklight.js file:</p> <p><code>/app/assets/javascript/geoblacklight.js</code></p> <pre><code>//= require handlebars.runtime\n//= require geoblacklight/geoblacklight\n//= require geoblacklight/basemaps\n//= require geoblacklight/controls\n//= require geoblacklight/viewers\n//= require geoblacklight/modules\n//= require geoblacklight/downloaders\n//= require leaflet-iiif\n//= require esri-leaflet\n\n// Local Customizations\n//= require js-cookie/dist/js.cookie.js\n//= require ./local/viewers/map\n</code></pre>"},{"location":"docs/customization/dynamic_basemap_switching/#2-add-basemap-options","title":"2. Add Basemap options","text":"<p>Configure the additional basemap options in your geoblacklight.js file:</p> <p><code>/app/assets/javascript/geoblacklight.js</code></p> <pre><code>...\n\n// Local Customizations\n//= require js-cookie/dist/js.cookie.js\n//= require ./local/viewers/map\n\n// LOCAL Namespace\nif (!window.LOCAL){ LOCAL={}; }\n\n// Basemap select - Text: Value\nLOCAL.baseLayerMap = {\n\"Default (Esri)\": 'esri',\n\"OpenStreetMaps\": 'openstreetmapStandard',\n\"World Imagery (Esri)\": 'esri_world_imagery'\n}\n\n// Additional leaflet base layers\nGeoBlacklight.Basemaps.esri =  L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}', {\nattribution: false,\nmaxZoom: 18,\nworldCopyJump: true,\ndetectRetina: true,\nnoWrap: false\n});\n\nGeoBlacklight.Basemaps.esri_world_imagery = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\nattribution: false,\nmaxZoom: 18,\nworldCopyJump: true,\ndetectRetina: true,\nnoWrap: false\n})\n</code></pre>"},{"location":"docs/customization/dynamic_basemap_switching/#3-modify-geoblacklights-mapjs-file","title":"3. Modify GeoBlacklight's map.js file","text":"<p>Copy and move GeoBlacklight's <code>map.js</code> file to your local application.</p> <p>Copy from GeoBlacklight: <code>app/assets/javascripts/geoblacklight/viewers/map.js</code></p> <p>Move to your local application here: <code>app/assets/javascripts/local/viewers/map.js</code></p> <p>Add a call to this.addBasemapSwitcher(); in the load block.</p> <pre><code>//= require geoblacklight/viewers/viewer\n\nGeoBlacklight.Viewer.Map = GeoBlacklight.Viewer.extend({\n\noptions: {\n/**\n    * Initial bounds of map\n    * @type {L.LatLngBounds}\n    */\nbbox: [[-82, -144], [77, 161]],\nopacity: 0.75\n},\n\noverlay: L.layerGroup(),\n\nload: function() {\nif (this.data.mapGeom) {\nthis.options.bbox = L.geoJSONToBounds(this.data.mapGeom);\n}\nthis.map = L.map(this.element).fitBounds(this.options.bbox);\nthis.map.addLayer(this.selectBasemap());\n\n// Add initial bbox to map element for easier testing\nif (this.map.getBounds().isValid()) {\nthis.element.setAttribute('data-js-map-render-bbox', this.map.getBounds().toBBoxString());\n}\n\nthis.map.addLayer(this.overlay);\nif (this.data.map !== 'index') {\nthis.addBoundsOverlay(this.options.bbox);\n}\n\n// Local Customizations\nthis.addBasemapSwitcher();\n},\n\n...\n</code></pre> <p>Now add the functions to switch basemaps and store the current basemap in JS Cookie:</p> <pre><code>...\n\n/**\n* Selects basemap if specified in 1) cookie, 2) data options, 3) if not return mapquest\n*/\nselectBasemap: function() {\nconsole.log(\"Selecting basemap\");\nconsole.log(\"Cookie: \" + Cookies.get('basemap'));\n\nvar _this = this;\nif (Cookies.get('basemap')) {\nreturn GeoBlacklight.Basemaps[LOCAL.baseLayerMap[Cookies.get('basemap')]];\n} else if (_this.data.basemap) {\nreturn GeoBlacklight.Basemaps[_this.data.basemap];\n} else {\nreturn _this.basemap.mapquest;\n}\n},\n\naddBasemapSwitcher: function() {\n// basemaps control\nconsole.log('Control: Base Layer');\nvar baseLayers = {\n\"Default (Esri)\": GeoBlacklight.Basemaps.esri,\n\"OpenStreetMaps\": GeoBlacklight.Basemaps.openstreetmapStandard,\n\"World Imagery (Esri)\": GeoBlacklight.Basemaps.esri_world_imagery\n};\n\nL.control.layers(baseLayers, null, { position: 'bottomleft' }).addTo(this.map);\n\n// Event listener for layer switcher\nthis.map.on('baselayerchange', function (e) {\nCookies.set('basemap', e.name)\n});\n}\n\n...\n</code></pre>"},{"location":"docs/customization/dynamic_basemap_switching/#4-add-leaflets-css-file-to-the-asset-pipeline","title":"4. Add Leaflet's CSS file to the asset pipeline","text":"<p>Unfortunately, Rails' asset pipeline cannot find Leaflet's Layer Group icon/images without some additional help.</p> <p>Download a copy of Leaflet and copy the leaflet.css file into your local project here:</p> <p><code>app/assets/stylesheets/leaflet/leaflet.css.erb</code></p> <p>Add an import statement to <code>application.scss</code> for this new file:</p> <pre><code>...\n\n// Customizations\n@import 'leaflet/leaflet';\n</code></pre> <p>We'll need to modify this CSS file slightly to reference the images we need in the application.</p> <p>At the top of this file add these lines:</p> <pre><code>//= depend_on_asset 'layer.png'\n//= depend_on_asset 'layers-2x.png'\n</code></pre> <p>Farther down the file, we'll need to edit this block too:</p> <pre><code>...\n\n/* layers control */\n\n.leaflet-control-layers {\nbox-shadow: 0 1px 5px rgba(0,0,0,0.4);\nbackground: #fff;\nborder-radius: 5px;\n}\n.leaflet-control-layers-toggle {\nbackground-image: url(&lt;%= asset_url 'layers.png' %&gt;);\nwidth: 36px;\nheight: 36px;\n}\n.leaflet-retina .leaflet-control-layers-toggle {\nbackground-image: url(&lt;%= asset_url 'layers-2x.png' %&gt;);\nbackground-size: 26px 26px;\n}\n\n...\n</code></pre> <p>We need the background-image paths to use Rails' asset_url helper so these images are fingerprinted correctly.</p> <p>Lastly, from your Leaflet download copy the <code>layers.png</code> and <code>layers-2x.png</code> files into your local application here:</p> <ul> <li><code>app/assets/images/layers.png</code></li> <li><code>app/assets/images/layers-2x.png</code></li> </ul>"},{"location":"docs/customization/homepage_map_centroid_clusters/","title":"Homepage Map Centroid Clusters","text":"Please note:  This kind of customization may potentially make your future GeoBlacklight upgrades more difficult. If you choose to implement this feature, you will need to be extra vigilant when GBL JavaScript files change in future releases.  <p>Want your homepage map to display centroid clusters? You can customize GeoBlacklight to add support for that:</p> <p></p>"},{"location":"docs/customization/homepage_map_centroid_clusters/#1-add-a-rake-task-to-generate-a-centroidsjson-file","title":"1. Add a rake task to generate a centroids.json file","text":"<p>Create a new rake file here: <code>/lib/tasks/generate_centroids_json.rake</code></p> <p>This rake task will write a <code>centroids.json</code> file to your application's public directory. Add these lines to the file:</p> <pre><code>require 'rsolr'\n\nnamespace :geoportal do\ndesc 'Generate homepage centroids for map clustering'\ntask generate_centroids_json: :environment do\nresponse = Blacklight.default_index.connection.get 'select', params: { q: \"*:*\", rows: '1000000' }\n\ndocs = []\nresponse[\"response\"][\"docs\"].each_with_index do |doc, index|\nbegin\nif doc.key?('dcat_centroid') &amp;&amp; !doc['dcat_centroid'].empty?\nentry = {}\nentry['l'] = doc['id']\nentry['t'] = ActionController::Base.helpers.truncate(doc['dct_title_s'], length: 50)\nlat,lng    = doc['dcat_centroid'].split(\",\")\nlat = lat.to_f.round(4) # Truncate long values\nlng = lng.to_f.round(4) # Truncate long values\nentry['c'] = \"#{lat},#{lng}\"\ndocs &lt;&lt; entry\nend\nrescue Exception =&gt; e\nputs \"Caught #{e}\"\nputs \"BBox or centroid no good - #{doc['id']}\"\nend\nend\n\ncentroids_file = \"#{Rails.root}/public/centroids.json\"\nFile.open(centroids_file, \"w\"){ |f| f.write(JSON.generate(docs)) }\nend\nend\n</code></pre> <p>Run this rake task via this command: <code>bundle exec rake geoportal:generate_centroids_json</code></p>"},{"location":"docs/customization/homepage_map_centroid_clusters/#2-install-javascript-dependencies","title":"2. Install JavaScript Dependencies","text":"<ul> <li>Oboe - Oboe.js reads json, giving you the objects as they are found without waiting for the stream to finish</li> <li>PruneCluster - Fast and realtime marker clustering for Leaflet</li> </ul> <p>Use yarn to add these two new dependencies to the project:</p> <p><code>yarn add oboe</code> <code>yarn add @sintef/prune-cluster</code></p> <p>Add the node_modules directory to your asset path:</p> <p><code>/config/initializers/assets.rb</code></p> <pre><code>Rails.application.config.assets.paths &lt;&lt; Rails.root.join('node_modules')\n</code></pre>"},{"location":"docs/customization/homepage_map_centroid_clusters/#3-add-our-javascript-changes-for-the-homepage-map","title":"3. Add our JavaScript changes for the Homepage Map","text":"<p>We need to override the GeoBlacklight <code>app/assets/javascripts/geoblacklight/modules/home.js</code> file to add our customization.</p> <p>To override a Rails Engine's javascript (GeoBlacklight), we need to update our asset pipeline calls to require specific files from the GeoBlacklight modules directory instead of globbing all of the file from <code>/modules/</code>.</p> <p>Change your local <code>geoblacklight.js</code> file to look like this:</p> <pre><code>//= require handlebars.runtime\n//= require geoblacklight/geoblacklight\n//= require geoblacklight/basemaps\n//= require geoblacklight/controls\n//= require geoblacklight/viewers\n\n// Local Customization - Start\n//= require geoblacklight/modules/bookmarks\n//= require geoblacklight/modules/download\n//= require geoblacklight/modules/geosearch\n//= require geoblacklight/modules/help_text\n//= require ./geoportal/modules/home\n//= require geoblacklight/modules/item\n//= require geoblacklight/modules/layer_opacity\n//= require geoblacklight/modules/metadata_download_button\n//= require geoblacklight/modules/metadata\n//= require geoblacklight/modules/relations\n//= require geoblacklight/modules/results\n//= require geoblacklight/modules/svg_tooltips\n//= require geoblacklight/modules/util\n// Local Customization - End\n\n//= require geoblacklight/downloaders\n//= require leaflet-iiif\n//= require esri-leaflet\n</code></pre> <p>As included in the code snippet above, add a file named <code>app/assets/javascripts/geoportal/modules/home.js</code> to your application.</p> <p>Inside that file write these lines:</p> <pre><code>Blacklight.onLoad(function() {\n$('[data-map=\"home\"]').each(function(i, element) {\nvar geoblacklight = new GeoBlacklight.Viewer.Map(this);\nvar data = $(this).data();\n\ngeoblacklight.map.addControl(L.control.geosearch({\nbaseUrl: data.catalogPath,\ndynamic: false,\nsearcher: function() {\nwindow.location.href = this.getSearchUrl();\n},\nstaticButton: '&lt;a href=\"#\" class=\"btn btn-primary\"&gt;Search here&lt;/a&gt;'\n}));\n\n// Local Customization - Start\nvar pruneCluster = new PruneClusterForLeaflet();\n\noboe('/centroids.json')\n.node('*', function( doc ){\nif(typeof doc.c != 'undefined'){\nvar latlng = doc.c.split(\",\")\n\nvar marker = new PruneCluster.Marker(latlng[0],latlng[1], {popup: \"&lt;a href='/catalog/\" + doc.l + \"'&gt;\" + doc.t + \"&lt;/a&gt;\"});\npruneCluster.RegisterMarker(marker);\n}\n}\n)\n.done(function(){\ngeoblacklight.map.addLayer(pruneCluster)\n});\n// Local Customization - End\n});\n});\n</code></pre>"},{"location":"docs/customization/homepage_map_centroid_clusters/#4-add-our-stylesheet-changes-for-the-homepage-map","title":"4. Add our Stylesheet changes for the Homepage Map","text":"<p>All that is missing now are is the CSS changes to style our clusters. Update your <code>application.scss</code> file to include the missing stylesheet:</p> <pre><code>@import 'customizations';\n@import 'bootstrap';\n@import 'blacklight';\n@import 'geoblacklight';\n\n// Local Customization\n@import '@sintef/prune-cluster/dist/LeafletStyleSheet';\n</code></pre> <p>Reload your homepage and you should see something like this:</p> <p></p>"},{"location":"docs/customization/index_maps/","title":"Configuring Index Maps","text":""},{"location":"docs/customization/index_maps/#configuring-index-maps-for-use-in-geoblacklight","title":"Configuring Index Maps for Use in GeoBlacklight","text":""},{"location":"docs/customization/index_maps/#index-maps-introduction","title":"Index Maps: Introduction","text":"<p>The 2020 Geo4LibCamp featured a workshop on index maps that provides useful information if you are new to index maps and want a basic primer. Many of the links below will lead you to relevant parts of this workshop.</p> <p>For a conceptual introduction to index maps (i.e. what are index maps anyway?), see this explanation.</p> <p>Here are examples of \"live\" index maps hosted within the GeoBlacklight instances of Cornell and Stanford.  </p>"},{"location":"docs/customization/index_maps/#making-index-maps","title":"Making Index Maps","text":"<p>Before making index maps for use in GeoBlacklight, it is important to be familiar with OpenIndexMaps, a specific index map standard that is used by the GeoBlacklight community. For an introduction to this standard, see here. For more detailed information on making index maps according to the OpenIndexMaps standard, see here.</p> <p>Index maps that are made according to the OpenIndexMaps standard are encoded in the GeoJSON format. For more information about GeoJSON, see here.  For a longer guide to GeoJSON with additional useful information, please see the Data Curation Network (DCN) primer on GeoJSON.</p> <p>When working with GeoJSON, it is recommended to use QGIS. For a quick overview of QGIS features that are relevant to working with GeoJSON, see here.</p> <p>The following tutorials cover how to make a polygon index map from an existing shapefile, how to make a point index map from a spreadsheet containing coordinates, how to create a grid index map from scratch, and how to create a polygon index map using virtual layer magic.  </p>"},{"location":"docs/customization/index_maps/#adding-customizing-and-displaying-index-maps","title":"Adding, Customizing, and Displaying Index Maps","text":"<p>#588 added index map discovery and preview to GeoBlacklight. Index map preview can be added to a layer by adding an accessible url to a GeoJSON file in a layer's <code>dct_references_s</code> section:</p> <pre><code>\"dct_references_s\": \"{\\\"https://openindexmaps.org\\\": \\\"https://gist.githubusercontent.com/mejackreed/4a44f1f7cc4fbb926068738e903a9e96/raw/fedfb0e599d647920f084627b7dca8f88a358757/stanford-fb897vt9938.geojson\\\"}\",\n</code></pre> <p>As noted above, index maps should be created using the OpenIndexMaps specification. In GeoBlacklight, the <code>label</code> property will be used for the tooltip that appears when the user hovers over a feature on the index map.</p> <p>The index map preview can be customized by overriding the Handlebars template <code>index_map_info.hbs</code> and/or overriding the <code>GeoBlacklight.Util.indexMapTemplate</code> method.</p> <p>#759 added selection styling for GeoJSON index map features and adjusted where style customizations are set. Styling for index map features can be customized in <code>settings.yml</code>. Any style that is set in the <code>DEFAULT</code> section will be applied to all feature states unless overwritten within each specific state. Style options follow the Leaflet Path Options, so any new style added should be from those available.</p>"},{"location":"docs/customization/index_maps/#metadata-for-index-maps","title":"Metadata for Index Maps","text":"<p>Here are some recommendations to keep in mind when generating metadata for index maps:</p> <ul> <li> <p>The Geometry Type/Resource Type field (<code>layer_geom_type_s</code> in Metadata 1.0 or <code>gbl_resourceType_sm</code> in OpenGeoMetadata Aardvark) in the index map's metadata record should reflect the geometry type of the scanned map, aerial photo, LiDAR dataset etc. (i.e. the underlying data for which the index map serves as a contextual guide). It should not indicate the geom type of the index map itself.</p> </li> <li> <p>The Subject field (<code>dc_subject_sm</code> or <code>dct_subject_sm)</code>) in the index map's metadata should include \"index map\" (in addition to other keywords relevant to the underlying data collection).</p> </li> <li> <p>The Source field (<code>dc_source_sm</code> or <code>dct_source_sm</code>) in the metadata records of the underlying data should should reference the index map, since the index map can be seen as a \"source dataset\" that offers a guide to the broader collection.</p> </li> </ul>"},{"location":"docs/customization/index_maps/#committing-geoblacklight-index-maps-to-the-openindexmaps-github-repository","title":"Committing GeoBlacklight Index Maps to the OpenIndexMaps Github repository","text":"<p>Once you have generated your index map and its associated metadata, the index map must go \"live\" on the web. There are different ways to pursue the task of making an index map go \"live\", but the recommended approach is to commit the map/GeoJSON to OpenIndexMaps' Github Repository, which facilitates the discovery and sharing of index maps across institutions.</p> <p>Once your map has been committed to your OpenIndexMaps repository, you will want to take the url for the map's blob (\"blob\" stands for binary large object, which is an object that contains the contents of your file), and add this information back to your GeoBlacklight metadata record (in particular, you'll want to add this information to the <code>dct_references_s</code> section).</p> <p>To get the blob url, click the \"Raw\" link on your map's Github page, and copy the url of the page to which you are taken upon clicking this link.</p> <p>The <code>dct_references_s</code> section of the index map's GeoBlacklight metadata contains relevant external links, and are organized as a serialized JSON array of key/value pairs (for more information on this section in the GeoBlacklight metadata schema, see here). In this case, the blob url which you copied (above) will be the value associated with the OpenIndexMaps url (which is the key).</p> <p>The following site, from the GeoBlacklight team at NYU, provides a script that adds references to existing GeoBlacklight metadata records. This script can be adapted to add the OpenIndexMaps/Blob-url key-value pair into the metadata's <code>dct_references_s</code> section.</p>"},{"location":"docs/customization/item_images/","title":"Adding Support for Item Images","text":""},{"location":"docs/customization/item_images/#adding-support-for-item-images","title":"Adding support for item images","text":""},{"location":"docs/customization/item_images/#geoblacklight-sidecar-images","title":"GeoBlacklight Sidecar Images","text":"<p>The GeoBlacklight Sidecar Images plugin adds support for harvesting remote images from geographic web services.</p>"},{"location":"docs/customization/item_images/#requirements","title":"Requirements","text":"<p>GBL Sidecar Images requires:</p> <ul> <li>Ruby on Rails 5.2</li> <li>ImageMagick</li> </ul> <p>A background job processor like Sidekiq is optional, but highly recommended.</p>"},{"location":"docs/customization/item_images/#example-screenshot","title":"Example Screenshot","text":""},{"location":"docs/customization/item_images/#installation-and-use","title":"Installation and Use","text":"<p>See the plugin project repo for full installation and use documentation.</p>"},{"location":"docs/customization/leaflet_retina_configuration/","title":"Configuring Leaflet for Retina Displays","text":""},{"location":"docs/customization/leaflet_retina_configuration/#configuring-leaflet-for-retina-displays","title":"Configuring Leaflet for retina displays","text":"<p>GeoBlacklight allows implementers to configure the way in which basemaps and tile layers (WMS) are displayed on high pixel density 'retina' screens. When retina detection settings are enabled, Leaflet will request larger tiles to take advantage of the increased resolution.</p>"},{"location":"docs/customization/leaflet_retina_configuration/#tile-layers","title":"Tile layers","text":"<p>In your application's settings.yml, find <code>DETECT_RETINA</code> and set it to <code>true</code> or <code>false</code>.</p> <pre><code>...\nLEAFLET:\n  MAP:\n  LAYERS:\n    DETECT_RETINA: true\n...\n</code></pre> <p>When set to <code>true</code>, Leaflet will load 512 pixel tiles on retina displays.</p> <p></p>"},{"location":"docs/customization/leaflet_retina_configuration/#basemaps","title":"Basemaps","text":"<p>To configure the stock CartoDB basemaps for higher resolution display you will have to override the <code>GeoBlacklight.Basemaps</code> javascript module. In your application, create a <code>geoblacklight</code> directory in <code>app/assets/javascripts/</code> and then create a new file called <code>basemaps.js</code> in that directory.</p> <p></p> <p>Now copy the contents of the Geoblacklight basemaps.js file into your new file. On any basemaps that you want to enable retina, set <code>detectRetina</code> to <code>true</code>. Your file should look something like this:</p> <pre><code>// basemaps\n\nGeoBlacklight.Basemaps = {\n  darkMatter: L.tileLayer(\n    'https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}{retina}.png', {\n      attribution: '&amp;copy; &lt;a href=\"http://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors, &amp;copy; &lt;a href=\"http://cartodb.com/attributions\"&gt;CartoDB&lt;/a&gt;',\n      maxZoom: 18,\n      worldCopyJump: true,\n      retina: '@2x',\n      detectRetina: true\n    }\n  ),\n  positron: L.tileLayer(\n    'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}{retina}.png', {\n      attribution: '&amp;copy; &lt;a href=\"http://www.openstreetmap.org/copyright\"&gt;OpenStreetMap&lt;/a&gt; contributors, &amp;copy; &lt;a href=\"http://cartodb.com/attributions\"&gt;CartoDB&lt;/a&gt;',\n      maxZoom: 18,\n      worldCopyJump: true,\n      retina: '@2x',\n      detectRetina: true\n    }\n  )\n};\n</code></pre>"},{"location":"docs/customization/rendering_html_from_description/","title":"Rendering Line Breaks or HTML from the Description Field","text":""},{"location":"docs/customization/rendering_html_from_description/#rendering-line-breaks-or-html-from-the-description-field","title":"Rendering line breaks or HTML from the Description field","text":"<p>Blacklight includes a helper_method argument for catalog_controller.rb field configuration. You can use that helpful technique to output whatever you need from the solr field value.</p> <p>An example for adding line breaks and even HTML to a dc_description_s field would work like this:</p> <p>1) Add a custom helper for presenting the data, using Rails' simple_format helper</p> <pre><code># ApplicationHelper / application_helper.rb\n\ndef render_html_description(args)\nsimple_format(Array(args[:value]).flatten.join(' '))\nend\n</code></pre> <p>2) Point the show field at your new helper_method</p> <pre><code># CatalogController / catalog_controller.rb\n\nconfig.add_show_field Settings.FIELDS.DESCRIPTION, label: 'Description', itemprop: 'description', helper_method: :render_html_description\n</code></pre> <p>3) Example description value with line breaks (\"\\n\\n\") and some HTML markup, too:</p> <pre><code>  \"dc_description_s\": \"This table shows all 911 police emergency response and officer-initiated calls for service in the City of Detroit since September 20, 2016. Emergency response calls are the result of people calling 911 to request police services.\\n\\n Officer-initiated calls include traffic stops, street investigations and other policing activities (such as observing crimes in progress) where police officers initiate the response. The table includes all calls taken, dispatch, travel, and total response times for those calls serviced by a police agency. The data also include the responding agency, unit, call type and category of each call. Should you have questions about this dataset, you may contact the Commanding Officer of the Detroit Police Department's Crime Intelligence Unit at 313-596-2250 or &lt;a href=\\\"mailto:CrimeIntelligenceBureau@detroitmi.gov\\\"&gt;CrimeIntelligenceBureau@detroitmi.gov&lt;/a&gt;. \",\n</code></pre> <p>4) Now the show page will render like this</p> <p></p>"},{"location":"docs/installation/geoblacklight_quick_start/","title":"GeoBlacklight Quick Start","text":"<p>This guide covers the quickest way to get up and running with GeoBlacklight, including:</p> <ul> <li>How to install GeoBlacklight on your local computer.</li> <li>How to create a new application.</li> <li>How to add and index geospatial content.   </li> </ul>"},{"location":"docs/installation/geoblacklight_quick_start/#installation","title":"Installation","text":"<p>Bootstrap a new GeoBlacklight Ruby on Rails application using the template script:</p> <p><pre><code>DISABLE_SPRING=1 rails new app-name -m https://raw.githubusercontent.com/geoblacklight/geoblacklight/main/template.rb\n</code></pre>   Then run the <code>geoblacklight:server</code> rake task to run the application:</p> <pre><code>$ cd app-name\n$ bundle exec rake geoblacklight:server\n</code></pre> <ul> <li>Visit your GeoBlacklight application at: http://localhost:3000</li> <li>Visit the Solr admin panel at: http://localhost:8983/solr/#/blacklight-core</li> </ul>"},{"location":"docs/installation/geoblacklight_quick_start/#index-example-data","title":"Index Example Data","text":"<p>With your Solr server and Rails server already running (via the <code>geoblacklight:server</code> rake task above), open a new terminal window and index the GeoBlacklight project's test fixtures via:</p>"},{"location":"docs/installation/geoblacklight_quick_start/#bundle-exec-rake-geoblacklightindexseedremote","title":"<pre><code>$ bundle exec rake \"geoblacklight:index:seed[:remote]\"\n</code></pre>","text":""},{"location":"docs/installation/getting_started_developers/","title":"Getting Started for Developers","text":"<p>After reading this guide, you will know:  </p> <ul> <li> How to install a local instance of GeoBlacklight for Development purposes.       <li> How to make small changes to the application.       <li> How to see how those changes look in a browser.    <p>For a more in-depth guide to development, see the tutorials.</p>"},{"location":"docs/installation/getting_started_developers/#dependencies","title":"Dependencies","text":"<p>Software you should have installed on your development computer  </p> <ul> <li>Ruby &gt; 3.0.0</li> <li>Git &gt; 2 </li> <li>Java &gt; JRE version 11 or higher</li> </ul>"},{"location":"docs/installation/getting_started_developers/#installation-for-development","title":"Installation for Development","text":"<p>To set up a working space, navigate to where you'd like to put your test GeoBlacklight app and then clone the repository: <pre><code>$ git clone git@github.com:geoblacklight/geoblacklight.git\n</code></pre> Once the files are downloaded, run <pre><code>$ cd geoblacklight\n$ bundle exec rake geoblacklight:server\n</code></pre></p> <p>This command executes everything needed to run a local version of GeoBlacklight. In order to see the version you have running, open a web browser and go to http://localhost:3000/. You should be able to navigate around the site. Remember that your Rails server is running locally, so to stop it, run ^C (ctrl + c).</p> <p>Refer to the Customization pages of this website for instructions on making look and feel changes. Refer to the Metadata section for instructions on testing new records.</p>"},{"location":"docs/installation/getting_started_developers/#troubleshooting","title":"Troubleshooting","text":"<p>If you run into issues running this rake task, try removing your <code>Gemfile.lock</code> file and removing the test app with <code>rm -R .internal_test_app</code>. Then run <code>bundle install</code> before running the above command again.</p>"},{"location":"docs/installation/getting_started_developers/#running-solr-and-rails-server-separately","title":"Running Solr and Rails server separately","text":"<p>You may decide to run either the Solr server or Rails server separately. With Solr, for instance, run <pre><code>$ rake geoblacklight:solr\n</code></pre> Then, open another Terminal window, navigate to the place where your app is located, and run: <pre><code>$ rake engine_cart:server\n</code></pre> Once the server is running, you can open a web browser and visit the URL it prompts, usually http://localhost:8983/solr/#/blacklight-core to see the admin interface of your test instance of Solr. As before, remember that ^C (ctrl + c) stops the server.</p>"},{"location":"docs/installation/getting_started_developers/#unit-testing","title":"Unit Testing","text":""},{"location":"docs/installation/getting_started_developers/#running-all-the-tests","title":"Running all the tests","text":"<p>As you develop and make changes, you may want to run tests on parts of the app to see if any warning occur. You can run the following to test the app <pre><code>$ rake ci\n</code></pre> Note that a test like this could take up to 5-6 minutes to complete, or longer. Warnings, deprecations, and other messages will be printed on your Terminal screen.</p>"},{"location":"docs/installation/getting_started_developers/#running-the-tests-separately","title":"Running the tests separately","text":"<p><pre><code>$ rake geoblacklight:solr\n</code></pre> Then, in another terminal window: <pre><code>$ rspec spec/\n</code></pre> Note: It is not necessary to run tests after every change you make. You can, for instance, change the name of a facet field, save your file, and then refresh your browser to see the change. However, if you add a new fixture metadata record, you will have to stop the servers and then restart them so the new file will be indexed.</p>"},{"location":"docs/installation/getting_started_developers/#browser-testing","title":"Browser Testing","text":"<p>Cross-browser testing provided by:</p> <p></p>"},{"location":"docs/installation/getting_started_developers/#helpful-development-tools","title":"Helpful Development Tools","text":""},{"location":"docs/installation/getting_started_developers/#version-managers","title":"Version Managers","text":"<p>Using version management tools for compatible versions of Ruby (rvm, rbenv, asdf) and Node (nvm, asdf) can make development easier.</p>"},{"location":"docs/installation/getting_started_developers/#asdf","title":"asdf","text":"<p>Many developers like asdf because you can manage versions for Ruby and Node in a single utility. For developers who use asdf, it is helpful to add a <code>.tool-versions</code> file for each app.</p> <p>Example: <pre><code>ruby 2.7.5\nnodejs 17.4.0\njava openjdk-11.0.2\n</code></pre></p>"},{"location":"docs/overview/contributing/","title":"Contributing to the project","text":"<p>GeoBlacklight is a collaborative open source project and contributions are welcome. This contributing guide is borrowed in part from the Samvera Contributing Guide and the Blacklight Contributing Wiki.</p>"},{"location":"docs/overview/contributing/#who-can-contribute","title":"Who can contribute?","text":"<p>Anyone is welcome to contribute to GeoBlacklight. We follow a set of contribution practices to maintain a technically sustainable and stable software project for everyone.</p>"},{"location":"docs/overview/contributing/#reporting-issues","title":"Reporting issues","text":"<p>Did you find a bug in GeoBlacklight or interested in a new feature? Report it by creating an issue on our GitHub Issue Tracker.</p> <ul> <li>You will need to have a GitHub account</li> <li>For bugs, please include the following information:<ul> <li>Provide a descriptive summary</li> <li>Explain the expected behavior</li> <li>Explain the actual behavior</li> <li>Provide steps to reproduce the actual behavior</li> </ul> </li> </ul>"},{"location":"docs/overview/contributing/#geoblacklight-software-versioning","title":"GeoBlacklight Software Versioning","text":"<p>GeoBlacklight follows the practice of Semantic Versioning for software releases. The declared semantically versioned public API includes:</p> <ul> <li>the public GeoBlacklight Ruby codebase classes</li> <li>the GeoBlacklight JavaScript interface</li> <li>the GeoBlacklight view interface</li> </ul>"},{"location":"docs/overview/contributing/#contributing-code-or-documentation","title":"Contributing code or documentation","text":"<p>GeoBlacklight welcomes code and documentation contributions from anyone. We follow the pull request model for contributing on GitHub. GeoBlacklight uses a suite of tests to express its features and protect from bugs.</p> <p>When proposing major new features that may introduce a breaking change, please make sure to communicate with the community so the full implications can be evaluated. Others may be able to help make these changes backwards-compatible with existing versions.</p>"},{"location":"docs/overview/contributing/#pull-request-overview","title":"Pull request overview","text":"<ol> <li>Fork it ( http://github.com/my-github-username/geoblacklight/fork )</li> <li>Create your feature branch (<code>git checkout -b my-new-feature</code>)</li> <li>Commit your changes (<code>git commit -am 'Add some feature'</code>)</li> <li>Push to the branch (<code>git push origin my-new-feature</code>)</li> <li>Create new Pull Request</li> </ol>"},{"location":"docs/overview/contributing/#merging-changes","title":"Merging Changes","text":"<ul> <li>Committers are discouraged from merging their own pull requests.</li> <li>Please take the time to review the changes and get a sense of what is being changed. Things to consider:</li> <li>Does the commit message explain what is going on?</li> <li>Does the code changes have tests? Not all changes need new tests, some changes are refactorings</li> <li>Do all new methods, modules, and classes have comments? Do changed methods, modules, and classes have comments?</li> <li>Does the commit contain more than it should? Are two separate concerns being addressed in one commit?</li> <li>Did the Travis tests complete successfully?</li> <li>If you are uncertain, bring other contributors into the conversation by creating a comment that includes their @username.</li> <li>If you like the pull request, but want others to chime in, create a +1 comment and tag a user.</li> </ul> <p>If you wish to ask questions or participate further, email the GeoBlacklight Working Group at geoblacklight-working-group@googlegroups.com.</p>"},{"location":"docs/overview/metadata/","title":"Metadata","text":"<p>GeoBlacklight uses a lightweight metadata schema designed for geospatial resource discovery. The schema enables keyword searches, faceted refinement, and spatial map searching.</p> <p>Metadata for GeoBlacklight is documented on the OpenGeoMetadata website.</p> <p>Metadata Schema for GeoBlacklight versions 4.x: Beginning with GeoBlacklight version 4, the metadata schema is OpenGeoMetadata, version Aardvark.</p> <p>Metadata Schema for GeoBlacklight versions 2.x - 3.x: The schema for GeoBlacklight up to versions 3.x is the GeoBlacklight Metadata 1.0 schema.</p> <p>Upgrading Metadata from GBL 1.0 to OGM Aardvark: See the metadata upgrade guide on OpenGeoMetadata</p>"},{"location":"docs/overview/releases/","title":"Releases","text":"<p>GeoBlacklight release and technology dependency matrix.</p> GBL v3 LTS GBL v4 \u2022 Current Major Release GBL v5 \u2022 Next Major Release Support Status Released 2020; Ends 2025 Released 2022; Ends 2026 ETA 2024 Metadata GBL 1.0 Aardvark Aardvark Ruby v3+ v3+ v3.2+ Ruby on Rails v6-v7 v6-v7 v7.0+ Blacklight v7 v7 v8+ Bootstrap v4 v4 v5 ViewComponents Few Few Many JavaScript (JS) jQuery / ES5 jQuery / ES5 ES6 (Modern JavaScript) Published to NPM JS Map Library Leaflet Leaflet TBD Asset Management Sprockets Sprockets Import Maps + Bundling Apache Solr &lt;= v8 v8-v9+ v9+ Production RDBMS N/A N/A PostgreSQL Background Queue N/A N/A Sidekiq + Redis GeoServer Optional Optional Optional"},{"location":"docs/overview/releases/#recommendations","title":"Recommendations","text":""},{"location":"docs/overview/releases/#metadata","title":"Metadata","text":"<ul> <li>Aardvark (Recommended)</li> <li>GBL 1.0 (Deprecated)</li> </ul>"},{"location":"docs/overview/releases/#ruby","title":"Ruby","text":"<ul> <li>3.2 (Recommended)</li> <li>2.7 / Support Ends 31 Mar 2023</li> </ul>"},{"location":"docs/overview/releases/#ruby-on-rails","title":"Ruby on Rails","text":"<ul> <li>7.0+ (Recommended)</li> <li>6.1</li> <li>6.0 / Support Ends June 1, 2023</li> </ul>"},{"location":"docs/overview/releases/#blacklight","title":"Blacklight","text":"<ul> <li>v7+ (Recommended)</li> <li>v8 / Will be supported in GBL v5+</li> </ul>"},{"location":"docs/overview/releases/#bootstrap","title":"Bootstrap","text":"<ul> <li>v4 (Recommended)</li> <li>v5 / Will be supported in GBL v5+</li> </ul>"},{"location":"docs/overview/releases/#viewcomponents","title":"ViewComponents","text":"<ul> <li>GBL v5 (Required)</li> <li>GBL v4 (Recommended)</li> </ul>"},{"location":"docs/overview/releases/#javascript","title":"Javascript","text":"<ul> <li>GBL v5 - ES6 / Modern Javascript (Required)</li> <li>GBL v4 / jQuery + ES5 (Recommended)</li> </ul>"},{"location":"docs/overview/releases/#map-library","title":"Map Library","text":"<ul> <li>Leaflet (Recommended)</li> <li>TBD / GBL v5+</li> </ul>"},{"location":"docs/overview/releases/#apache-solr","title":"Apache Solr","text":"<ul> <li>v9+ (Recommended)</li> <li>&lt;8.11 versions are End Of Life (EOL)</li> </ul>"},{"location":"docs/overview/releases/#production-rdbms","title":"Production RDBMS","text":"<ul> <li>PostgreSQL (Recommended)<ul> <li>For potential adopters of GEOMG</li> </ul> </li> </ul>"},{"location":"docs/overview/releases/#background-queue","title":"Background Queue","text":"<ul> <li>Not Required</li> <li>Sidekiq + Redis (Recommended)<ul> <li>For potential adopters of GEOMG</li> <li>Potential future GBL enhancement: Background Downloads</li> </ul> </li> </ul>"},{"location":"docs/overview/releases/#geoserver","title":"GeoServer","text":"<ul> <li>Not Required</li> <li>Used by many GeoBlacklight adopters: Harvard, Princeton, Stanford</li> </ul>"},{"location":"docs/overview/what_is_geoblacklight/","title":"What is GeoBlacklight?","text":"<p>GeoBlacklight is an open-source Ruby on Rails software application for discovering geospatial content, including GIS datasets, web services, and digitized paper maps. Based on the popular open-source software project Blacklight, GeoBlacklight began in 2014 as a collaboration by MIT, Princeton, and Stanford aiming to build off of the successes of the Blacklight Solr-powered discovery interface and the multi-institutional OpenGeoportal federated metadata sharing communities. As of 2022, it is used by over 25 academic libraries and cultural heritage institutions to provide a search engine across a federated catalog of geospatial data. For examples of how GeoBlacklight is used by our community, view our gallery.  </p>"},{"location":"docs/overview/what_is_geoblacklight/#interested-in-collaborating-on-geoblacklight","title":"Interested in collaborating on GeoBlacklight?","text":"<p>We are actively looking for community input and development partners. View our page on how you can contribute to GeoBlacklight.  </p>"},{"location":"docs/overview/what_is_geoblacklight/#key-features-of-geoblacklight","title":"Key Features of GeoBlacklight","text":"<ul> <li>Text and spatial search with ranking</li> <li>Facet by institution, year, publisher, data type, access, format</li> <li>Facet by place, subject</li> <li>Results list view with icons, snippets, and map view of bounding boxes</li> <li>Spatial search on map in result list</li> <li>Detail map view for WMS features with feature inspection</li> <li>IIIF scanned map viewer</li> <li>Download the original file (Shapefile, GeoTIFF, GeoJSON, Esri Geodatabase, GeoPackage, or other SQLite database)</li> <li>Download generated Shapefile/GeoTIFF/KML/GeoJSON</li> <li>Built-in sample Solr 8.3+ index</li> <li>Built on top of Blacklight platform</li> <li>Search history</li> <li>Bookmark layers</li> <li>Share link via email</li> <li>Sort by relevance, year, title</li> <li>Customizable skin and facets</li> </ul>"},{"location":"docs/production/hardware_recommendations/","title":"Hardware Recommendations","text":"<p>Running GeoBlacklight in production has modest hardware requirements. Your local IT system administrators and DevOps personnel will be critial in shaping your deployment environment.</p>"},{"location":"docs/production/hardware_recommendations/#example-production-environments","title":"Example Production Environments","text":""},{"location":"docs/production/hardware_recommendations/#b1gbtaa-geoportal","title":"B1G/BTAA Geoportal","text":"<p>Currently (9/2022) the B1G/BTAA Geoportal is running on AWS web services in production with these hardware specs:</p>"},{"location":"docs/production/hardware_recommendations/#solr-server","title":"Solr server","text":"<ul> <li>4GB RAM</li> <li>2 CPU cores</li> <li>Java Xmx configured for 3GB memory</li> <li>OS base disk: small, at least 8GB for Linux but not much more needed</li> <li>Solr data partition: 40GB (in practice, &lt;10GB in use for BTAA)</li> </ul>"},{"location":"docs/production/hardware_recommendations/#webrails-server","title":"Web/Rails server","text":"<ul> <li>8GB RAM</li> <li>2 CPU cores</li> <li>OS base disk: at least 20GB for Linux</li> <li>Data partition: 60GB for ample thumbnail caching space</li> <li>Puma Rails server: Recommend 2 workers, 8 threads per worker in this configuration. More threads will necessitate more system memory</li> </ul>"},{"location":"docs/production/implementation_recommendations/","title":"Implementation Recommendations","text":"<p>Adhering to local IT best practices will help your GeoBlacklight install get up and running with optimal support from your IT staff. Below are some discussion points worth discussing locally as you move your GBL application to production:</p>"},{"location":"docs/production/implementation_recommendations/#analytics","title":"Analytics","text":"<p>You will want to collect web analytics for your application. Some institutions have policies in place to protect the anonymity of web users. Be sure to discuss how analytics will be implemented and monitored.</p>"},{"location":"docs/production/implementation_recommendations/#sitemap-and-robotstxt","title":"Sitemap and robots.txt","text":"<p>A sitemap and a robots.txt file will help you keep bots from crawling your application in ways that would cause significant performance issues.</p> <p>For example, in the B1G Geoportal, we use the sitemap_generator rubygem and a cronjob to keep a sitemap up to date:</p> <pre><code># config/sitemap.rb\nsolr = RSolr.connect url: Blacklight.connection_config[:url]\n\n# Select all the docs from Solr\nresponse = sol.get('select', params: {q: '*:*', fl: 'id', rows: 9999999})\n\n# Build a flat sorted array of all document slugs\nslugs = response['response']['docs'].map { |doc| doc['id'] }.sort\n\n# Set the host name for URL creation\nSitemapGenerator::Sitemap.default_host = 'https://geo.btaa.org'\nSitemapGenerator::Sitemap.create do\n# Put links creation logic here.\n#\n# The root path '/' and sitemap index file are added automatically for you.\n# Links are added to the Sitemap in the order they are specified.\n#\n# Usage: add(path, options={})\n#        (default options are used if you don't specify)\n#\n# Defaults: :priority =&gt; 0.5, :changefreq =&gt; 'weekly',\n#           :lastmod =&gt; Time.now, :host =&gt; default_host\n#\n\nslugs.each { |slug| add \"/catalog/#{slug}\" }\nend\n</code></pre> <pre><code># whenever gem\nevery :day, at: '12:30am', roles: [:app] do\nrake 'sitemap:refresh'\nend\n</code></pre> <p>You'll likely want to disallow any code paths that hit Solr with a search query:</p> <pre><code>User-agent: *\nDisallow: /?q=\nDisallow: /*?q=*\nDisallow: /?f\nDisallow: /*?f*\nDisallow: /?_\nDisallow: /?bbox\nDisallow: /?page=\nDisallow: /bookmarks\nDisallow: /catalog.html?f\nDisallow: /catalog.html?_\nDisallow: /catalog.atom\nDisallow: /catalog.rss\nDisallow: /catalog/*/relations\nDisallow: /catalog/facet/*\nDisallow: /catalog/*/web_services\nDisallow: /catalog/email\nDisallow: /catalog/opensearch\nDisallow: /catalog/range_limit\nDisallow: /catalog/sms\nDisallow: /saved_searches\nDisallow: /search_history\nDisallow: /suggest\nDisallow: /users\nDisallow: /404\nDisallow: /422\nDisallow: /500\n</code></pre> <p>You might also want to disallow bots that aggressively index content as well:</p> <pre><code>User-agent: AhrefsBot\nDisallow: /\nUser-agent: SemrushBot\nDisallow: /\nUser-agent: PetalBot\nDisallow: /\nUser-agent: BLEXBot\nDisallow: /\nUser-agent: DotBot\nDisallow: /\nUser-agent: DataForSeoBot\nDisallow: /\n</code></pre>"},{"location":"docs/production/implementation_recommendations/#uptime-and-performance-monitoring","title":"Uptime and Performance Monitoring","text":"<p>Your local IT staff should implement uptime and performance monitoring for your production GeoBlacklight application.</p> <p>Systemd for process / uptime management and Nagios/Zabbix/CloudWatch for alerting are common tools. Third party options like AppSignal and UptimeRobot can help, too.</p>"},{"location":"docs/production/implementation_recommendations/#data-backups","title":"Data Backups","text":"<p>Discuss options for automatically backing up your application data from Solr and your application's relational database. Having a backup of your data will help you restore service after an unplanned interruption or corrupted index.</p> <p>See the Apache Solr Reference Guide's Backup and Restore chapter for more details.</p>"},{"location":"docs/production/implementation_recommendations/#log-rolling","title":"Log Rolling","text":"<p>You will need to schedule your application logs to periodically rotate to maintain the size of these files. The <code>logrotate</code> utility can be very helpful here.</p>"},{"location":"docs/production/implementation_recommendations/#useful-cron-tasks","title":"Useful Cron Tasks","text":"<p>A few cronjobs will help keep your database lean. These examples use the popular whenever rubygem.</p>"},{"location":"docs/production/implementation_recommendations/#delete-old-searches","title":"Delete Old Searches","text":"<pre><code># Clean up recent anonymous search records\nevery :day, at: '2:30am', roles: [:app] do\nrake 'blacklight:delete_old_searches[7]'\nend\n</code></pre>"},{"location":"docs/production/implementation_recommendations/#delete-old-guest-users","title":"Delete Old Guest Users","text":"<pre><code># Cleans up anonymous user accounts created by search sessions\nevery :day, at: '1:30am', roles: [:app] do\nrake 'devise_guests:delete_old_guest_users[2]'\nend\n</code></pre>"},{"location":"docs/production/periodic_maintenance/","title":"Periodic Maintenance","text":"<p>Once your GBL application is running in production, you'll need to schedule some periodic maintenance sprints to keep things up to date and running happily.</p>"},{"location":"docs/production/periodic_maintenance/#test-suite-maintenance","title":"Test Suite Maintenance","text":"<p>The best way to future-proof your GBL install is to write and maintain a local test suite that provides coverage for basic application functionality.</p> <p>As you upgrade versions of GeoBlacklight, Blacklight, Ruby on Rails, or Ruby, this test suite is your insurance that the application is running as expected after these upgrades are implemented. If upon upgrading GeoBlacklight or another core component, you test suite begins to fail, you'll know you have some development work to complete to successfully finish the upgrade.</p>"},{"location":"docs/production/periodic_maintenance/#geoblacklight-releases","title":"GeoBlacklight Releases","text":"<p>GBL usually releases new versions of the software after the Winter and Summer community sprints. Schedule some time for your local development team to review the latest GBL release and upgrade notes on a biannual timeframe.</p>"},{"location":"docs/production/periodic_maintenance/#blacklight-releases","title":"Blacklight Releases","text":"<p>Upstream releases of Blacklight can have a significant impact on GeoBlacklight installations. The Blacklight community is very good at leaving deprecation warnings in blacklight releases to help the GeoBlacklight community and local adopters keep their code maintained.</p>"},{"location":"docs/production/periodic_maintenance/#ruby-and-ruby-on-rails-releases","title":"Ruby and Ruby on Rails Releases","text":"<p>Blacklight and GeoBlacklight will adjust their test matrices for new releases of Ruby and Ruby on Rails to ensure proper support.</p> <p>Commonly, there is no need to rush to upgrade to a new Ruby or Ruby on Rails release, unless there is a significant security issue to resolve.</p>"},{"location":"docs/tutorials/tutorials/","title":"Tutorials","text":"<p>These tutorials were developed by members of the GeoBlacklight community and are designed to help users get started with GeoBlacklight. We are currently in the process of updating these tutorials; please refer to the quick start guides in the meantime!</p>"},{"location":"docs/upgrading/Upgrading_to_version_2_0/","title":"Upgrading to Version 2.0","text":""},{"location":"docs/upgrading/Upgrading_to_version_2_0/#upgrading-to-geoblacklight-20","title":"Upgrading to GeoBlacklight 2.0","text":"<p>While we suggest using the latest version of GeoBlacklight to take advantage of its modern features, sometimes you need to upgrade to an older release. GeoBlacklight 2.0 adds support for Blacklight 7.0, which itself includes several significant component upgrades:</p> <ul> <li>Bootstrap 4</li> <li>Rails 5.2 support</li> <li>Webpacker support (see below)</li> <li>JSON-API support</li> <li>Solr 7.2+ support</li> </ul> <p>The Bootstrap 3 to Bootstrap 4 migration will require existing GeoBlacklight installations to update any local view or layout customizations they have created. See the Blacklight guide on updating Bootstrap for additional assistance.</p>"},{"location":"docs/upgrading/Upgrading_to_version_2_0/#blacklight-7-upgrades","title":"Blacklight 7 upgrades","text":""},{"location":"docs/upgrading/Upgrading_to_version_2_0/#update-user-model","title":"Update User Model","text":"<p>With the release of Blacklight 7, the <code>Blacklight::Utils</code> Module has been deprecated.  <code>User</code> Models must have the following removed:   <pre><code>class User &lt; ApplicationRecord\n## Please remove or comment this code:\n##\n# if Blacklight::Utils.needs_attr_accessible?\n#   attr_accessible :email, :password, :password_confirmation\n# end\n\n# Connects this user object to Blacklights Bookmarks.\ninclude Blacklight::User\n# Include default devise modules. Others available are:\n# :confirmable, :lockable, :timeoutable, :trackable and :omniauthable\ndevise :database_authenticatable, :registerable,\n:recoverable, :rememberable, :validatable\n\n# Method added by Blacklight; Blacklight uses #to_s on your\n# user class to get a user-displayable login/identifier for\n# the account.\ndef to_s\nemail\nend\nend\n</code></pre></p>"},{"location":"docs/upgrading/Upgrading_to_version_2_0/#update-catalogcontroller","title":"Update CatalogController","text":"<p>Release 2.0 provides the ability to request JSON representations of Solr Documents by using the  path <code>/catalog/:id/raw</code> In other words, append <code>/raw</code> to the end of a catalog URL stem. Note that this is different from previous versions of GeoBlacklight and is a result of Blacklight 7 incorporating a JSON:API compliant specification. Appending <code>.json</code> to the end of a catalog URL stem will now return a JSON:API compliant record, which is nested and not Solr compatible. For more information, see the metadata documentation.</p> <p>The JSON record return is enabled within the <code>CatalogController</code> by setting <code>config.raw_endpoint.enabled</code> to <code>true</code>:   <pre><code>  configure_blacklight do |config|\n\n# Ensures that JSON representations of Solr Documents can be retrieved using\n# the path /catalog/:id/raw\n# Please see https://github.com/projectblacklight/blacklight/pull/2006/\nconfig.raw_endpoint.enabled = true\n\n## Default parameters to send to solr for all search-like requests. See also SolrHelper#solr_search_params\n## @see https://lucene.apache.org/solr/guide/6_6/common-query-parameters.html\n## @see https://lucene.apache.org/solr/guide/6_6/the-dismax-query-parser.html#TheDisMaxQueryParser-Theq.altParameter\nconfig.default_solr_params = {\n</code></pre></p>"},{"location":"docs/upgrading/Upgrading_to_version_2_0/#webpacker","title":"Webpacker","text":"<p>Rails currently offers the ability for one to manage JavaScript source files and package dependencies using the Webpacker Gem.  By default, this is available for usage in GeoBlacklight, but not enabled.</p>"},{"location":"docs/upgrading/Upgrading_to_version_2_0/#requirements","title":"Requirements","text":"<p>Webpacker requires that either Yarn or the Node Package Manager be installed in the environment where the GeoBlacklight implementation is deployed.</p>"},{"location":"docs/upgrading/Upgrading_to_version_2_0/#installing-webpacker","title":"Installing Webpacker","text":"<p>From within the root directory path of the GeoBlacklight application, please execute the following:   <pre><code>bundle exec rails generate geoblacklight:webpacker --force\n</code></pre></p> <p>This will create a number of directories and files, most notably:   - <code>package.json</code>   - <code>app/javascript/packs/application.js</code></p> <p>Running <code>yarn install</code> or <code>npm install</code>, followed by <code>yarn upgrade</code>/<code>npm update</code> would be best in order to install and update any JavaScript dependencies.</p>"},{"location":"docs/upgrading/Upgrading_to_version_2_0/#adding-packs","title":"Adding packs","text":"<p>In order to add JavaScript packs to a GeoBlacklight application, one should override the view template <code>app/views/layouts/blacklight/base.html.erb</code> (provided in https://github.com/projectblacklight/blacklight/blob/v7.0.1/app/views/layouts/blacklight/base.html.erb) with the following line:   <pre><code>    &lt;%= javascript_include_tag \"application\" %&gt;\n    &lt;%= javascript_pack_tag 'application' %&gt;\n    &lt;%= csrf_meta_tags %&gt;\n&lt;%= content_for(:head) %&gt;\n  &lt;/head&gt;\n</code></pre></p> <p>For any new JS file added to <code>app/javascript/packs</code>, this will need to be added with a different name.  For example, <code>app/javascript/packs/my_new_script.js</code> would be added with:   <pre><code>    &lt;%= javascript_include_tag \"application\" %&gt;\n    &lt;%= javascript_pack_tag 'application' %&gt;\n    &lt;%= javascript_pack_tag 'my_new_script' %&gt;\n&lt;%= csrf_meta_tags %&gt;\n    &lt;%= content_for(:head) %&gt;\n  &lt;/head&gt;\n</code></pre></p>"},{"location":"docs/upgrading/Upgrading_to_version_2_0/#running-the-webpack-server","title":"Running the Webpack server","text":"<p>Release 2.0 uses the Foreman Gem in order to run both the Rails server and Webpack development server in parallel.  This is useful for development environments where the Webpack dev. server listens for source file changes, and automatically recompiles packs.  A file (named <code>Procfile</code>) within the root path of the application should be created with the following content:   <pre><code>rails: bin/rails server --port=3000\nwebpack: bin/webpack-dev-server\n</code></pre></p> <p>This can then be executed using <code>bundle exec foreman start</code>.</p> <p>For deployments to testing, staging, or production environments, it is perhaps preferred to simply precompile the Webpack builds.  This can be achieved with the task <code>bundle exec rails webpacker:compile</code></p>"},{"location":"docs/upgrading/Upgrading_to_version_2_0/#geoblacklight-updates","title":"GeoBlacklight updates","text":""},{"location":"docs/upgrading/Upgrading_to_version_2_0/#dropped-leaflet-rails-vendorized-a-rails-savvy-leafletjs-file","title":"Dropped leaflet-rails; Vendorized a rails-savvy leaflet.js file","text":"<p>To fix a Leaflet FeatureLayer asset path issue, we decided to remove leaflet-rails as a gem dependency. Instead of the gem, we're now using a slightly modified leaflet.js file in vendor/javascripts.</p> <p>For existing GBL installations, you will need to remove the require leaflet-rails statement from lib/geoblacklight/engine.rb to avoid an error upon application restart.</p>"},{"location":"docs/upgrading/Upgrading_to_version_2_0/#added-spatial-search-bbox-overlapratio-relevancy-option","title":"Added Spatial Search BBox overlapRatio Relevancy Option","text":"<p>A new Settings constant was added to provide optional support for Solr's BBoxField overlapRatio relevancy boosting within spatial searches.</p> <p>For existing GBL installations, you will need to add the Settings.OVERLAP_RATIO_BOOST setting to your settings.yml file.</p> <pre><code>    # The bf boost value for overlap ratio\n    OVERLAP_RATIO_BOOST: '2'\n</code></pre> <p>If this option has a value, the boost will be appended to the spatial search like so:</p> <pre><code>    if Settings.OVERLAP_RATIO_BOOST\nsolr_params[:overlap] =\n\"{!field uf=* defType=lucene f=solr_bboxtype score=overlapRatio}Intersects(#{envelope_bounds})\"\nsolr_params[:bf] = \"$overlap^#{Settings.OVERLAP_RATIO_BOOST}\"\nend\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_2_0/#relevancy-is-best-tuned-locally","title":"Relevancy is Best Tuned Locally","text":"<p>Everyone's idea of relevancy is different. The default boost value here (\"2\") might not be the best for your collection or user needs. Please adjust this relevancy boost as necessary to ensure best results for your GBL install.</p>"},{"location":"docs/upgrading/Upgrading_to_version_2_0/#homepage","title":"Homepage","text":"<p>The <code>_homepage_text.html.erb</code> view partial has been updated to use a view component for rendering the featured facets feature. You should update any local customizations to this file to use the components.</p>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/","title":"Upgrading to Version 4.0","text":""},{"location":"docs/upgrading/Upgrading_to_version_4_0/#upgrading-to-geoblacklight-40","title":"Upgrading to GeoBlacklight 4.0","text":""},{"location":"docs/upgrading/Upgrading_to_version_4_0/#upgrade-steps","title":"Upgrade Steps","text":"<p>There are several steps to complete this major release upgrade. Detailed notes follow for each of the following upgrade steps:</p> <ol> <li>Gemfile</li> <li>Apache Solr</li> <li>Data Migration</li> <li>Application Configuration</li> <li>Application Changes</li> </ol>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#1-gemfile","title":"1. Gemfile","text":"<p>Update your <code>Gemfile</code> to GBL v4:</p> <pre><code>  gem 'geoblacklight', '~&gt; 4.0'\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#2-apache-solr","title":"2. Apache Solr","text":"<p>GeoBlacklight now requires Solr 8.3 or higher.</p> <p>GBL's Solr configuration files are updated to reflect the Aardvark metadata element list and support new complex geometries features. See the default versions of schema.xml and solrconfig.xml and update your local files as necessary.</p> <ul> <li>solr/config/schema.xml</li> <li>solr/config/solrconfig.xml</li> </ul>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#3-data-migration","title":"3. Data Migration","text":"<p>Migrate your Solr documents from the GBL v1.0 metadata standard to OGM Aardvark. GBL community documentation and migration tools are listed below:</p> <ul> <li>OGM's Guide for Upgrading Metadata</li> <li>Full GBL 1.0 to OGM Aardvark Crosswalk</li> <li>Tools and Techniques for Upgrading</li> <li>gbl2aardvark: convert GeoBlacklight 1.0 json files to Aardvark </li> </ul>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#4-application-configuration","title":"4. Application Configuration","text":"<p>Review the configuration files for your GBL instance. You will need to update your <code>settings.yml</code> file and <code>catalog_controller.rb</code> file to use the new Aardvark field mappings. See the default versions of these files in GeoBlacklight v4 and alter your files as necessary:</p> <p>You will also need to search your local application code for any old <code>Settings.FIELDS.(X)</code> mappings and update them as necessary.</p>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#settings-configsettingsyml","title":"Settings (config/settings.yml)","text":"<p>Many GBLv4 configuration changes take place in the <code>settings.yml</code> file.</p> <p>List of GBLv4 settings.yml changes:</p> <ul> <li>Solr field mappings: Settings.FIELDS</li> <li>GeoBlacklight Params: Settings.GBL_PARAMS</li> <li>Relationships to display: Settings.RELATIONSHIPS_SHOWN</li> <li>Parent/Child SVG Icon titles</li> </ul>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#solr-field-mappings-settingsfields","title":"Solr field mappings: Settings.FIELDS","text":"<p>With the adoption of the OGM Aardvark metadata schema, we need to update all the <code>Settings.FIELDS</code> values for Aardvark. Here are the default GBLv4 values. If you have additional local customizations here, you'll need carry those over, too.</p> <pre><code># Solr field mappings\nFIELDS:\n:ACCESS_RIGHTS: 'dct_accessRights_s'\n:ALTERNATIVE_TITLE: 'dct_alternative_sm'\n:CENTROID: 'dcat_centroid'\n:CREATOR: 'dct_creator_sm'\n:DATE_ISSUED: 'dct_issued_s'\n:DATE_RANGE: 'gbl_dateRange_drsim'\n:DESCRIPTION: 'dct_description_sm'\n:FORMAT: 'dct_format_s'\n:FILE_SIZE: 'gbl_fileSize_s'\n:GEOREFERENCED: 'gbl_georeferenced_b'\n:ID: 'id'\n:IDENTIFIER: 'dct_identifier_sm'\n:INDEX_YEAR: 'gbl_indexYear_im'\n:IS_PART_OF: 'dct_isPartOf_sm'\n:IS_REPLACED_BY: 'dct_isReplacedBy_sm'\n:THEME: 'dcat_theme_sm'\n:KEYWORD: 'dcat_keyword_sm'\n:LANGUAGE: 'dct_language_sm'\n:LAYER_MODIFIED: 'gbl_mdModified_dt'\n:LICENSE: 'dct_license_sm'\n:MEMBER_OF: 'pcdm_memberOf_sm'\n:METADATA_VERSION: 'gbl_mdVersion_s'\n:MODIFIED: 'gbl_mdModified_dt'\n:OVERLAP_FIELD: 'solr_bboxtype'\n:PUBLISHER: 'dct_publisher_sm'\n:PROVIDER: 'schema_provider_s'\n:REFERENCES: 'dct_references_s'\n:RELATION: 'dct_relation_sm'\n:REPLACES: 'dct_replaces_sm'\n:RESOURCE_CLASS: 'gbl_resourceClass_sm'\n:RESOURCE_TYPE: 'gbl_resourceType_sm'\n:RIGHTS: 'dct_rights_sm'\n:RIGHTS_HOLDER: 'dct_rightsHolder_sm'\n:SOURCE: 'dct_source_sm'\n:SPATIAL_COVERAGE: 'dct_spatial_sm'\n:GEOMETRY: 'locn_geometry'\n:SUBJECT: 'dct_subject_sm'\n:SUPPRESSED: 'gbl_suppressed_b'\n:TEMPORAL_COVERAGE: 'dct_temporal_sm'\n:TITLE: 'dct_title_s'\n:VERSION: 'dct_isVersionOf_sm'\n:WXS_IDENTIFIER: 'gbl_wxsIdentifier_s'\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#geoblacklight-params-settingsgbl_params","title":"GeoBlacklight Params: Settings.GBL_PARAMS","text":"<p>Add the GBL_PARAMS array to <code>settings.yml</code> to whitelist the GBL application params so they are appended to controller methods and search builder queries.</p> <pre><code># Non-search-field GeoBlacklight application permitted params\nGBL_PARAMS:\n- :bbox\n- :email\n- :file\n- :format\n- :id\n- :logo\n- :provider\n- :type\n- :BBOX\n- :HEIGHT\n- :LAYERS\n- :QUERY_LAYERS\n- :URL\n- :WIDTH\n- :X\n- :Y\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#relationships-to-display-settingsrelationships_shown","title":"Relationships to display: Settings.RELATIONSHIPS_SHOWN","text":"<p>The number of item/parent/collection relationships supported within GBLv4 has grown considerably. Add these default values to support the new relationships. You can also add additional relationship keys, fields, and query_types to support local customizations.</p> <pre><code># Relationships to display\nRELATIONSHIPS_SHOWN:\nMEMBER_OF:\nfield: pcdm_memberOf_sm\nquery_type: ancestors\nicon: nil\nlabel: geoblacklight.relations.member_of\nPART_OF_ANCESTORS:\nfield: dct_isPartOf_sm\nquery_type: ancestors\nicon: nil\nlabel: geoblacklight.relations.part_of_ancestors\nPART_OF_DESCENDANTS:\nfield: dct_isPartOf_sm\nquery_type: descendants\nicon: child-item\nlabel: geoblacklight.relations.part_of_descendants\nRELATION:\nfield: dct_relation_sm\nquery_type: ancestors\nicon: nil\nlabel: geoblacklight.relations.relation\nREPLACES:\nfield: dct_replaces_sm\nquery_type: ancestors\nicon: nil\nlabel: geoblacklight.relations.replaces\nREPLACED_BY:\nfield: dct_isReplacedBy_sm\nquery_type: descendants\nicon: nil\nlabel: geoblacklight.relations.replaced_by\nSOURCE_ANCESTORS:\nfield: dct_source_sm\nquery_type: ancestors\nicon: parent-item\nlabel: geoblacklight.relations.ancestor\nSOURCE_DESCENDANTS:\nfield: dct_source_sm\nquery_type: descendants\nicon: child-item\nlabel: geoblacklight.relations.descendant\nVERSION_OF:\nfield: dct_isVersionOf_sm\nquery_type: descendants\nicon: nil\nlabel: geoblacklight.relations.version_of\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#parentchild-svg-icon-titles","title":"Parent/Child SVG Icon titles","text":"<p>Replace these relationship icon file names.</p> <pre><code>SOURCE_ANCESTORS:\n  field: dct_source_sm\n  query_type: ancestors\n- icon: pagelines-brands\n+ icon: parent-item\n label: geoblacklight.relations.ancestor\nSOURCE_DESCENDANTS:\n  field: dct_source_sm\n  query_type: descendants\n- icon: leaf\n+ icon: child-item\n label: geoblacklight.relations.descendant\nVERSION_OF:\n  field: dct_isVersionOf_sm\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#viewer-controls-settingsleafletviewerscontrols","title":"Viewer Controls: Settings.LEAFLET.VIEWERS.*.CONTROLS","text":"<p>GBLv4 includes native support for the <code>Leaflet.fullscreen</code> plugin. Update your Leaflet configuration to include the <code>Fullscreen</code> viewer option.</p> <pre><code># Settings for leaflet\nLEAFLET:\n...\nVIEWERS:\nDYNAMICMAPLAYER:\nCONTROLS:\n- 'Opacity'\n- 'Fullscreen'\nFEATURELAYER:\nCONTROLS:\n- 'Opacity'\n- 'Fullscreen'\nIIIF:\nCONTROLS:\n- 'Fullscreen'\nIMAGEMAPLAYER:\nCONTROLS:\n- 'Opacity'\n- 'Fullscreen'\nINDEXMAP:\nCONTROLS:\n- 'Fullscreen'\nTILEDMAPLAYER:\nCONTROLS:\n- 'Opacity'\n- 'Fullscreen'\nWMS:\nCONTROLS:\n- 'Opacity'\n- 'Fullscreen'\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#catalogcontroller-appcontrollerscatalog_controllerrb","title":"CatalogController (app/controllers/catalog_controller.rb)","text":"<p>Besides the <code>settings.yml</code> configuration changes above, the <code>catalog_controller.rb</code> file holds a great deal of application configuration and it needs to be updated for the new <code>Settings.FIELD</code> values.</p> <p>Here is a list of GBL v4 catalog_controller.rb changes:</p>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#default-solr-params-configdefault_document_solr_params","title":"Default Solr Params / config.default_document_solr_params","text":"<p>This uses the Settings.FIELDS.ID field now.</p> <pre><code>  ## Default parameters to send on single-document requests to Solr...\nconfig.default_document_solr_params = {\n:qt =&gt; 'document',\n:q =&gt; \"{!raw f=#{Settings.FIELDS.ID} v=$id}\"\n}\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#view-defaults-configview-defaults","title":"View Defaults / config.view defaults","text":"<p>Adds the \"map\" split view for catalog#index</p> <pre><code>    # GeoBlacklight Defaults\n# * Adds the \"map\" split view for catalog#index\nconfig.view.split(partials: ['index'])\nconfig.view.delete_field('list')\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#facet-fields-configadd_facet_fields","title":"Facet Fields / config.add_facet_field(s)","text":"<p>These are all now mapped to Aardvark fields. Note: 'icon_facet' partials are now replaced by the <code>item_component: Geoblacklight::IconFacetItemComponent</code></p> <pre><code>    # FACETS\n\n# DEFAULT FACETS\n# to add additional facets, use the keys defined in the settings.yml file\nconfig.add_facet_field Settings.FIELDS.INDEX_YEAR, :label =&gt; 'Year', :limit =&gt; 10\nconfig.add_facet_field Settings.FIELDS.SPATIAL_COVERAGE, :label =&gt; 'Place', :limit =&gt; 8\nconfig.add_facet_field Settings.FIELDS.ACCESS_RIGHTS, label: 'Access', limit: 8, item_component: Geoblacklight::IconFacetItemComponent\nconfig.add_facet_field Settings.FIELDS.RESOURCE_CLASS, label: 'Resource Class', :limit =&gt; 8\nconfig.add_facet_field Settings.FIELDS.RESOURCE_TYPE, label: 'Resource Type', :limit =&gt; 8\nconfig.add_facet_field Settings.FIELDS.FORMAT, :label =&gt; 'Format', :limit =&gt; 8\nconfig.add_facet_field Settings.FIELDS.SUBJECT, :label =&gt; 'Subject', :limit =&gt; 8\nconfig.add_facet_field Settings.FIELDS.THEME, :label =&gt; 'Theme', :limit =&gt; 8\nconfig.add_facet_field Settings.FIELDS.CREATOR, :label =&gt; 'Creator', :limit =&gt; 8\nconfig.add_facet_field Settings.FIELDS.PUBLISHER, :label =&gt; 'Publisher', :limit =&gt; 8\nconfig.add_facet_field Settings.FIELDS.PROVIDER, label: 'Provider', limit: 8, item_component: Geoblacklight::IconFacetItemComponent\nconfig.add_facet_field Settings.FIELDS.GEOREFERENCED, :label =&gt; 'Georeferenced', :limit =&gt; 3\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#gbl-application-facets","title":"GBL Application Facets","text":"<p>Our map-based search feature is now run via a series of (Geo)Blacklight class extensions which require this configuration:</p> <pre><code>    # GEOBLACKLIGHT APPLICATION FACETS\n\n# Map-Based \"Search Here\" Feature\n# item_presenter       - Defines how the facet appears in the GBL UI\n# filter_query_builder - Defines the query generated for Solr\n# filter_class         - Defines how to add/remove facet from query\n# label                - Defines the label used in contstraints container\nconfig.add_facet_field Settings.FIELDS.GEOMETRY, item_presenter: Geoblacklight::BboxItemPresenter, filter_class: Geoblacklight::BboxFilterField, filter_query_builder: Geoblacklight::BboxFilterQuery, within_boost: Settings.BBOX_WITHIN_BOOST, overlap_boost: Settings.OVERLAP_RATIO_BOOST, overlap_field: Settings.FIELDS.OVERLAP_FIELD, label: 'Bounding Box'\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#index-fields-configadd_index_fields","title":"Index Fields / config.add_index_field(s)","text":"<p>The \"Index Fields\" are the values that appear on search results lists. These have been mapped to Aardvark fields.</p> <pre><code>    config.add_index_field Settings.FIELDS.INDEX_YEAR\nconfig.add_index_field Settings.FIELDS.CREATOR\nconfig.add_index_field Settings.FIELDS.DESCRIPTION, helper_method: :snippit\nconfig.add_index_field Settings.FIELDS.PUBLISHER\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#show-fields-configadd_show_fields","title":"Show Fields / config.add_show_field(s)","text":"<p>The \"Show Fields\" are the values that appear on an item detail page. These have been mapped to Aardvark fields, and many non-activated optional fields have been added to the default <code>catalog_controller.rb</code> file, too.</p> <p>View \"Show Field\" configuration online</p>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#sort-fields-configadd_sort_fields","title":"Sort Fields / config.add_sort_field(s)","text":"<p>The GBLv4 default sort fields options have been expanded. Here is the new default value for sorting:</p> <pre><code>    config.add_sort_field 'score desc, dct_title_sort asc', :label =&gt; 'Relevance'\nconfig.add_sort_field \"#{Settings.FIELDS.INDEX_YEAR} desc, dct_title_sort asc\", :label =&gt; 'Year (Newest first)'\nconfig.add_sort_field \"#{Settings.FIELDS.INDEX_YEAR} asc, dct_title_sort asc\", :label =&gt; 'Year (Oldest first)'\nconfig.add_sort_field 'dct_title_sort asc', :label =&gt; 'Title (A-Z)'\nconfig.add_sort_field 'dct_title_sort desc', :label =&gt; 'Title (Z-A)'\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#web-services-changes","title":"Web Services Changes","text":"<p>Our web_services method is no longer a show tool partial. Migrating from GBLv3 to GBLv4, you will need to remove your <code>config.add_show_tools_partial :web_services...</code> line and add the new <code>def web_services</code> method:</p> <p>View new method online</p> <pre><code>  # Custom tools for GeoBlacklight\n- config.add_show_tools_partial :web_services, if: proc { |_context, _config, options| options[:document] &amp;&amp; (Settings.WEBSERVICES_SHOWN &amp; options[:document].references.refs.map(&amp;:type).map(&amp;:to_s)).any? }\n</code></pre> <pre><code>  def web_services\n@response, @documents = action_documents\n\nrespond_to do |format|\nformat.html do\nreturn render layout: false if request.xhr?\n# Otherwise draw the full page\nend\nend\nend\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#locales-configlocalesgeoblacklightenyml","title":"Locales (config/locales/geoblacklight.en.yml)","text":"<p>We have added additional relations entries for GBLv4 config/locales/geoblacklight.en.yml.</p> <p>If you have local overrides or customizations to this file, please include the new relations entries locally.</p>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#5-application-changes","title":"5. Application Changes","text":""},{"location":"docs/upgrading/Upgrading_to_version_4_0/#applicationcontroller-appcontrollersapplication_controllerrb","title":"ApplicationController (app/controllers/application_controller.rb)","text":"<p>GBL installer now includes a <code>before_action</code> method to permit GBL application params. You'll need to add this code to your application_controller.rb file:</p> <pre><code>  before_action :allow_geoblacklight_params\n\ndef allow_geoblacklight_params\n# Blacklight::Parameters will pass these to params.permit\nblacklight_config.search_state_fields.append(Settings.GBL_PARAMS)\nend\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#stylesheets-appassetsstylesheetsapplicationscss","title":"Stylesheets (app/assets/stylesheets/application.scss)","text":"<p>GBL v4 no longer vendorizes the <code>leaflet-label</code> stylesheet. Check your local stylesheet files and remove any <code>*= require leaflet-label</code> or <code>@import 'leaflet-label';</code> lines.</p> <pre><code>- /*\n- *= require leaflet-label\n- */\n</code></pre>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#javascripts-appassetsjavascript","title":"JavaScripts (app/assets/javascript/)","text":"<p>GBL v4 adds a new Leaflet control: Leaflet.fullzoom. If you previously added this feature to your local GBL instance, you'll want to remove your custom implementation. This control can be added to your maps via the <code>settings.yml</code> file (see documentation above).</p>"},{"location":"docs/upgrading/Upgrading_to_version_4_0/#homepage","title":"Homepage","text":"<p>The <code>_homepage_text.html.erb</code> view partial has been updated to use a view component for rendering the featured facets feature. You should update any local customizations to this file to use the components.</p> <pre><code>    &lt;div class='col-sm'&gt;\n      &lt;%= content_tag :h3, t('geoblacklight.home.category_heading') %&gt;\n      &lt;div class='row'&gt;\n        &lt;%= render(Geoblacklight::HomepageFeatureFacetComponent.new(icon: 'home', label: 'geoblacklight.home.institution', facet_field: Settings.FIELDS.PROVIDER, response: @response)) %&gt;\n\n        &lt;%= render(Geoblacklight::HomepageFeatureFacetComponent.new(icon: 'arrow-circle-down', label: 'geoblacklight.home.data_type', facet_field: Settings.FIELDS.RESOURCE_TYPE, response: @response)) %&gt;\n      &lt;/div&gt;\n      &lt;div class='row'&gt;\n        &lt;%= render(Geoblacklight::HomepageFeatureFacetComponent.new(icon: 'globe', label: 'geoblacklight.home.placename', facet_field: Settings.FIELDS.SPATIAL_COVERAGE, response: @response)) %&gt;\n\n        &lt;%= render(Geoblacklight::HomepageFeatureFacetComponent.new(icon: 'tags', label: 'geoblacklight.home.subject', facet_field: Settings.FIELDS.SUBJECT, response: @response)) %&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n</code></pre>"},{"location":"showcase/","title":"Index","text":"<p>Big Ten Academic Alliance Geoportal</p><p>The Big Ten Academic Alliance Geoportal aggregates metadata from 12 different institutions providing a single place to find and use aerial imagery, geospatial data, and scanned maps from multiple GIS data clearinghouses and library catalogs.</p> <p>Colorado GeoLibrary</p><p>The Colorado GeoLibrary is a venture of the University of Colorado Boulder Libraries. The GeoLibrary provides geospatial data access to the University of Colorado and beyond. The purpose of the GeoLibrary is to collect and provide access to data from across the State of Colorado in service of our students and researchers, as well as the general public.</p> <p>CUGIR - Cornell University Geospatial Information Repository</p><p>CUGIR provides free and open access to geospatial data for New York State, as well as worldwide geospatial data created by Cornell researchers.</p> <p>Dryad</p><p>The Dryad Digital Repository is a curated resource that makes research data discoverable, freely reusable, and citable. Dryad provides a general-purpose home for a wide diversity of data types, and it participates in the Data Curation Network.</p> <p>GeoData@Wisconsin</p><p>GeoData@Wisconsin is an online geoportal that provides discovery and access to Wisconsin geospatial data, imagery, and scanned maps.  GeoData@WI represents the holdings of the University of Wisconsin Robinson Map Library archives, plus all known open data portals maintained by Wisconsin geospatial data producers.</p> <p>Harvard Geospatial Library</p><p>The Harvard Geospatial Library provides access to a wealth of geospatial data and maps from the Harvard Library as well as many other partner institutions. Users can conduct map based searches of HGL's catalog and find materials that are ready to use in a GIS, from modern census boundaries and data to images of early maps of the world.</p> <p>Norman B. Leventhal Map Center - Collections</p><p>The Norman B. Leventhal Map Center at the Boston Public Library offers a customized discovery experience for its map collection. This unique application combines GeoBlacklight with the ability to georeference maps and create custom map sets for instruction.</p> <p>NYU - Spatial Data Repository</p><p>The NYU Spatial Data Repository is a search and discovery platform for geospatial data created by NYU's Data Services. The application is the entry point for discovering and accessing NYU's spatial data collections.</p> <p>Princeton University - Digital Maps and Geospatial Data</p><p>The Digital Maps and Geospatial Data tool allows users to search for datasets and scanned historical maps from within the Princeton University Library's own collections, as well as the collections of other institutions.</p> <p>Stanford University - EarthWorks</p><p>EarthWorks is Stanford University Libraries discovery tool for Geographic Information Systems (GIS) data. It combines data sources from many institutions allowing users to search through tens of thousands of geospatial datasets.</p> <p>University of California Berkeley \u2013 GeoData Portal</p><p>The UC Berkeley Library developed GeoData@UC Berkeley to help users find geospatial data and maps. Much of the content is freely available, but some datasets are restricted to UC Berkeley affiliated users.</p> <p>University of Texas at Austin - Texas GeoData Portal</p><p>The Texas GeoData portal is an online interface designed to make it easy for users to search and browse for geospatial data from the collections of the UT Libraries at the University of Texas at Austin and from the collections of other institutions.</p>"},{"location":"blog/page/2/","title":"blog","text":""}]}